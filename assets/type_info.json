{
  "@GlobalScope": {
    "methods": [
      {
        "name": "abs",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "absf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "absi",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "acos",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "acosh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "angle_difference",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "asin",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "asinh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "atan",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "atan2",
        "parameters": [
          {
            "name": "y",
            "type": "float"
          },
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "atanh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bezier_derivative",
        "parameters": [
          {
            "name": "start",
            "type": "float"
          },
          {
            "name": "control_1",
            "type": "float"
          },
          {
            "name": "control_2",
            "type": "float"
          },
          {
            "name": "end",
            "type": "float"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bezier_interpolate",
        "parameters": [
          {
            "name": "start",
            "type": "float"
          },
          {
            "name": "control_1",
            "type": "float"
          },
          {
            "name": "control_2",
            "type": "float"
          },
          {
            "name": "end",
            "type": "float"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bytes_to_var",
        "parameters": [
          {
            "name": "bytes",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "bytes_to_var_with_objects",
        "parameters": [
          {
            "name": "bytes",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "ceil",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "ceilf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "ceili",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "min",
            "type": "Variant"
          },
          {
            "name": "max",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "clampf",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "clampi",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "min",
            "type": "int"
          },
          {
            "name": "max",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "cos",
        "parameters": [
          {
            "name": "angle_rad",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cosh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cubic_interpolate",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "pre",
            "type": "float"
          },
          {
            "name": "post",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cubic_interpolate_angle",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "pre",
            "type": "float"
          },
          {
            "name": "post",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cubic_interpolate_angle_in_time",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "pre",
            "type": "float"
          },
          {
            "name": "post",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "to_t",
            "type": "float"
          },
          {
            "name": "pre_t",
            "type": "float"
          },
          {
            "name": "post_t",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cubic_interpolate_in_time",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "pre",
            "type": "float"
          },
          {
            "name": "post",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "to_t",
            "type": "float"
          },
          {
            "name": "pre_t",
            "type": "float"
          },
          {
            "name": "post_t",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "db_to_linear",
        "parameters": [
          {
            "name": "db",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "deg_to_rad",
        "parameters": [
          {
            "name": "deg",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "ease",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          },
          {
            "name": "curve",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "error_string",
        "parameters": [
          {
            "name": "error",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "exp",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "floor",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "floorf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "floori",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "fmod",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          },
          {
            "name": "y",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "fposmod",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          },
          {
            "name": "y",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "hash",
        "parameters": [
          {
            "name": "variable",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "instance_from_id",
        "parameters": [
          {
            "name": "instance_id",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "inverse_lerp",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "a",
            "type": "float"
          },
          {
            "name": "b",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_inf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_instance_id_valid",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_instance_valid",
        "parameters": [
          {
            "name": "instance",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_nan",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_same",
        "parameters": [
          {
            "name": "a",
            "type": "Variant"
          },
          {
            "name": "b",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_zero_approx",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "lerp",
        "parameters": [
          {
            "name": "from",
            "type": "Variant"
          },
          {
            "name": "to",
            "type": "Variant"
          },
          {
            "name": "weight",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "lerp_angle",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "lerpf",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "linear_to_db",
        "parameters": [
          {
            "name": "lin",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "log",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "max",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "maxf",
        "parameters": [
          {
            "name": "a",
            "type": "float"
          },
          {
            "name": "b",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "maxi",
        "parameters": [
          {
            "name": "a",
            "type": "int"
          },
          {
            "name": "b",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "min",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "minf",
        "parameters": [
          {
            "name": "a",
            "type": "float"
          },
          {
            "name": "b",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "mini",
        "parameters": [
          {
            "name": "a",
            "type": "int"
          },
          {
            "name": "b",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "move_toward",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "nearest_po2",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "pingpong",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "posmod",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "pow",
        "parameters": [
          {
            "name": "base",
            "type": "float"
          },
          {
            "name": "exp",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "print",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "print_rich",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "print_verbose",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "printerr",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "printraw",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "prints",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "printt",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_error",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_warning",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rad_to_deg",
        "parameters": [
          {
            "name": "rad",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "rand_from_seed",
        "parameters": [
          {
            "name": "seed",
            "type": "int"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "randf",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "randf_range",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "randfn",
        "parameters": [
          {
            "name": "mean",
            "type": "float"
          },
          {
            "name": "deviation",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "randi",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "randi_range",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "randomize",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remap",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "istart",
            "type": "float"
          },
          {
            "name": "istop",
            "type": "float"
          },
          {
            "name": "ostart",
            "type": "float"
          },
          {
            "name": "ostop",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "rid_allocate_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "rid_from_int64",
        "parameters": [
          {
            "name": "base",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "rotate_toward",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "round",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "roundf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "roundi",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "seed",
        "parameters": [
          {
            "name": "base",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sign",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "signf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "signi",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "sin",
        "parameters": [
          {
            "name": "angle_rad",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "sinh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "smoothstep",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          },
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "x",
            "type": "Variant"
          },
          {
            "name": "step",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "snappedf",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          },
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "snappedi",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          },
          {
            "name": "step",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "sqrt",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "step_decimals",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "str",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "str_to_var",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "tan",
        "parameters": [
          {
            "name": "angle_rad",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "tanh",
        "parameters": [
          {
            "name": "x",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "type_convert",
        "parameters": [
          {
            "name": "variant",
            "type": "Variant"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "type_string",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "typeof",
        "parameters": [
          {
            "name": "variable",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "var_to_bytes",
        "parameters": [
          {
            "name": "variable",
            "type": "Variant"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "var_to_bytes_with_objects",
        "parameters": [
          {
            "name": "variable",
            "type": "Variant"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "var_to_str",
        "parameters": [
          {
            "name": "variable",
            "type": "Variant"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "weakref",
        "parameters": [
          {
            "name": "obj",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "wrap",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "min",
            "type": "Variant"
          },
          {
            "name": "max",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "wrapf",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "wrapi",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "min",
            "type": "int"
          },
          {
            "name": "max",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "@GlobalScope",
    "parent": null,
    "properties": [
      {
        "name": "AudioServer",
        "type": "AudioServer"
      },
      {
        "name": "CameraServer",
        "type": "CameraServer"
      },
      {
        "name": "ClassDB",
        "type": "ClassDB"
      },
      {
        "name": "DisplayServer",
        "type": "DisplayServer"
      },
      {
        "name": "EditorInterface",
        "type": "EditorInterface"
      },
      {
        "name": "Engine",
        "type": "Engine"
      },
      {
        "name": "EngineDebugger",
        "type": "EngineDebugger"
      },
      {
        "name": "GDExtensionManager",
        "type": "GDExtensionManager"
      },
      {
        "name": "Geometry2D",
        "type": "Geometry2D"
      },
      {
        "name": "Geometry3D",
        "type": "Geometry3D"
      },
      {
        "name": "IP",
        "type": "IP"
      },
      {
        "name": "Input",
        "type": "Input"
      },
      {
        "name": "InputMap",
        "type": "InputMap"
      },
      {
        "name": "JavaClassWrapper",
        "type": "JavaClassWrapper"
      },
      {
        "name": "JavaScriptBridge",
        "type": "JavaScriptBridge"
      },
      {
        "name": "Marshalls",
        "type": "Marshalls"
      },
      {
        "name": "NativeMenu",
        "type": "NativeMenu"
      },
      {
        "name": "NavigationMeshGenerator",
        "type": "NavigationMeshGenerator"
      },
      {
        "name": "NavigationServer2D",
        "type": "NavigationServer2D"
      },
      {
        "name": "NavigationServer3D",
        "type": "NavigationServer3D"
      },
      {
        "name": "OS",
        "type": "OS"
      },
      {
        "name": "Performance",
        "type": "Performance"
      },
      {
        "name": "PhysicsServer2D",
        "type": "PhysicsServer2D"
      },
      {
        "name": "PhysicsServer2DManager",
        "type": "PhysicsServer2DManager"
      },
      {
        "name": "PhysicsServer3D",
        "type": "PhysicsServer3D"
      },
      {
        "name": "PhysicsServer3DManager",
        "type": "PhysicsServer3DManager"
      },
      {
        "name": "ProjectSettings",
        "type": "ProjectSettings"
      },
      {
        "name": "RenderingServer",
        "type": "RenderingServer"
      },
      {
        "name": "ResourceLoader",
        "type": "ResourceLoader"
      },
      {
        "name": "ResourceSaver",
        "type": "ResourceSaver"
      },
      {
        "name": "ResourceUID",
        "type": "ResourceUID"
      },
      {
        "name": "TextServerManager",
        "type": "TextServerManager"
      },
      {
        "name": "ThemeDB",
        "type": "ThemeDB"
      },
      {
        "name": "Time",
        "type": "Time"
      },
      {
        "name": "TranslationServer",
        "type": "TranslationServer"
      },
      {
        "name": "WorkerThreadPool",
        "type": "WorkerThreadPool"
      },
      {
        "name": "XRServer",
        "type": "XRServer"
      }
    ]
  },
  "AABB": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "encloses",
        "parameters": [
          {
            "name": "with",
            "type": "AABB"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "expand",
        "parameters": [
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "get_center",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_endpoint",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_longest_axis",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_longest_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_longest_axis_size",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_shortest_axis",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_shortest_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_shortest_axis_size",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_support",
        "parameters": [
          {
            "name": "direction",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_volume",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "grow",
        "parameters": [
          {
            "name": "by",
            "type": "float"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_surface",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_volume",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "intersection",
        "parameters": [
          {
            "name": "with",
            "type": "AABB"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "intersects",
        "parameters": [
          {
            "name": "with",
            "type": "AABB"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "intersects_plane",
        "parameters": [
          {
            "name": "plane",
            "type": "Plane"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "intersects_ray",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "dir",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "intersects_segment",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "with",
            "type": "AABB"
          }
        ],
        "return_type": "AABB"
      }
    ],
    "name": "AABB",
    "parent": null,
    "properties": [
      {
        "name": "end",
        "type": "Vector3"
      },
      {
        "name": "position",
        "type": "Vector3"
      },
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "AESContext": {
    "methods": [
      {
        "name": "finish",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_iv_state",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          },
          {
            "name": "iv",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "src",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "AESContext",
    "parent": "RefCounted",
    "properties": []
  },
  "AStar2D": {
    "methods": [
      {
        "name": "_compute_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_estimate_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "end_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "are_points_connected",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect_points",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "disconnect_points",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_available_point_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_closest_point",
        "parameters": [
          {
            "name": "to_position",
            "type": "Vector2"
          },
          {
            "name": "include_disabled",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_closest_position_in_segment",
        "parameters": [
          {
            "name": "to_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_id_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_capacity",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_point_connections",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_point_ids",
        "parameters": [],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_point_disabled",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reserve_space",
        "parameters": [
          {
            "name": "num_nodes",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_disabled",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_position",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AStar2D",
    "parent": "RefCounted",
    "properties": []
  },
  "AStar3D": {
    "methods": [
      {
        "name": "_compute_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_estimate_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "end_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "are_points_connected",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect_points",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "disconnect_points",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_available_point_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_closest_point",
        "parameters": [
          {
            "name": "to_position",
            "type": "Vector3"
          },
          {
            "name": "include_disabled",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_closest_position_in_segment",
        "parameters": [
          {
            "name": "to_position",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_id_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_capacity",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_point_connections",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_point_ids",
        "parameters": [],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "get_point_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "int"
          },
          {
            "name": "to_id",
            "type": "int"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_point_disabled",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reserve_space",
        "parameters": [
          {
            "name": "num_nodes",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_disabled",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_position",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AStar3D",
    "parent": "RefCounted",
    "properties": []
  },
  "AStarGrid2D": {
    "methods": [
      {
        "name": "_compute_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "Vector2i"
          },
          {
            "name": "to_id",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_estimate_cost",
        "parameters": [
          {
            "name": "from_id",
            "type": "Vector2i"
          },
          {
            "name": "end_id",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "fill_solid_region",
        "parameters": [
          {
            "name": "region",
            "type": "Rect2i"
          },
          {
            "name": "solid",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fill_weight_scale_region",
        "parameters": [
          {
            "name": "region",
            "type": "Rect2i"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_id_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "Vector2i"
          },
          {
            "name": "to_id",
            "type": "Vector2i"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_point_data_in_region",
        "parameters": [
          {
            "name": "region",
            "type": "Rect2i"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_point_path",
        "parameters": [
          {
            "name": "from_id",
            "type": "Vector2i"
          },
          {
            "name": "to_id",
            "type": "Vector2i"
          },
          {
            "name": "allow_partial_path",
            "type": "bool"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "is_dirty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_in_bounds",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_in_boundsv",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_point_solid",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_point_solid",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          },
          {
            "name": "solid",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_weight_scale",
        "parameters": [
          {
            "name": "id",
            "type": "Vector2i"
          },
          {
            "name": "weight_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AStarGrid2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "cell_shape",
        "type": "int"
      },
      {
        "name": "cell_size",
        "type": "Vector2"
      },
      {
        "name": "default_compute_heuristic",
        "type": "int"
      },
      {
        "name": "default_estimate_heuristic",
        "type": "int"
      },
      {
        "name": "diagonal_mode",
        "type": "int"
      },
      {
        "name": "jumping_enabled",
        "type": "bool"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "region",
        "type": "Rect2i"
      },
      {
        "name": "size",
        "type": "Vector2i"
      }
    ]
  },
  "AcceptDialog": {
    "methods": [
      {
        "name": "add_button",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "right",
            "type": "bool"
          },
          {
            "name": "action",
            "type": "String"
          }
        ],
        "return_type": "Button"
      },
      {
        "name": "add_cancel_button",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "Button"
      },
      {
        "name": "get_label",
        "parameters": [],
        "return_type": "Label"
      },
      {
        "name": "get_ok_button",
        "parameters": [],
        "return_type": "Button"
      },
      {
        "name": "register_text_enter",
        "parameters": [
          {
            "name": "line_edit",
            "type": "LineEdit"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_button",
        "parameters": [
          {
            "name": "button",
            "type": "Button"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AcceptDialog",
    "parent": "Window",
    "properties": [
      {
        "name": "dialog_autowrap",
        "type": "bool"
      },
      {
        "name": "dialog_close_on_escape",
        "type": "bool"
      },
      {
        "name": "dialog_hide_on_ok",
        "type": "bool"
      },
      {
        "name": "dialog_text",
        "type": "String"
      },
      {
        "name": "exclusive",
        "type": "bool"
      },
      {
        "name": "keep_title_visible",
        "type": "bool"
      },
      {
        "name": "ok_button_text",
        "type": "String"
      },
      {
        "name": "title",
        "type": "String"
      },
      {
        "name": "transient",
        "type": "bool"
      },
      {
        "name": "visible",
        "type": "bool"
      },
      {
        "name": "wrap_controls",
        "type": "bool"
      }
    ]
  },
  "AnimatableBody2D": {
    "methods": [],
    "name": "AnimatableBody2D",
    "parent": "StaticBody2D",
    "properties": [
      {
        "name": "sync_to_physics",
        "type": "bool"
      }
    ]
  },
  "AnimatableBody3D": {
    "methods": [],
    "name": "AnimatableBody3D",
    "parent": "StaticBody3D",
    "properties": [
      {
        "name": "sync_to_physics",
        "type": "bool"
      }
    ]
  },
  "AnimatedSprite2D": {
    "methods": [
      {
        "name": "get_playing_speed",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "pause",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_backwards",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_frame_and_progress",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          },
          {
            "name": "progress",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AnimatedSprite2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "animation",
        "type": "StringName"
      },
      {
        "name": "autoplay",
        "type": "String"
      },
      {
        "name": "centered",
        "type": "bool"
      },
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "frame",
        "type": "int"
      },
      {
        "name": "frame_progress",
        "type": "float"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "sprite_frames",
        "type": "SpriteFrames"
      }
    ]
  },
  "AnimatedSprite3D": {
    "methods": [
      {
        "name": "get_playing_speed",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "pause",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_backwards",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_frame_and_progress",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          },
          {
            "name": "progress",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AnimatedSprite3D",
    "parent": "SpriteBase3D",
    "properties": [
      {
        "name": "animation",
        "type": "StringName"
      },
      {
        "name": "autoplay",
        "type": "String"
      },
      {
        "name": "frame",
        "type": "int"
      },
      {
        "name": "frame_progress",
        "type": "float"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "sprite_frames",
        "type": "SpriteFrames"
      }
    ]
  },
  "AnimatedTexture": {
    "methods": [
      {
        "name": "get_frame_duration",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_frame_texture",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "set_frame_duration",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_frame_texture",
        "parameters": [
          {
            "name": "frame",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimatedTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "current_frame",
        "type": "int"
      },
      {
        "name": "frames",
        "type": "int"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "pause",
        "type": "bool"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "speed_scale",
        "type": "float"
      }
    ]
  },
  "Animation": {
    "methods": [
      {
        "name": "add_marker",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_track",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "at_position",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "animation_track_get_key_animation",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "animation_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "animation",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "animation_track_set_key_animation",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "animation",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "audio_track_get_key_end_offset",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "audio_track_get_key_start_offset",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "audio_track_get_key_stream",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "audio_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "stream",
            "type": "Resource"
          },
          {
            "name": "start_offset",
            "type": "float"
          },
          {
            "name": "end_offset",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "audio_track_is_use_blend",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "audio_track_set_key_end_offset",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "audio_track_set_key_start_offset",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "audio_track_set_key_stream",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "stream",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "audio_track_set_use_blend",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bezier_track_get_key_in_handle",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "bezier_track_get_key_out_handle",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "bezier_track_get_key_value",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bezier_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "in_handle",
            "type": "Vector2"
          },
          {
            "name": "out_handle",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "bezier_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bezier_track_set_key_in_handle",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "in_handle",
            "type": "Vector2"
          },
          {
            "name": "balanced_value_time_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bezier_track_set_key_out_handle",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "out_handle",
            "type": "Vector2"
          },
          {
            "name": "balanced_value_time_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bezier_track_set_key_value",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blend_shape_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "blend_shape_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "compress",
        "parameters": [
          {
            "name": "page_size",
            "type": "int"
          },
          {
            "name": "fps",
            "type": "int"
          },
          {
            "name": "split_tolerance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "copy_track",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "to_animation",
            "type": "Animation"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find_track",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_marker_at_time",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_marker_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_marker_names",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_marker_time",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_next_marker",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_prev_marker",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_track_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_marker",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "method_track_get_name",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "method_track_get_params",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "optimize",
        "parameters": [
          {
            "name": "allowed_velocity_err",
            "type": "float"
          },
          {
            "name": "allowed_angular_err",
            "type": "float"
          },
          {
            "name": "precision",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "position_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "position_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "remove_marker",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_track",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotation_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "rotation",
            "type": "Quaternion"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rotation_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "scale_track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "scale_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "set_marker_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_find_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "find_mode",
            "type": "int"
          },
          {
            "name": "limit",
            "type": "bool"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "track_get_interpolation_loop_wrap",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "track_get_interpolation_type",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "track_get_key_count",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "track_get_key_time",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "track_get_key_transition",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "track_get_key_value",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "track_get_path",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "track_get_type",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "track_insert_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "transition",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "track_is_compressed",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "track_is_enabled",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "track_is_imported",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "track_move_down",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_move_to",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "to_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_move_up",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_remove_key",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_remove_key_at_time",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_enabled",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_imported",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "imported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_interpolation_loop_wrap",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "interpolation",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_interpolation_type",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "interpolation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_key_time",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_key_transition",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key_idx",
            "type": "int"
          },
          {
            "name": "transition",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_key_value",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "key",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_set_path",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "track_swap",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "with_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "value_track_get_update_mode",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "value_track_interpolate",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "backward",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "value_track_set_update_mode",
        "parameters": [
          {
            "name": "track_idx",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Animation",
    "parent": "Resource",
    "properties": [
      {
        "name": "capture_included",
        "type": "bool"
      },
      {
        "name": "length",
        "type": "float"
      },
      {
        "name": "loop_mode",
        "type": "int"
      },
      {
        "name": "step",
        "type": "float"
      }
    ]
  },
  "AnimationLibrary": {
    "methods": [
      {
        "name": "add_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "animation",
            "type": "Animation"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Animation"
      },
      {
        "name": "get_animation_list",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "get_animation_list_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "newname",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationLibrary",
    "parent": "Resource",
    "properties": []
  },
  "AnimationMixer": {
    "methods": [
      {
        "name": "_post_process_key_value",
        "parameters": [
          {
            "name": "animation",
            "type": "Animation"
          },
          {
            "name": "track",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "object_id",
            "type": "int"
          },
          {
            "name": "object_sub_idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "add_animation_library",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "library",
            "type": "AnimationLibrary"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "advance",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "capture",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "duration",
            "type": "float"
          },
          {
            "name": "trans_type",
            "type": "int"
          },
          {
            "name": "ease_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_caches",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "find_animation",
        "parameters": [
          {
            "name": "animation",
            "type": "Animation"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "find_animation_library",
        "parameters": [
          {
            "name": "animation",
            "type": "Animation"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Animation"
      },
      {
        "name": "get_animation_library",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "AnimationLibrary"
      },
      {
        "name": "get_animation_library_list",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "get_animation_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_root_motion_position",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_root_motion_position_accumulator",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_root_motion_rotation",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "get_root_motion_rotation_accumulator",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "get_root_motion_scale",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_root_motion_scale_accumulator",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "has_animation",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_animation_library",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_animation_library",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_animation_library",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "newname",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationMixer",
    "parent": "Node",
    "properties": [
      {
        "name": "active",
        "type": "bool"
      },
      {
        "name": "audio_max_polyphony",
        "type": "int"
      },
      {
        "name": "callback_mode_discrete",
        "type": "int"
      },
      {
        "name": "callback_mode_method",
        "type": "int"
      },
      {
        "name": "callback_mode_process",
        "type": "int"
      },
      {
        "name": "deterministic",
        "type": "bool"
      },
      {
        "name": "reset_on_save",
        "type": "bool"
      },
      {
        "name": "root_motion_local",
        "type": "bool"
      },
      {
        "name": "root_motion_track",
        "type": "NodePath"
      },
      {
        "name": "root_node",
        "type": "NodePath"
      }
    ]
  },
  "AnimationNode": {
    "methods": [
      {
        "name": "_get_caption",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_child_by_name",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "AnimationNode"
      },
      {
        "name": "_get_child_nodes",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_parameter_default_value",
        "parameters": [
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_parameter_list",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "_has_filter",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_parameter_read_only",
        "parameters": [
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_process",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "seek",
            "type": "bool"
          },
          {
            "name": "is_external_seeking",
            "type": "bool"
          },
          {
            "name": "test_only",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "add_input",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "blend_animation",
        "parameters": [
          {
            "name": "animation",
            "type": "StringName"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "seeked",
            "type": "bool"
          },
          {
            "name": "is_external_seeking",
            "type": "bool"
          },
          {
            "name": "blend",
            "type": "float"
          },
          {
            "name": "looped_flag",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blend_input",
        "parameters": [
          {
            "name": "input_index",
            "type": "int"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "seek",
            "type": "bool"
          },
          {
            "name": "is_external_seeking",
            "type": "bool"
          },
          {
            "name": "blend",
            "type": "float"
          },
          {
            "name": "filter",
            "type": "int"
          },
          {
            "name": "sync",
            "type": "bool"
          },
          {
            "name": "test_only",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "blend_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "node",
            "type": "AnimationNode"
          },
          {
            "name": "time",
            "type": "float"
          },
          {
            "name": "seek",
            "type": "bool"
          },
          {
            "name": "is_external_seeking",
            "type": "bool"
          },
          {
            "name": "blend",
            "type": "float"
          },
          {
            "name": "filter",
            "type": "int"
          },
          {
            "name": "sync",
            "type": "bool"
          },
          {
            "name": "test_only",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "find_input",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_input_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_input_name",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_processing_animation_tree_instance_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_path_filtered",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_process_testing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_input",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_filter_path",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_name",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNode",
    "parent": "Resource",
    "properties": [
      {
        "name": "filter_enabled",
        "type": "bool"
      }
    ]
  },
  "AnimationNodeAdd2": {
    "methods": [],
    "name": "AnimationNodeAdd2",
    "parent": "AnimationNodeSync",
    "properties": []
  },
  "AnimationNodeAdd3": {
    "methods": [],
    "name": "AnimationNodeAdd3",
    "parent": "AnimationNodeSync",
    "properties": []
  },
  "AnimationNodeAnimation": {
    "methods": [],
    "name": "AnimationNodeAnimation",
    "parent": "AnimationRootNode",
    "properties": [
      {
        "name": "advance_on_start",
        "type": "bool"
      },
      {
        "name": "animation",
        "type": "StringName"
      },
      {
        "name": "loop_mode",
        "type": "int"
      },
      {
        "name": "play_mode",
        "type": "int"
      },
      {
        "name": "start_offset",
        "type": "float"
      },
      {
        "name": "stretch_time_scale",
        "type": "bool"
      },
      {
        "name": "timeline_length",
        "type": "float"
      },
      {
        "name": "use_custom_timeline",
        "type": "bool"
      }
    ]
  },
  "AnimationNodeBlend2": {
    "methods": [],
    "name": "AnimationNodeBlend2",
    "parent": "AnimationNodeSync",
    "properties": []
  },
  "AnimationNodeBlend3": {
    "methods": [],
    "name": "AnimationNodeBlend3",
    "parent": "AnimationNodeSync",
    "properties": []
  },
  "AnimationNodeBlendSpace1D": {
    "methods": [
      {
        "name": "add_blend_point",
        "parameters": [
          {
            "name": "node",
            "type": "AnimationRootNode"
          },
          {
            "name": "pos",
            "type": "float"
          },
          {
            "name": "at_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_blend_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_point_node",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "AnimationRootNode"
      },
      {
        "name": "get_blend_point_position",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "remove_blend_point",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_blend_point_node",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "node",
            "type": "AnimationRootNode"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_blend_point_position",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeBlendSpace1D",
    "parent": "AnimationRootNode",
    "properties": [
      {
        "name": "blend_mode",
        "type": "int"
      },
      {
        "name": "max_space",
        "type": "float"
      },
      {
        "name": "min_space",
        "type": "float"
      },
      {
        "name": "snap",
        "type": "float"
      },
      {
        "name": "sync",
        "type": "bool"
      },
      {
        "name": "value_label",
        "type": "String"
      }
    ]
  },
  "AnimationNodeBlendSpace2D": {
    "methods": [
      {
        "name": "add_blend_point",
        "parameters": [
          {
            "name": "node",
            "type": "AnimationRootNode"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "at_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_triangle",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          },
          {
            "name": "z",
            "type": "int"
          },
          {
            "name": "at_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_blend_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_point_node",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "AnimationRootNode"
      },
      {
        "name": "get_blend_point_position",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_triangle_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_triangle_point",
        "parameters": [
          {
            "name": "triangle",
            "type": "int"
          },
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "remove_blend_point",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_triangle",
        "parameters": [
          {
            "name": "triangle",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_blend_point_node",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "node",
            "type": "AnimationRootNode"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_blend_point_position",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeBlendSpace2D",
    "parent": "AnimationRootNode",
    "properties": [
      {
        "name": "auto_triangles",
        "type": "bool"
      },
      {
        "name": "blend_mode",
        "type": "int"
      },
      {
        "name": "max_space",
        "type": "Vector2"
      },
      {
        "name": "min_space",
        "type": "Vector2"
      },
      {
        "name": "snap",
        "type": "Vector2"
      },
      {
        "name": "sync",
        "type": "bool"
      },
      {
        "name": "x_label",
        "type": "String"
      },
      {
        "name": "y_label",
        "type": "String"
      }
    ]
  },
  "AnimationNodeBlendTree": {
    "methods": [
      {
        "name": "add_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "node",
            "type": "AnimationNode"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "connect_node",
        "parameters": [
          {
            "name": "input_node",
            "type": "StringName"
          },
          {
            "name": "input_index",
            "type": "int"
          },
          {
            "name": "output_node",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "disconnect_node",
        "parameters": [
          {
            "name": "input_node",
            "type": "StringName"
          },
          {
            "name": "input_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "AnimationNode"
      },
      {
        "name": "get_node_position",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "has_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "new_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_node_position",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeBlendTree",
    "parent": "AnimationRootNode",
    "properties": [
      {
        "name": "graph_offset",
        "type": "Vector2"
      }
    ]
  },
  "AnimationNodeExtension": {
    "methods": [
      {
        "name": "_process_animation_node",
        "parameters": [
          {
            "name": "playback_info",
            "type": "PackedFloat64Array"
          },
          {
            "name": "test_only",
            "type": "bool"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "get_remaining_time",
        "parameters": [
          {
            "name": "node_info",
            "type": "PackedFloat32Array"
          },
          {
            "name": "break_loop",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "is_looping",
        "parameters": [
          {
            "name": "node_info",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "AnimationNodeExtension",
    "parent": "AnimationNode",
    "properties": []
  },
  "AnimationNodeOneShot": {
    "methods": [],
    "name": "AnimationNodeOneShot",
    "parent": "AnimationNodeSync",
    "properties": [
      {
        "name": "autorestart",
        "type": "bool"
      },
      {
        "name": "autorestart_delay",
        "type": "float"
      },
      {
        "name": "autorestart_random_delay",
        "type": "float"
      },
      {
        "name": "break_loop_at_end",
        "type": "bool"
      },
      {
        "name": "fadein_curve",
        "type": "Curve"
      },
      {
        "name": "fadein_time",
        "type": "float"
      },
      {
        "name": "fadeout_curve",
        "type": "Curve"
      },
      {
        "name": "fadeout_time",
        "type": "float"
      },
      {
        "name": "mix_mode",
        "type": "int"
      }
    ]
  },
  "AnimationNodeOutput": {
    "methods": [],
    "name": "AnimationNodeOutput",
    "parent": "AnimationNode",
    "properties": []
  },
  "AnimationNodeStateMachine": {
    "methods": [
      {
        "name": "add_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "node",
            "type": "AnimationNode"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_transition",
        "parameters": [
          {
            "name": "from",
            "type": "StringName"
          },
          {
            "name": "to",
            "type": "StringName"
          },
          {
            "name": "transition",
            "type": "AnimationNodeStateMachineTransition"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_graph_offset",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "AnimationNode"
      },
      {
        "name": "get_node_name",
        "parameters": [
          {
            "name": "node",
            "type": "AnimationNode"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_node_position",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_transition",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "AnimationNodeStateMachineTransition"
      },
      {
        "name": "get_transition_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_transition_from",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_transition_to",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "has_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_transition",
        "parameters": [
          {
            "name": "from",
            "type": "StringName"
          },
          {
            "name": "to",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_transition",
        "parameters": [
          {
            "name": "from",
            "type": "StringName"
          },
          {
            "name": "to",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_transition_by_index",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "new_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "replace_node",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "node",
            "type": "AnimationNode"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_graph_offset",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_node_position",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeStateMachine",
    "parent": "AnimationRootNode",
    "properties": [
      {
        "name": "allow_transition_to_self",
        "type": "bool"
      },
      {
        "name": "reset_ends",
        "type": "bool"
      },
      {
        "name": "state_machine_type",
        "type": "int"
      }
    ]
  },
  "AnimationNodeStateMachinePlayback": {
    "methods": [
      {
        "name": "get_current_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_current_node",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_current_play_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_fading_from_node",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_travel_path",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "next",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "node",
            "type": "StringName"
          },
          {
            "name": "reset",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "travel",
        "parameters": [
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "reset_on_teleport",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeStateMachinePlayback",
    "parent": "Resource",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "AnimationNodeStateMachineTransition": {
    "methods": [],
    "name": "AnimationNodeStateMachineTransition",
    "parent": "Resource",
    "properties": [
      {
        "name": "advance_condition",
        "type": "StringName"
      },
      {
        "name": "advance_expression",
        "type": "String"
      },
      {
        "name": "advance_mode",
        "type": "int"
      },
      {
        "name": "break_loop_at_end",
        "type": "bool"
      },
      {
        "name": "priority",
        "type": "int"
      },
      {
        "name": "reset",
        "type": "bool"
      },
      {
        "name": "switch_mode",
        "type": "int"
      },
      {
        "name": "xfade_curve",
        "type": "Curve"
      },
      {
        "name": "xfade_time",
        "type": "float"
      }
    ]
  },
  "AnimationNodeSub2": {
    "methods": [],
    "name": "AnimationNodeSub2",
    "parent": "AnimationNodeSync",
    "properties": []
  },
  "AnimationNodeSync": {
    "methods": [],
    "name": "AnimationNodeSync",
    "parent": "AnimationNode",
    "properties": [
      {
        "name": "sync",
        "type": "bool"
      }
    ]
  },
  "AnimationNodeTimeScale": {
    "methods": [],
    "name": "AnimationNodeTimeScale",
    "parent": "AnimationNode",
    "properties": []
  },
  "AnimationNodeTimeSeek": {
    "methods": [],
    "name": "AnimationNodeTimeSeek",
    "parent": "AnimationNode",
    "properties": [
      {
        "name": "explicit_elapse",
        "type": "bool"
      }
    ]
  },
  "AnimationNodeTransition": {
    "methods": [
      {
        "name": "is_input_loop_broken_at_end",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_input_reset",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_input_set_as_auto_advance",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_input_as_auto_advance",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_break_loop_at_end",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_reset",
        "parameters": [
          {
            "name": "input",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationNodeTransition",
    "parent": "AnimationNodeSync",
    "properties": [
      {
        "name": "allow_transition_to_self",
        "type": "bool"
      },
      {
        "name": "input_count",
        "type": "int"
      },
      {
        "name": "xfade_curve",
        "type": "Curve"
      },
      {
        "name": "xfade_time",
        "type": "float"
      }
    ]
  },
  "AnimationPlayer": {
    "methods": [
      {
        "name": "animation_get_next",
        "parameters": [
          {
            "name": "animation_from",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "animation_set_next",
        "parameters": [
          {
            "name": "animation_from",
            "type": "StringName"
          },
          {
            "name": "animation_to",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_queue",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_blend_time",
        "parameters": [
          {
            "name": "animation_from",
            "type": "StringName"
          },
          {
            "name": "animation_to",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_method_call_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_playing_speed",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_process_callback",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_queue",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_root",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_section_end_time",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_section_start_time",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "has_section",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "pause",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "custom_blend",
            "type": "float"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_backwards",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "custom_blend",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_section",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "start_time",
            "type": "float"
          },
          {
            "name": "end_time",
            "type": "float"
          },
          {
            "name": "custom_blend",
            "type": "float"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_section_backwards",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "start_time",
            "type": "float"
          },
          {
            "name": "end_time",
            "type": "float"
          },
          {
            "name": "custom_blend",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_section_with_markers",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "start_marker",
            "type": "StringName"
          },
          {
            "name": "end_marker",
            "type": "StringName"
          },
          {
            "name": "custom_blend",
            "type": "float"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_section_with_markers_backwards",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "start_marker",
            "type": "StringName"
          },
          {
            "name": "end_marker",
            "type": "StringName"
          },
          {
            "name": "custom_blend",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_with_capture",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "duration",
            "type": "float"
          },
          {
            "name": "custom_blend",
            "type": "float"
          },
          {
            "name": "custom_speed",
            "type": "float"
          },
          {
            "name": "from_end",
            "type": "bool"
          },
          {
            "name": "trans_type",
            "type": "int"
          },
          {
            "name": "ease_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reset_section",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "seconds",
            "type": "float"
          },
          {
            "name": "update",
            "type": "bool"
          },
          {
            "name": "update_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_blend_time",
        "parameters": [
          {
            "name": "animation_from",
            "type": "StringName"
          },
          {
            "name": "animation_to",
            "type": "StringName"
          },
          {
            "name": "sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_method_call_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_callback",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_root",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_section",
        "parameters": [
          {
            "name": "start_time",
            "type": "float"
          },
          {
            "name": "end_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_section_with_markers",
        "parameters": [
          {
            "name": "start_marker",
            "type": "StringName"
          },
          {
            "name": "end_marker",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [
          {
            "name": "keep_state",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationPlayer",
    "parent": "AnimationMixer",
    "properties": [
      {
        "name": "assigned_animation",
        "type": "String"
      },
      {
        "name": "autoplay",
        "type": "String"
      },
      {
        "name": "current_animation",
        "type": "String"
      },
      {
        "name": "current_animation_length",
        "type": "float"
      },
      {
        "name": "current_animation_position",
        "type": "float"
      },
      {
        "name": "movie_quit_on_finish",
        "type": "bool"
      },
      {
        "name": "playback_auto_capture",
        "type": "bool"
      },
      {
        "name": "playback_auto_capture_duration",
        "type": "float"
      },
      {
        "name": "playback_auto_capture_ease_type",
        "type": "int"
      },
      {
        "name": "playback_auto_capture_transition_type",
        "type": "int"
      },
      {
        "name": "playback_default_blend_time",
        "type": "float"
      },
      {
        "name": "speed_scale",
        "type": "float"
      }
    ]
  },
  "AnimationRootNode": {
    "methods": [],
    "name": "AnimationRootNode",
    "parent": "AnimationNode",
    "properties": []
  },
  "AnimationTree": {
    "methods": [
      {
        "name": "get_process_callback",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_process_callback",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AnimationTree",
    "parent": "AnimationMixer",
    "properties": [
      {
        "name": "advance_expression_base_node",
        "type": "NodePath"
      },
      {
        "name": "anim_player",
        "type": "NodePath"
      },
      {
        "name": "callback_mode_discrete",
        "type": "int"
      },
      {
        "name": "deterministic",
        "type": "bool"
      },
      {
        "name": "tree_root",
        "type": "AnimationRootNode"
      }
    ]
  },
  "Area2D": {
    "methods": [
      {
        "name": "get_overlapping_areas",
        "parameters": [],
        "return_type": "Area2D[]"
      },
      {
        "name": "get_overlapping_bodies",
        "parameters": [],
        "return_type": "Node2D[]"
      },
      {
        "name": "has_overlapping_areas",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_overlapping_bodies",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "overlaps_area",
        "parameters": [
          {
            "name": "area",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "overlaps_body",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "Area2D",
    "parent": "CollisionObject2D",
    "properties": [
      {
        "name": "angular_damp",
        "type": "float"
      },
      {
        "name": "angular_damp_space_override",
        "type": "int"
      },
      {
        "name": "audio_bus_name",
        "type": "StringName"
      },
      {
        "name": "audio_bus_override",
        "type": "bool"
      },
      {
        "name": "gravity",
        "type": "float"
      },
      {
        "name": "gravity_direction",
        "type": "Vector2"
      },
      {
        "name": "gravity_point",
        "type": "bool"
      },
      {
        "name": "gravity_point_center",
        "type": "Vector2"
      },
      {
        "name": "gravity_point_unit_distance",
        "type": "float"
      },
      {
        "name": "gravity_space_override",
        "type": "int"
      },
      {
        "name": "linear_damp",
        "type": "float"
      },
      {
        "name": "linear_damp_space_override",
        "type": "int"
      },
      {
        "name": "monitorable",
        "type": "bool"
      },
      {
        "name": "monitoring",
        "type": "bool"
      },
      {
        "name": "priority",
        "type": "int"
      }
    ]
  },
  "Area3D": {
    "methods": [
      {
        "name": "get_overlapping_areas",
        "parameters": [],
        "return_type": "Area3D[]"
      },
      {
        "name": "get_overlapping_bodies",
        "parameters": [],
        "return_type": "Node3D[]"
      },
      {
        "name": "has_overlapping_areas",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_overlapping_bodies",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "overlaps_area",
        "parameters": [
          {
            "name": "area",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "overlaps_body",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "Area3D",
    "parent": "CollisionObject3D",
    "properties": [
      {
        "name": "angular_damp",
        "type": "float"
      },
      {
        "name": "angular_damp_space_override",
        "type": "int"
      },
      {
        "name": "audio_bus_name",
        "type": "StringName"
      },
      {
        "name": "audio_bus_override",
        "type": "bool"
      },
      {
        "name": "gravity",
        "type": "float"
      },
      {
        "name": "gravity_direction",
        "type": "Vector3"
      },
      {
        "name": "gravity_point",
        "type": "bool"
      },
      {
        "name": "gravity_point_center",
        "type": "Vector3"
      },
      {
        "name": "gravity_point_unit_distance",
        "type": "float"
      },
      {
        "name": "gravity_space_override",
        "type": "int"
      },
      {
        "name": "linear_damp",
        "type": "float"
      },
      {
        "name": "linear_damp_space_override",
        "type": "int"
      },
      {
        "name": "monitorable",
        "type": "bool"
      },
      {
        "name": "monitoring",
        "type": "bool"
      },
      {
        "name": "priority",
        "type": "int"
      },
      {
        "name": "reverb_bus_amount",
        "type": "float"
      },
      {
        "name": "reverb_bus_enabled",
        "type": "bool"
      },
      {
        "name": "reverb_bus_name",
        "type": "StringName"
      },
      {
        "name": "reverb_bus_uniformity",
        "type": "float"
      },
      {
        "name": "wind_attenuation_factor",
        "type": "float"
      },
      {
        "name": "wind_force_magnitude",
        "type": "float"
      },
      {
        "name": "wind_source_path",
        "type": "NodePath"
      }
    ]
  },
  "Array": {
    "methods": [
      {
        "name": "all",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "any",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "assign",
        "parameters": [
          {
            "name": "array",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "back",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "bsearch_custom",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "func",
            "type": "Callable"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [
          {
            "name": "deep",
            "type": "bool"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "erase",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "filter",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "what",
            "type": "Variant"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find_custom",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "front",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_typed_builtin",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_typed_class_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_typed_script",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_read_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_same_typed",
        "parameters": [
          {
            "name": "array",
            "type": "Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_typed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "make_read_only",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "map",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "max",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "min",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "pick_random",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "pop_at",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "pop_back",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "pop_front",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_front",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reduce",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          },
          {
            "name": "accum",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "what",
            "type": "Variant"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rfind_custom",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shuffle",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          },
          {
            "name": "step",
            "type": "int"
          },
          {
            "name": "deep",
            "type": "bool"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "sort_custom",
        "parameters": [
          {
            "name": "func",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Array",
    "parent": null,
    "properties": []
  },
  "ArrayMesh": {
    "methods": [
      {
        "name": "add_blend_shape",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_surface_from_arrays",
        "parameters": [
          {
            "name": "primitive",
            "type": "int"
          },
          {
            "name": "arrays",
            "type": "Array"
          },
          {
            "name": "blend_shapes",
            "type": "Array[]"
          },
          {
            "name": "lods",
            "type": "Dictionary"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_blend_shapes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_surfaces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_blend_shape_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_shape_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "lightmap_unwrap",
        "parameters": [
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "texel_size",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "regen_normal_maps",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_blend_shape_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_find_by_name",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "surface_get_array_index_len",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "surface_get_array_len",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "surface_get_format",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "surface_get_name",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "surface_get_primitive_type",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "surface_remove",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_set_name",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_update_attribute_region",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_update_skin_region",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_update_vertex_region",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ArrayMesh",
    "parent": "Mesh",
    "properties": [
      {
        "name": "blend_shape_mode",
        "type": "int"
      },
      {
        "name": "custom_aabb",
        "type": "AABB"
      },
      {
        "name": "shadow_mesh",
        "type": "ArrayMesh"
      }
    ]
  },
  "ArrayOccluder3D": {
    "methods": [
      {
        "name": "set_arrays",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          },
          {
            "name": "indices",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ArrayOccluder3D",
    "parent": "Occluder3D",
    "properties": [
      {
        "name": "indices",
        "type": "PackedInt32Array"
      },
      {
        "name": "vertices",
        "type": "PackedVector3Array"
      }
    ]
  },
  "AspectRatioContainer": {
    "methods": [],
    "name": "AspectRatioContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "alignment_horizontal",
        "type": "int"
      },
      {
        "name": "alignment_vertical",
        "type": "int"
      },
      {
        "name": "ratio",
        "type": "float"
      },
      {
        "name": "stretch_mode",
        "type": "int"
      }
    ]
  },
  "AtlasTexture": {
    "methods": [],
    "name": "AtlasTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "atlas",
        "type": "Texture2D"
      },
      {
        "name": "filter_clip",
        "type": "bool"
      },
      {
        "name": "margin",
        "type": "Rect2"
      },
      {
        "name": "region",
        "type": "Rect2"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "AudioBusLayout": {
    "methods": [],
    "name": "AudioBusLayout",
    "parent": "Resource",
    "properties": []
  },
  "AudioEffect": {
    "methods": [
      {
        "name": "_instantiate",
        "parameters": [],
        "return_type": "AudioEffectInstance"
      }
    ],
    "name": "AudioEffect",
    "parent": "Resource",
    "properties": []
  },
  "AudioEffectAmplify": {
    "methods": [],
    "name": "AudioEffectAmplify",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "volume_db",
        "type": "float"
      },
      {
        "name": "volume_linear",
        "type": "float"
      }
    ]
  },
  "AudioEffectBandLimitFilter": {
    "methods": [],
    "name": "AudioEffectBandLimitFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectBandPassFilter": {
    "methods": [],
    "name": "AudioEffectBandPassFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectCapture": {
    "methods": [
      {
        "name": "can_get_buffer",
        "parameters": [
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear_buffer",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_buffer",
        "parameters": [
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_buffer_length_frames",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_discarded_frames",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_frames_available",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_pushed_frames",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "AudioEffectCapture",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "buffer_length",
        "type": "float"
      }
    ]
  },
  "AudioEffectChorus": {
    "methods": [
      {
        "name": "get_voice_cutoff_hz",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_voice_delay_ms",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_voice_depth_ms",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_voice_level_db",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_voice_pan",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_voice_rate_hz",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_voice_cutoff_hz",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "cutoff_hz",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_voice_delay_ms",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "delay_ms",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_voice_depth_ms",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "depth_ms",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_voice_level_db",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "level_db",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_voice_pan",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "pan",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_voice_rate_hz",
        "parameters": [
          {
            "name": "voice_idx",
            "type": "int"
          },
          {
            "name": "rate_hz",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AudioEffectChorus",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "dry",
        "type": "float"
      },
      {
        "name": "voice/1/cutoff_hz",
        "type": "float"
      },
      {
        "name": "voice/1/delay_ms",
        "type": "float"
      },
      {
        "name": "voice/1/depth_ms",
        "type": "float"
      },
      {
        "name": "voice/1/level_db",
        "type": "float"
      },
      {
        "name": "voice/1/pan",
        "type": "float"
      },
      {
        "name": "voice/1/rate_hz",
        "type": "float"
      },
      {
        "name": "voice/2/cutoff_hz",
        "type": "float"
      },
      {
        "name": "voice/2/delay_ms",
        "type": "float"
      },
      {
        "name": "voice/2/depth_ms",
        "type": "float"
      },
      {
        "name": "voice/2/level_db",
        "type": "float"
      },
      {
        "name": "voice/2/pan",
        "type": "float"
      },
      {
        "name": "voice/2/rate_hz",
        "type": "float"
      },
      {
        "name": "voice/3/cutoff_hz",
        "type": "float"
      },
      {
        "name": "voice/3/delay_ms",
        "type": "float"
      },
      {
        "name": "voice/3/depth_ms",
        "type": "float"
      },
      {
        "name": "voice/3/level_db",
        "type": "float"
      },
      {
        "name": "voice/3/pan",
        "type": "float"
      },
      {
        "name": "voice/3/rate_hz",
        "type": "float"
      },
      {
        "name": "voice/4/cutoff_hz",
        "type": "float"
      },
      {
        "name": "voice/4/delay_ms",
        "type": "float"
      },
      {
        "name": "voice/4/depth_ms",
        "type": "float"
      },
      {
        "name": "voice/4/level_db",
        "type": "float"
      },
      {
        "name": "voice/4/pan",
        "type": "float"
      },
      {
        "name": "voice/4/rate_hz",
        "type": "float"
      },
      {
        "name": "voice_count",
        "type": "int"
      },
      {
        "name": "wet",
        "type": "float"
      }
    ]
  },
  "AudioEffectCompressor": {
    "methods": [],
    "name": "AudioEffectCompressor",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "attack_us",
        "type": "float"
      },
      {
        "name": "gain",
        "type": "float"
      },
      {
        "name": "mix",
        "type": "float"
      },
      {
        "name": "ratio",
        "type": "float"
      },
      {
        "name": "release_ms",
        "type": "float"
      },
      {
        "name": "sidechain",
        "type": "StringName"
      },
      {
        "name": "threshold",
        "type": "float"
      }
    ]
  },
  "AudioEffectDelay": {
    "methods": [],
    "name": "AudioEffectDelay",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "dry",
        "type": "float"
      },
      {
        "name": "feedback_active",
        "type": "bool"
      },
      {
        "name": "feedback_delay_ms",
        "type": "float"
      },
      {
        "name": "feedback_level_db",
        "type": "float"
      },
      {
        "name": "feedback_lowpass",
        "type": "float"
      },
      {
        "name": "tap1_active",
        "type": "bool"
      },
      {
        "name": "tap1_delay_ms",
        "type": "float"
      },
      {
        "name": "tap1_level_db",
        "type": "float"
      },
      {
        "name": "tap1_pan",
        "type": "float"
      },
      {
        "name": "tap2_active",
        "type": "bool"
      },
      {
        "name": "tap2_delay_ms",
        "type": "float"
      },
      {
        "name": "tap2_level_db",
        "type": "float"
      },
      {
        "name": "tap2_pan",
        "type": "float"
      }
    ]
  },
  "AudioEffectDistortion": {
    "methods": [],
    "name": "AudioEffectDistortion",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "drive",
        "type": "float"
      },
      {
        "name": "keep_hf_hz",
        "type": "float"
      },
      {
        "name": "mode",
        "type": "int"
      },
      {
        "name": "post_gain",
        "type": "float"
      },
      {
        "name": "pre_gain",
        "type": "float"
      }
    ]
  },
  "AudioEffectEQ": {
    "methods": [
      {
        "name": "get_band_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_band_gain_db",
        "parameters": [
          {
            "name": "band_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_band_gain_db",
        "parameters": [
          {
            "name": "band_idx",
            "type": "int"
          },
          {
            "name": "volume_db",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AudioEffectEQ",
    "parent": "AudioEffect",
    "properties": []
  },
  "AudioEffectEQ10": {
    "methods": [],
    "name": "AudioEffectEQ10",
    "parent": "AudioEffectEQ",
    "properties": []
  },
  "AudioEffectEQ21": {
    "methods": [],
    "name": "AudioEffectEQ21",
    "parent": "AudioEffectEQ",
    "properties": []
  },
  "AudioEffectEQ6": {
    "methods": [],
    "name": "AudioEffectEQ6",
    "parent": "AudioEffectEQ",
    "properties": []
  },
  "AudioEffectFilter": {
    "methods": [],
    "name": "AudioEffectFilter",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "cutoff_hz",
        "type": "float"
      },
      {
        "name": "db",
        "type": "int"
      },
      {
        "name": "gain",
        "type": "float"
      },
      {
        "name": "resonance",
        "type": "float"
      }
    ]
  },
  "AudioEffectHardLimiter": {
    "methods": [],
    "name": "AudioEffectHardLimiter",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "ceiling_db",
        "type": "float"
      },
      {
        "name": "pre_gain_db",
        "type": "float"
      },
      {
        "name": "release",
        "type": "float"
      }
    ]
  },
  "AudioEffectHighPassFilter": {
    "methods": [],
    "name": "AudioEffectHighPassFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectHighShelfFilter": {
    "methods": [],
    "name": "AudioEffectHighShelfFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectInstance": {
    "methods": [
      {
        "name": "_process",
        "parameters": [
          {
            "name": "src_buffer",
            "type": "const void*"
          },
          {
            "name": "dst_buffer",
            "type": "AudioFrame*"
          },
          {
            "name": "frame_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_process_silence",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "AudioEffectInstance",
    "parent": "RefCounted",
    "properties": []
  },
  "AudioEffectLimiter": {
    "methods": [],
    "name": "AudioEffectLimiter",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "ceiling_db",
        "type": "float"
      },
      {
        "name": "soft_clip_db",
        "type": "float"
      },
      {
        "name": "soft_clip_ratio",
        "type": "float"
      },
      {
        "name": "threshold_db",
        "type": "float"
      }
    ]
  },
  "AudioEffectLowPassFilter": {
    "methods": [],
    "name": "AudioEffectLowPassFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectLowShelfFilter": {
    "methods": [],
    "name": "AudioEffectLowShelfFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectNotchFilter": {
    "methods": [],
    "name": "AudioEffectNotchFilter",
    "parent": "AudioEffectFilter",
    "properties": []
  },
  "AudioEffectPanner": {
    "methods": [],
    "name": "AudioEffectPanner",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "pan",
        "type": "float"
      }
    ]
  },
  "AudioEffectPhaser": {
    "methods": [],
    "name": "AudioEffectPhaser",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "depth",
        "type": "float"
      },
      {
        "name": "feedback",
        "type": "float"
      },
      {
        "name": "range_max_hz",
        "type": "float"
      },
      {
        "name": "range_min_hz",
        "type": "float"
      },
      {
        "name": "rate_hz",
        "type": "float"
      }
    ]
  },
  "AudioEffectPitchShift": {
    "methods": [],
    "name": "AudioEffectPitchShift",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "fft_size",
        "type": "int"
      },
      {
        "name": "oversampling",
        "type": "int"
      },
      {
        "name": "pitch_scale",
        "type": "float"
      }
    ]
  },
  "AudioEffectRecord": {
    "methods": [
      {
        "name": "get_recording",
        "parameters": [],
        "return_type": "AudioStreamWAV"
      },
      {
        "name": "is_recording_active",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_recording_active",
        "parameters": [
          {
            "name": "record",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AudioEffectRecord",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "format",
        "type": "int"
      }
    ]
  },
  "AudioEffectReverb": {
    "methods": [],
    "name": "AudioEffectReverb",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "damping",
        "type": "float"
      },
      {
        "name": "dry",
        "type": "float"
      },
      {
        "name": "hipass",
        "type": "float"
      },
      {
        "name": "predelay_feedback",
        "type": "float"
      },
      {
        "name": "predelay_msec",
        "type": "float"
      },
      {
        "name": "room_size",
        "type": "float"
      },
      {
        "name": "spread",
        "type": "float"
      },
      {
        "name": "wet",
        "type": "float"
      }
    ]
  },
  "AudioEffectSpectrumAnalyzer": {
    "methods": [],
    "name": "AudioEffectSpectrumAnalyzer",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "buffer_length",
        "type": "float"
      },
      {
        "name": "fft_size",
        "type": "int"
      },
      {
        "name": "tap_back_pos",
        "type": "float"
      }
    ]
  },
  "AudioEffectSpectrumAnalyzerInstance": {
    "methods": [
      {
        "name": "get_magnitude_for_frequency_range",
        "parameters": [
          {
            "name": "from_hz",
            "type": "float"
          },
          {
            "name": "to_hz",
            "type": "float"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      }
    ],
    "name": "AudioEffectSpectrumAnalyzerInstance",
    "parent": "AudioEffectInstance",
    "properties": []
  },
  "AudioEffectStereoEnhance": {
    "methods": [],
    "name": "AudioEffectStereoEnhance",
    "parent": "AudioEffect",
    "properties": [
      {
        "name": "pan_pullout",
        "type": "float"
      },
      {
        "name": "surround",
        "type": "float"
      },
      {
        "name": "time_pullout_ms",
        "type": "float"
      }
    ]
  },
  "AudioListener2D": {
    "methods": [
      {
        "name": "clear_current",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_current",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "make_current",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioListener2D",
    "parent": "Node2D",
    "properties": []
  },
  "AudioListener3D": {
    "methods": [
      {
        "name": "clear_current",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_listener_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "is_current",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "make_current",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioListener3D",
    "parent": "Node3D",
    "properties": []
  },
  "AudioSample": {
    "methods": [],
    "name": "AudioSample",
    "parent": "RefCounted",
    "properties": []
  },
  "AudioSamplePlayback": {
    "methods": [],
    "name": "AudioSamplePlayback",
    "parent": "RefCounted",
    "properties": []
  },
  "AudioServer": {
    "methods": [
      {
        "name": "add_bus",
        "parameters": [
          {
            "name": "at_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_bus_effect",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect",
            "type": "AudioEffect"
          },
          {
            "name": "at_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "generate_bus_layout",
        "parameters": [],
        "return_type": "AudioBusLayout"
      },
      {
        "name": "get_bus_channels",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bus_effect",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          }
        ],
        "return_type": "AudioEffect"
      },
      {
        "name": "get_bus_effect_count",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bus_effect_instance",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          },
          {
            "name": "channel",
            "type": "int"
          }
        ],
        "return_type": "AudioEffectInstance"
      },
      {
        "name": "get_bus_index",
        "parameters": [
          {
            "name": "bus_name",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bus_name",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_bus_peak_volume_left_db",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "channel",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_bus_peak_volume_right_db",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "channel",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_bus_send",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_bus_volume_db",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_bus_volume_linear",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_driver_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_input_device_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_input_mix_rate",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_mix_rate",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_output_device_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_output_latency",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_speaker_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_time_since_last_mix",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_time_to_next_mix",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_bus_bypassing_effects",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_bus_effect_enabled",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_bus_mute",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_bus_solo",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_stream_registered_as_sample",
        "parameters": [
          {
            "name": "stream",
            "type": "AudioStream"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "lock",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "move_bus",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "to_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "register_stream_as_sample",
        "parameters": [
          {
            "name": "stream",
            "type": "AudioStream"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_bus",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_bus_effect",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_bypass_effects",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_effect_enabled",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_layout",
        "parameters": [
          {
            "name": "bus_layout",
            "type": "AudioBusLayout"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_mute",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_name",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_send",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "send",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_solo",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_volume_db",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "volume_db",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bus_volume_linear",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "volume_linear",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_enable_tagging_used_audio_streams",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "swap_bus_effects",
        "parameters": [
          {
            "name": "bus_idx",
            "type": "int"
          },
          {
            "name": "effect_idx",
            "type": "int"
          },
          {
            "name": "by_effect_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unlock",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioServer",
    "parent": "Object",
    "properties": [
      {
        "name": "bus_count",
        "type": "int"
      },
      {
        "name": "input_device",
        "type": "String"
      },
      {
        "name": "output_device",
        "type": "String"
      },
      {
        "name": "playback_speed_scale",
        "type": "float"
      }
    ]
  },
  "AudioStream": {
    "methods": [
      {
        "name": "_get_bar_beats",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_beat_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_bpm",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_parameter_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_stream_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_has_loop",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_instantiate_playback",
        "parameters": [],
        "return_type": "AudioStreamPlayback"
      },
      {
        "name": "_is_monophonic",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "can_be_sampled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "generate_sample",
        "parameters": [],
        "return_type": "AudioSample"
      },
      {
        "name": "get_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "instantiate_playback",
        "parameters": [],
        "return_type": "AudioStreamPlayback"
      },
      {
        "name": "is_meta_stream",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_monophonic",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "AudioStream",
    "parent": "Resource",
    "properties": []
  },
  "AudioStreamGenerator": {
    "methods": [],
    "name": "AudioStreamGenerator",
    "parent": "AudioStream",
    "properties": [
      {
        "name": "buffer_length",
        "type": "float"
      },
      {
        "name": "mix_rate",
        "type": "float"
      },
      {
        "name": "mix_rate_mode",
        "type": "int"
      }
    ]
  },
  "AudioStreamGeneratorPlayback": {
    "methods": [
      {
        "name": "can_push_buffer",
        "parameters": [
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear_buffer",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_frames_available",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_skips",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "push_buffer",
        "parameters": [
          {
            "name": "frames",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "push_frame",
        "parameters": [
          {
            "name": "frame",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "AudioStreamGeneratorPlayback",
    "parent": "AudioStreamPlaybackResampled",
    "properties": []
  },
  "AudioStreamMicrophone": {
    "methods": [],
    "name": "AudioStreamMicrophone",
    "parent": "AudioStream",
    "properties": []
  },
  "AudioStreamPlayback": {
    "methods": [
      {
        "name": "_get_loop_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_mix",
        "parameters": [
          {
            "name": "buffer",
            "type": "AudioFrame*"
          },
          {
            "name": "rate_scale",
            "type": "float"
          },
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_seek",
        "parameters": [
          {
            "name": "position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_start",
        "parameters": [
          {
            "name": "from_pos",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_tag_used_streams",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_loop_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_sample_playback",
        "parameters": [],
        "return_type": "AudioSamplePlayback"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "mix_audio",
        "parameters": [
          {
            "name": "rate_scale",
            "type": "float"
          },
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_sample_playback",
        "parameters": [
          {
            "name": "playback_sample",
            "type": "AudioSamplePlayback"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "from_pos",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlayback",
    "parent": "RefCounted",
    "properties": []
  },
  "AudioStreamPlaybackPolyphonic": {
    "methods": [
      {
        "name": "is_stream_playing",
        "parameters": [
          {
            "name": "stream",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "play_stream",
        "parameters": [
          {
            "name": "stream",
            "type": "AudioStream"
          },
          {
            "name": "from_offset",
            "type": "float"
          },
          {
            "name": "volume_db",
            "type": "float"
          },
          {
            "name": "pitch_scale",
            "type": "float"
          },
          {
            "name": "playback_type",
            "type": "int"
          },
          {
            "name": "bus",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_stream_pitch_scale",
        "parameters": [
          {
            "name": "stream",
            "type": "int"
          },
          {
            "name": "pitch_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stream_volume",
        "parameters": [
          {
            "name": "stream",
            "type": "int"
          },
          {
            "name": "volume_db",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop_stream",
        "parameters": [
          {
            "name": "stream",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlaybackPolyphonic",
    "parent": "AudioStreamPlayback",
    "properties": []
  },
  "AudioStreamPlaybackResampled": {
    "methods": [
      {
        "name": "_get_stream_sampling_rate",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_mix_resampled",
        "parameters": [
          {
            "name": "dst_buffer",
            "type": "AudioFrame*"
          },
          {
            "name": "frame_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "begin_resample",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlaybackResampled",
    "parent": "AudioStreamPlayback",
    "properties": []
  },
  "AudioStreamPlayer": {
    "methods": [
      {
        "name": "get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_stream_playback",
        "parameters": [],
        "return_type": "AudioStreamPlayback"
      },
      {
        "name": "has_stream_playback",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "from_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "to_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlayer",
    "parent": "Node",
    "properties": [
      {
        "name": "autoplay",
        "type": "bool"
      },
      {
        "name": "bus",
        "type": "StringName"
      },
      {
        "name": "max_polyphony",
        "type": "int"
      },
      {
        "name": "mix_target",
        "type": "int"
      },
      {
        "name": "pitch_scale",
        "type": "float"
      },
      {
        "name": "playback_type",
        "type": "int"
      },
      {
        "name": "playing",
        "type": "bool"
      },
      {
        "name": "stream",
        "type": "AudioStream"
      },
      {
        "name": "stream_paused",
        "type": "bool"
      },
      {
        "name": "volume_db",
        "type": "float"
      },
      {
        "name": "volume_linear",
        "type": "float"
      }
    ]
  },
  "AudioStreamPlayer2D": {
    "methods": [
      {
        "name": "get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_stream_playback",
        "parameters": [],
        "return_type": "AudioStreamPlayback"
      },
      {
        "name": "has_stream_playback",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "from_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "to_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlayer2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "area_mask",
        "type": "int"
      },
      {
        "name": "attenuation",
        "type": "float"
      },
      {
        "name": "autoplay",
        "type": "bool"
      },
      {
        "name": "bus",
        "type": "StringName"
      },
      {
        "name": "max_distance",
        "type": "float"
      },
      {
        "name": "max_polyphony",
        "type": "int"
      },
      {
        "name": "panning_strength",
        "type": "float"
      },
      {
        "name": "pitch_scale",
        "type": "float"
      },
      {
        "name": "playback_type",
        "type": "int"
      },
      {
        "name": "playing",
        "type": "bool"
      },
      {
        "name": "stream",
        "type": "AudioStream"
      },
      {
        "name": "stream_paused",
        "type": "bool"
      },
      {
        "name": "volume_db",
        "type": "float"
      },
      {
        "name": "volume_linear",
        "type": "float"
      }
    ]
  },
  "AudioStreamPlayer3D": {
    "methods": [
      {
        "name": "get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_stream_playback",
        "parameters": [],
        "return_type": "AudioStreamPlayback"
      },
      {
        "name": "has_stream_playback",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "play",
        "parameters": [
          {
            "name": "from_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "to_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamPlayer3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "area_mask",
        "type": "int"
      },
      {
        "name": "attenuation_filter_cutoff_hz",
        "type": "float"
      },
      {
        "name": "attenuation_filter_db",
        "type": "float"
      },
      {
        "name": "attenuation_model",
        "type": "int"
      },
      {
        "name": "autoplay",
        "type": "bool"
      },
      {
        "name": "bus",
        "type": "StringName"
      },
      {
        "name": "doppler_tracking",
        "type": "int"
      },
      {
        "name": "emission_angle_degrees",
        "type": "float"
      },
      {
        "name": "emission_angle_enabled",
        "type": "bool"
      },
      {
        "name": "emission_angle_filter_attenuation_db",
        "type": "float"
      },
      {
        "name": "max_db",
        "type": "float"
      },
      {
        "name": "max_distance",
        "type": "float"
      },
      {
        "name": "max_polyphony",
        "type": "int"
      },
      {
        "name": "panning_strength",
        "type": "float"
      },
      {
        "name": "pitch_scale",
        "type": "float"
      },
      {
        "name": "playback_type",
        "type": "int"
      },
      {
        "name": "playing",
        "type": "bool"
      },
      {
        "name": "stream",
        "type": "AudioStream"
      },
      {
        "name": "stream_paused",
        "type": "bool"
      },
      {
        "name": "unit_size",
        "type": "float"
      },
      {
        "name": "volume_db",
        "type": "float"
      },
      {
        "name": "volume_linear",
        "type": "float"
      }
    ]
  },
  "AudioStreamPolyphonic": {
    "methods": [],
    "name": "AudioStreamPolyphonic",
    "parent": "AudioStream",
    "properties": [
      {
        "name": "polyphony",
        "type": "int"
      }
    ]
  },
  "AudioStreamRandomizer": {
    "methods": [
      {
        "name": "add_stream",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "stream",
            "type": "AudioStream"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_stream",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "AudioStream"
      },
      {
        "name": "get_stream_probability_weight",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "move_stream",
        "parameters": [
          {
            "name": "index_from",
            "type": "int"
          },
          {
            "name": "index_to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_stream",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stream",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "stream",
            "type": "AudioStream"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stream_probability_weight",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "AudioStreamRandomizer",
    "parent": "AudioStream",
    "properties": [
      {
        "name": "playback_mode",
        "type": "int"
      },
      {
        "name": "random_pitch",
        "type": "float"
      },
      {
        "name": "random_volume_offset_db",
        "type": "float"
      },
      {
        "name": "streams_count",
        "type": "int"
      }
    ]
  },
  "AudioStreamWAV": {
    "methods": [
      {
        "name": "load_from_buffer",
        "parameters": [
          {
            "name": "stream_data",
            "type": "PackedByteArray"
          },
          {
            "name": "options",
            "type": "Dictionary"
          }
        ],
        "return_type": "AudioStreamWAV"
      },
      {
        "name": "load_from_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "options",
            "type": "Dictionary"
          }
        ],
        "return_type": "AudioStreamWAV"
      },
      {
        "name": "save_to_wav",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "AudioStreamWAV",
    "parent": "AudioStream",
    "properties": [
      {
        "name": "data",
        "type": "PackedByteArray"
      },
      {
        "name": "format",
        "type": "int"
      },
      {
        "name": "loop_begin",
        "type": "int"
      },
      {
        "name": "loop_end",
        "type": "int"
      },
      {
        "name": "loop_mode",
        "type": "int"
      },
      {
        "name": "mix_rate",
        "type": "int"
      },
      {
        "name": "stereo",
        "type": "bool"
      }
    ]
  },
  "BackBufferCopy": {
    "methods": [],
    "name": "BackBufferCopy",
    "parent": "Node2D",
    "properties": [
      {
        "name": "copy_mode",
        "type": "int"
      },
      {
        "name": "rect",
        "type": "Rect2"
      }
    ]
  },
  "BaseButton": {
    "methods": [
      {
        "name": "_pressed",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_toggled",
        "parameters": [
          {
            "name": "toggled_on",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_draw_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_hovered",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_pressed_no_signal",
        "parameters": [
          {
            "name": "pressed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "BaseButton",
    "parent": "Control",
    "properties": [
      {
        "name": "action_mode",
        "type": "int"
      },
      {
        "name": "button_group",
        "type": "ButtonGroup"
      },
      {
        "name": "button_mask",
        "type": "int"
      },
      {
        "name": "button_pressed",
        "type": "bool"
      },
      {
        "name": "disabled",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "keep_pressed_outside",
        "type": "bool"
      },
      {
        "name": "shortcut",
        "type": "Shortcut"
      },
      {
        "name": "shortcut_feedback",
        "type": "bool"
      },
      {
        "name": "shortcut_in_tooltip",
        "type": "bool"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "BaseMaterial3D": {
    "methods": [
      {
        "name": "get_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_texture",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "set_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "BaseMaterial3D",
    "parent": "Material",
    "properties": [
      {
        "name": "albedo_color",
        "type": "Color"
      },
      {
        "name": "albedo_texture",
        "type": "Texture2D"
      },
      {
        "name": "albedo_texture_force_srgb",
        "type": "bool"
      },
      {
        "name": "albedo_texture_msdf",
        "type": "bool"
      },
      {
        "name": "alpha_antialiasing_edge",
        "type": "float"
      },
      {
        "name": "alpha_antialiasing_mode",
        "type": "int"
      },
      {
        "name": "alpha_hash_scale",
        "type": "float"
      },
      {
        "name": "alpha_scissor_threshold",
        "type": "float"
      },
      {
        "name": "anisotropy",
        "type": "float"
      },
      {
        "name": "anisotropy_enabled",
        "type": "bool"
      },
      {
        "name": "anisotropy_flowmap",
        "type": "Texture2D"
      },
      {
        "name": "ao_enabled",
        "type": "bool"
      },
      {
        "name": "ao_light_affect",
        "type": "float"
      },
      {
        "name": "ao_on_uv2",
        "type": "bool"
      },
      {
        "name": "ao_texture",
        "type": "Texture2D"
      },
      {
        "name": "ao_texture_channel",
        "type": "int"
      },
      {
        "name": "backlight",
        "type": "Color"
      },
      {
        "name": "backlight_enabled",
        "type": "bool"
      },
      {
        "name": "backlight_texture",
        "type": "Texture2D"
      },
      {
        "name": "billboard_keep_scale",
        "type": "bool"
      },
      {
        "name": "billboard_mode",
        "type": "int"
      },
      {
        "name": "blend_mode",
        "type": "int"
      },
      {
        "name": "clearcoat",
        "type": "float"
      },
      {
        "name": "clearcoat_enabled",
        "type": "bool"
      },
      {
        "name": "clearcoat_roughness",
        "type": "float"
      },
      {
        "name": "clearcoat_texture",
        "type": "Texture2D"
      },
      {
        "name": "cull_mode",
        "type": "int"
      },
      {
        "name": "depth_draw_mode",
        "type": "int"
      },
      {
        "name": "detail_albedo",
        "type": "Texture2D"
      },
      {
        "name": "detail_blend_mode",
        "type": "int"
      },
      {
        "name": "detail_enabled",
        "type": "bool"
      },
      {
        "name": "detail_mask",
        "type": "Texture2D"
      },
      {
        "name": "detail_normal",
        "type": "Texture2D"
      },
      {
        "name": "detail_uv_layer",
        "type": "int"
      },
      {
        "name": "diffuse_mode",
        "type": "int"
      },
      {
        "name": "disable_ambient_light",
        "type": "bool"
      },
      {
        "name": "disable_fog",
        "type": "bool"
      },
      {
        "name": "disable_receive_shadows",
        "type": "bool"
      },
      {
        "name": "distance_fade_max_distance",
        "type": "float"
      },
      {
        "name": "distance_fade_min_distance",
        "type": "float"
      },
      {
        "name": "distance_fade_mode",
        "type": "int"
      },
      {
        "name": "emission",
        "type": "Color"
      },
      {
        "name": "emission_enabled",
        "type": "bool"
      },
      {
        "name": "emission_energy_multiplier",
        "type": "float"
      },
      {
        "name": "emission_intensity",
        "type": "float"
      },
      {
        "name": "emission_on_uv2",
        "type": "bool"
      },
      {
        "name": "emission_operator",
        "type": "int"
      },
      {
        "name": "emission_texture",
        "type": "Texture2D"
      },
      {
        "name": "fixed_size",
        "type": "bool"
      },
      {
        "name": "grow",
        "type": "bool"
      },
      {
        "name": "grow_amount",
        "type": "float"
      },
      {
        "name": "heightmap_deep_parallax",
        "type": "bool"
      },
      {
        "name": "heightmap_enabled",
        "type": "bool"
      },
      {
        "name": "heightmap_flip_binormal",
        "type": "bool"
      },
      {
        "name": "heightmap_flip_tangent",
        "type": "bool"
      },
      {
        "name": "heightmap_flip_texture",
        "type": "bool"
      },
      {
        "name": "heightmap_max_layers",
        "type": "int"
      },
      {
        "name": "heightmap_min_layers",
        "type": "int"
      },
      {
        "name": "heightmap_scale",
        "type": "float"
      },
      {
        "name": "heightmap_texture",
        "type": "Texture2D"
      },
      {
        "name": "metallic",
        "type": "float"
      },
      {
        "name": "metallic_specular",
        "type": "float"
      },
      {
        "name": "metallic_texture",
        "type": "Texture2D"
      },
      {
        "name": "metallic_texture_channel",
        "type": "int"
      },
      {
        "name": "msdf_outline_size",
        "type": "float"
      },
      {
        "name": "msdf_pixel_range",
        "type": "float"
      },
      {
        "name": "no_depth_test",
        "type": "bool"
      },
      {
        "name": "normal_enabled",
        "type": "bool"
      },
      {
        "name": "normal_scale",
        "type": "float"
      },
      {
        "name": "normal_texture",
        "type": "Texture2D"
      },
      {
        "name": "orm_texture",
        "type": "Texture2D"
      },
      {
        "name": "particles_anim_h_frames",
        "type": "int"
      },
      {
        "name": "particles_anim_loop",
        "type": "bool"
      },
      {
        "name": "particles_anim_v_frames",
        "type": "int"
      },
      {
        "name": "point_size",
        "type": "float"
      },
      {
        "name": "proximity_fade_distance",
        "type": "float"
      },
      {
        "name": "proximity_fade_enabled",
        "type": "bool"
      },
      {
        "name": "refraction_enabled",
        "type": "bool"
      },
      {
        "name": "refraction_scale",
        "type": "float"
      },
      {
        "name": "refraction_texture",
        "type": "Texture2D"
      },
      {
        "name": "refraction_texture_channel",
        "type": "int"
      },
      {
        "name": "rim",
        "type": "float"
      },
      {
        "name": "rim_enabled",
        "type": "bool"
      },
      {
        "name": "rim_texture",
        "type": "Texture2D"
      },
      {
        "name": "rim_tint",
        "type": "float"
      },
      {
        "name": "roughness",
        "type": "float"
      },
      {
        "name": "roughness_texture",
        "type": "Texture2D"
      },
      {
        "name": "roughness_texture_channel",
        "type": "int"
      },
      {
        "name": "shading_mode",
        "type": "int"
      },
      {
        "name": "shadow_to_opacity",
        "type": "bool"
      },
      {
        "name": "specular_mode",
        "type": "int"
      },
      {
        "name": "subsurf_scatter_enabled",
        "type": "bool"
      },
      {
        "name": "subsurf_scatter_skin_mode",
        "type": "bool"
      },
      {
        "name": "subsurf_scatter_strength",
        "type": "float"
      },
      {
        "name": "subsurf_scatter_texture",
        "type": "Texture2D"
      },
      {
        "name": "subsurf_scatter_transmittance_boost",
        "type": "float"
      },
      {
        "name": "subsurf_scatter_transmittance_color",
        "type": "Color"
      },
      {
        "name": "subsurf_scatter_transmittance_depth",
        "type": "float"
      },
      {
        "name": "subsurf_scatter_transmittance_enabled",
        "type": "bool"
      },
      {
        "name": "subsurf_scatter_transmittance_texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "texture_repeat",
        "type": "bool"
      },
      {
        "name": "transparency",
        "type": "int"
      },
      {
        "name": "use_particle_trails",
        "type": "bool"
      },
      {
        "name": "use_point_size",
        "type": "bool"
      },
      {
        "name": "uv1_offset",
        "type": "Vector3"
      },
      {
        "name": "uv1_scale",
        "type": "Vector3"
      },
      {
        "name": "uv1_triplanar",
        "type": "bool"
      },
      {
        "name": "uv1_triplanar_sharpness",
        "type": "float"
      },
      {
        "name": "uv1_world_triplanar",
        "type": "bool"
      },
      {
        "name": "uv2_offset",
        "type": "Vector3"
      },
      {
        "name": "uv2_scale",
        "type": "Vector3"
      },
      {
        "name": "uv2_triplanar",
        "type": "bool"
      },
      {
        "name": "uv2_triplanar_sharpness",
        "type": "float"
      },
      {
        "name": "uv2_world_triplanar",
        "type": "bool"
      },
      {
        "name": "vertex_color_is_srgb",
        "type": "bool"
      },
      {
        "name": "vertex_color_use_as_albedo",
        "type": "bool"
      }
    ]
  },
  "Basis": {
    "methods": [
      {
        "name": "determinant",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "from_euler",
        "parameters": [
          {
            "name": "euler",
            "type": "Vector3"
          },
          {
            "name": "order",
            "type": "int"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "from_scale",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "get_euler",
        "parameters": [
          {
            "name": "order",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_rotation_quaternion",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "get_scale",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Basis"
      },
      {
        "name": "is_conformal",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "b",
            "type": "Basis"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "looking_at",
        "parameters": [
          {
            "name": "target",
            "type": "Vector3"
          },
          {
            "name": "up",
            "type": "Vector3"
          },
          {
            "name": "use_model_front",
            "type": "bool"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "orthonormalized",
        "parameters": [],
        "return_type": "Basis"
      },
      {
        "name": "rotated",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "scaled",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "slerp",
        "parameters": [
          {
            "name": "to",
            "type": "Basis"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "tdotx",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "tdoty",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "tdotz",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "transposed",
        "parameters": [],
        "return_type": "Basis"
      }
    ],
    "name": "Basis",
    "parent": null,
    "properties": [
      {
        "name": "x",
        "type": "Vector3"
      },
      {
        "name": "y",
        "type": "Vector3"
      },
      {
        "name": "z",
        "type": "Vector3"
      }
    ]
  },
  "BitMap": {
    "methods": [
      {
        "name": "convert_to_image",
        "parameters": [],
        "return_type": "Image"
      },
      {
        "name": "create",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_from_image_alpha",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "threshold",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bit",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_bitv",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_true_bit_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "grow_mask",
        "parameters": [
          {
            "name": "pixels",
            "type": "int"
          },
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "opaque_to_polygons",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2i"
          },
          {
            "name": "epsilon",
            "type": "float"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bit",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          },
          {
            "name": "bit",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bit_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2i"
          },
          {
            "name": "bit",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bitv",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "bit",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "BitMap",
    "parent": "Resource",
    "properties": []
  },
  "Bone2D": {
    "methods": [
      {
        "name": "apply_rest",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_autocalculate_length_and_angle",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_bone_angle",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_index_in_skeleton",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_skeleton_rest",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "set_autocalculate_length_and_angle",
        "parameters": [
          {
            "name": "auto_calculate",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_angle",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_length",
        "parameters": [
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Bone2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "rest",
        "type": "Transform2D"
      }
    ]
  },
  "BoneAttachment3D": {
    "methods": [
      {
        "name": "get_external_skeleton",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "Skeleton3D"
      },
      {
        "name": "get_use_external_skeleton",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "on_skeleton_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_external_skeleton",
        "parameters": [
          {
            "name": "external_skeleton",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_use_external_skeleton",
        "parameters": [
          {
            "name": "use_external_skeleton",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "BoneAttachment3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "bone_idx",
        "type": "int"
      },
      {
        "name": "bone_name",
        "type": "String"
      },
      {
        "name": "override_pose",
        "type": "bool"
      }
    ]
  },
  "BoneMap": {
    "methods": [
      {
        "name": "find_profile_bone_name",
        "parameters": [
          {
            "name": "skeleton_bone_name",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_skeleton_bone_name",
        "parameters": [
          {
            "name": "profile_bone_name",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "set_skeleton_bone_name",
        "parameters": [
          {
            "name": "profile_bone_name",
            "type": "StringName"
          },
          {
            "name": "skeleton_bone_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "BoneMap",
    "parent": "Resource",
    "properties": [
      {
        "name": "profile",
        "type": "SkeletonProfile"
      }
    ]
  },
  "BoxContainer": {
    "methods": [
      {
        "name": "add_spacer",
        "parameters": [
          {
            "name": "begin",
            "type": "bool"
          }
        ],
        "return_type": "Control"
      }
    ],
    "name": "BoxContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "vertical",
        "type": "bool"
      }
    ]
  },
  "BoxMesh": {
    "methods": [],
    "name": "BoxMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "subdivide_depth",
        "type": "int"
      },
      {
        "name": "subdivide_height",
        "type": "int"
      },
      {
        "name": "subdivide_width",
        "type": "int"
      }
    ]
  },
  "BoxOccluder3D": {
    "methods": [],
    "name": "BoxOccluder3D",
    "parent": "Occluder3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "BoxShape3D": {
    "methods": [],
    "name": "BoxShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "Button": {
    "methods": [],
    "name": "Button",
    "parent": "BaseButton",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "clip_text",
        "type": "bool"
      },
      {
        "name": "expand_icon",
        "type": "bool"
      },
      {
        "name": "flat",
        "type": "bool"
      },
      {
        "name": "icon",
        "type": "Texture2D"
      },
      {
        "name": "icon_alignment",
        "type": "int"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "text_overrun_behavior",
        "type": "int"
      },
      {
        "name": "vertical_icon_alignment",
        "type": "int"
      }
    ]
  },
  "ButtonGroup": {
    "methods": [
      {
        "name": "get_buttons",
        "parameters": [],
        "return_type": "BaseButton[]"
      },
      {
        "name": "get_pressed_button",
        "parameters": [],
        "return_type": "BaseButton"
      }
    ],
    "name": "ButtonGroup",
    "parent": "Resource",
    "properties": [
      {
        "name": "allow_unpress",
        "type": "bool"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "CPUParticles2D": {
    "methods": [
      {
        "name": "convert_from_particles",
        "parameters": [
          {
            "name": "particles",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_param_curve",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "get_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "request_particles_process",
        "parameters": [
          {
            "name": "process_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "restart",
        "parameters": [
          {
            "name": "keep_seed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_curve",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CPUParticles2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "amount",
        "type": "int"
      },
      {
        "name": "angle_curve",
        "type": "Curve"
      },
      {
        "name": "angle_max",
        "type": "float"
      },
      {
        "name": "angle_min",
        "type": "float"
      },
      {
        "name": "angular_velocity_curve",
        "type": "Curve"
      },
      {
        "name": "angular_velocity_max",
        "type": "float"
      },
      {
        "name": "angular_velocity_min",
        "type": "float"
      },
      {
        "name": "anim_offset_curve",
        "type": "Curve"
      },
      {
        "name": "anim_offset_max",
        "type": "float"
      },
      {
        "name": "anim_offset_min",
        "type": "float"
      },
      {
        "name": "anim_speed_curve",
        "type": "Curve"
      },
      {
        "name": "anim_speed_max",
        "type": "float"
      },
      {
        "name": "anim_speed_min",
        "type": "float"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "color_initial_ramp",
        "type": "Gradient"
      },
      {
        "name": "color_ramp",
        "type": "Gradient"
      },
      {
        "name": "damping_curve",
        "type": "Curve"
      },
      {
        "name": "damping_max",
        "type": "float"
      },
      {
        "name": "damping_min",
        "type": "float"
      },
      {
        "name": "direction",
        "type": "Vector2"
      },
      {
        "name": "draw_order",
        "type": "int"
      },
      {
        "name": "emission_colors",
        "type": "PackedColorArray"
      },
      {
        "name": "emission_normals",
        "type": "PackedVector2Array"
      },
      {
        "name": "emission_points",
        "type": "PackedVector2Array"
      },
      {
        "name": "emission_rect_extents",
        "type": "Vector2"
      },
      {
        "name": "emission_shape",
        "type": "int"
      },
      {
        "name": "emission_sphere_radius",
        "type": "float"
      },
      {
        "name": "emitting",
        "type": "bool"
      },
      {
        "name": "explosiveness",
        "type": "float"
      },
      {
        "name": "fixed_fps",
        "type": "int"
      },
      {
        "name": "fract_delta",
        "type": "bool"
      },
      {
        "name": "gravity",
        "type": "Vector2"
      },
      {
        "name": "hue_variation_curve",
        "type": "Curve"
      },
      {
        "name": "hue_variation_max",
        "type": "float"
      },
      {
        "name": "hue_variation_min",
        "type": "float"
      },
      {
        "name": "initial_velocity_max",
        "type": "float"
      },
      {
        "name": "initial_velocity_min",
        "type": "float"
      },
      {
        "name": "lifetime",
        "type": "float"
      },
      {
        "name": "lifetime_randomness",
        "type": "float"
      },
      {
        "name": "linear_accel_curve",
        "type": "Curve"
      },
      {
        "name": "linear_accel_max",
        "type": "float"
      },
      {
        "name": "linear_accel_min",
        "type": "float"
      },
      {
        "name": "local_coords",
        "type": "bool"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "orbit_velocity_curve",
        "type": "Curve"
      },
      {
        "name": "orbit_velocity_max",
        "type": "float"
      },
      {
        "name": "orbit_velocity_min",
        "type": "float"
      },
      {
        "name": "particle_flag_align_y",
        "type": "bool"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "preprocess",
        "type": "float"
      },
      {
        "name": "radial_accel_curve",
        "type": "Curve"
      },
      {
        "name": "radial_accel_max",
        "type": "float"
      },
      {
        "name": "radial_accel_min",
        "type": "float"
      },
      {
        "name": "randomness",
        "type": "float"
      },
      {
        "name": "scale_amount_curve",
        "type": "Curve"
      },
      {
        "name": "scale_amount_max",
        "type": "float"
      },
      {
        "name": "scale_amount_min",
        "type": "float"
      },
      {
        "name": "scale_curve_x",
        "type": "Curve"
      },
      {
        "name": "scale_curve_y",
        "type": "Curve"
      },
      {
        "name": "seed",
        "type": "int"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "split_scale",
        "type": "bool"
      },
      {
        "name": "spread",
        "type": "float"
      },
      {
        "name": "tangential_accel_curve",
        "type": "Curve"
      },
      {
        "name": "tangential_accel_max",
        "type": "float"
      },
      {
        "name": "tangential_accel_min",
        "type": "float"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "use_fixed_seed",
        "type": "bool"
      }
    ]
  },
  "CPUParticles3D": {
    "methods": [
      {
        "name": "capture_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "convert_from_particles",
        "parameters": [
          {
            "name": "particles",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_param_curve",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "get_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "request_particles_process",
        "parameters": [
          {
            "name": "process_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "restart",
        "parameters": [
          {
            "name": "keep_seed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_curve",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CPUParticles3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "amount",
        "type": "int"
      },
      {
        "name": "angle_curve",
        "type": "Curve"
      },
      {
        "name": "angle_max",
        "type": "float"
      },
      {
        "name": "angle_min",
        "type": "float"
      },
      {
        "name": "angular_velocity_curve",
        "type": "Curve"
      },
      {
        "name": "angular_velocity_max",
        "type": "float"
      },
      {
        "name": "angular_velocity_min",
        "type": "float"
      },
      {
        "name": "anim_offset_curve",
        "type": "Curve"
      },
      {
        "name": "anim_offset_max",
        "type": "float"
      },
      {
        "name": "anim_offset_min",
        "type": "float"
      },
      {
        "name": "anim_speed_curve",
        "type": "Curve"
      },
      {
        "name": "anim_speed_max",
        "type": "float"
      },
      {
        "name": "anim_speed_min",
        "type": "float"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "color_initial_ramp",
        "type": "Gradient"
      },
      {
        "name": "color_ramp",
        "type": "Gradient"
      },
      {
        "name": "damping_curve",
        "type": "Curve"
      },
      {
        "name": "damping_max",
        "type": "float"
      },
      {
        "name": "damping_min",
        "type": "float"
      },
      {
        "name": "direction",
        "type": "Vector3"
      },
      {
        "name": "draw_order",
        "type": "int"
      },
      {
        "name": "emission_box_extents",
        "type": "Vector3"
      },
      {
        "name": "emission_colors",
        "type": "PackedColorArray"
      },
      {
        "name": "emission_normals",
        "type": "PackedVector3Array"
      },
      {
        "name": "emission_points",
        "type": "PackedVector3Array"
      },
      {
        "name": "emission_ring_axis",
        "type": "Vector3"
      },
      {
        "name": "emission_ring_cone_angle",
        "type": "float"
      },
      {
        "name": "emission_ring_height",
        "type": "float"
      },
      {
        "name": "emission_ring_inner_radius",
        "type": "float"
      },
      {
        "name": "emission_ring_radius",
        "type": "float"
      },
      {
        "name": "emission_shape",
        "type": "int"
      },
      {
        "name": "emission_sphere_radius",
        "type": "float"
      },
      {
        "name": "emitting",
        "type": "bool"
      },
      {
        "name": "explosiveness",
        "type": "float"
      },
      {
        "name": "fixed_fps",
        "type": "int"
      },
      {
        "name": "flatness",
        "type": "float"
      },
      {
        "name": "fract_delta",
        "type": "bool"
      },
      {
        "name": "gravity",
        "type": "Vector3"
      },
      {
        "name": "hue_variation_curve",
        "type": "Curve"
      },
      {
        "name": "hue_variation_max",
        "type": "float"
      },
      {
        "name": "hue_variation_min",
        "type": "float"
      },
      {
        "name": "initial_velocity_max",
        "type": "float"
      },
      {
        "name": "initial_velocity_min",
        "type": "float"
      },
      {
        "name": "lifetime",
        "type": "float"
      },
      {
        "name": "lifetime_randomness",
        "type": "float"
      },
      {
        "name": "linear_accel_curve",
        "type": "Curve"
      },
      {
        "name": "linear_accel_max",
        "type": "float"
      },
      {
        "name": "linear_accel_min",
        "type": "float"
      },
      {
        "name": "local_coords",
        "type": "bool"
      },
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "orbit_velocity_curve",
        "type": "Curve"
      },
      {
        "name": "orbit_velocity_max",
        "type": "float"
      },
      {
        "name": "orbit_velocity_min",
        "type": "float"
      },
      {
        "name": "particle_flag_align_y",
        "type": "bool"
      },
      {
        "name": "particle_flag_disable_z",
        "type": "bool"
      },
      {
        "name": "particle_flag_rotate_y",
        "type": "bool"
      },
      {
        "name": "preprocess",
        "type": "float"
      },
      {
        "name": "radial_accel_curve",
        "type": "Curve"
      },
      {
        "name": "radial_accel_max",
        "type": "float"
      },
      {
        "name": "radial_accel_min",
        "type": "float"
      },
      {
        "name": "randomness",
        "type": "float"
      },
      {
        "name": "scale_amount_curve",
        "type": "Curve"
      },
      {
        "name": "scale_amount_max",
        "type": "float"
      },
      {
        "name": "scale_amount_min",
        "type": "float"
      },
      {
        "name": "scale_curve_x",
        "type": "Curve"
      },
      {
        "name": "scale_curve_y",
        "type": "Curve"
      },
      {
        "name": "scale_curve_z",
        "type": "Curve"
      },
      {
        "name": "seed",
        "type": "int"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "split_scale",
        "type": "bool"
      },
      {
        "name": "spread",
        "type": "float"
      },
      {
        "name": "tangential_accel_curve",
        "type": "Curve"
      },
      {
        "name": "tangential_accel_max",
        "type": "float"
      },
      {
        "name": "tangential_accel_min",
        "type": "float"
      },
      {
        "name": "use_fixed_seed",
        "type": "bool"
      },
      {
        "name": "visibility_aabb",
        "type": "AABB"
      }
    ]
  },
  "Callable": {
    "methods": [
      {
        "name": "bind",
        "parameters": [],
        "return_type": "Callable"
      },
      {
        "name": "bindv",
        "parameters": [
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "call",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "call_deferred",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "callv",
        "parameters": [
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "create",
        "parameters": [
          {
            "name": "variant",
            "type": "Variant"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_argument_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_bound_arguments",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_bound_arguments_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_method",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_object",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_object_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_unbound_arguments_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_custom",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_null",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_standard",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "rpc",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rpc_id",
        "parameters": [
          {
            "name": "peer_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unbind",
        "parameters": [
          {
            "name": "argcount",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      }
    ],
    "name": "Callable",
    "parent": null,
    "properties": []
  },
  "CallbackTweener": {
    "methods": [
      {
        "name": "set_delay",
        "parameters": [
          {
            "name": "delay",
            "type": "float"
          }
        ],
        "return_type": "CallbackTweener"
      }
    ],
    "name": "CallbackTweener",
    "parent": "Tweener",
    "properties": []
  },
  "Camera2D": {
    "methods": [
      {
        "name": "align",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_update_scroll",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_drag_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_limit",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_screen_center_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_target_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "is_current",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "make_current",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "reset_smoothing",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_drag_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "drag_margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_limit",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "limit",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Camera2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "anchor_mode",
        "type": "int"
      },
      {
        "name": "custom_viewport",
        "type": "Node"
      },
      {
        "name": "drag_bottom_margin",
        "type": "float"
      },
      {
        "name": "drag_horizontal_enabled",
        "type": "bool"
      },
      {
        "name": "drag_horizontal_offset",
        "type": "float"
      },
      {
        "name": "drag_left_margin",
        "type": "float"
      },
      {
        "name": "drag_right_margin",
        "type": "float"
      },
      {
        "name": "drag_top_margin",
        "type": "float"
      },
      {
        "name": "drag_vertical_enabled",
        "type": "bool"
      },
      {
        "name": "drag_vertical_offset",
        "type": "float"
      },
      {
        "name": "editor_draw_drag_margin",
        "type": "bool"
      },
      {
        "name": "editor_draw_limits",
        "type": "bool"
      },
      {
        "name": "editor_draw_screen",
        "type": "bool"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "ignore_rotation",
        "type": "bool"
      },
      {
        "name": "limit_bottom",
        "type": "int"
      },
      {
        "name": "limit_left",
        "type": "int"
      },
      {
        "name": "limit_right",
        "type": "int"
      },
      {
        "name": "limit_smoothed",
        "type": "bool"
      },
      {
        "name": "limit_top",
        "type": "int"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "position_smoothing_enabled",
        "type": "bool"
      },
      {
        "name": "position_smoothing_speed",
        "type": "float"
      },
      {
        "name": "process_callback",
        "type": "int"
      },
      {
        "name": "rotation_smoothing_enabled",
        "type": "bool"
      },
      {
        "name": "rotation_smoothing_speed",
        "type": "float"
      },
      {
        "name": "zoom",
        "type": "Vector2"
      }
    ]
  },
  "Camera3D": {
    "methods": [
      {
        "name": "clear_current",
        "parameters": [
          {
            "name": "enable_next",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_camera_projection",
        "parameters": [],
        "return_type": "Projection"
      },
      {
        "name": "get_camera_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_camera_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "get_cull_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_frustum",
        "parameters": [],
        "return_type": "Plane[]"
      },
      {
        "name": "get_pyramid_shape_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_position_behind",
        "parameters": [
          {
            "name": "world_point",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_position_in_frustum",
        "parameters": [
          {
            "name": "world_point",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "make_current",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "project_local_ray_normal",
        "parameters": [
          {
            "name": "screen_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "project_position",
        "parameters": [
          {
            "name": "screen_point",
            "type": "Vector2"
          },
          {
            "name": "z_depth",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "project_ray_normal",
        "parameters": [
          {
            "name": "screen_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "project_ray_origin",
        "parameters": [
          {
            "name": "screen_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "set_cull_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_frustum",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "Vector2"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_orthogonal",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_perspective",
        "parameters": [
          {
            "name": "fov",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unproject_position",
        "parameters": [
          {
            "name": "world_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector2"
      }
    ],
    "name": "Camera3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "attributes",
        "type": "CameraAttributes"
      },
      {
        "name": "compositor",
        "type": "Compositor"
      },
      {
        "name": "cull_mask",
        "type": "int"
      },
      {
        "name": "current",
        "type": "bool"
      },
      {
        "name": "doppler_tracking",
        "type": "int"
      },
      {
        "name": "environment",
        "type": "Environment"
      },
      {
        "name": "far",
        "type": "float"
      },
      {
        "name": "fov",
        "type": "float"
      },
      {
        "name": "frustum_offset",
        "type": "Vector2"
      },
      {
        "name": "h_offset",
        "type": "float"
      },
      {
        "name": "keep_aspect",
        "type": "int"
      },
      {
        "name": "near",
        "type": "float"
      },
      {
        "name": "projection",
        "type": "int"
      },
      {
        "name": "size",
        "type": "float"
      },
      {
        "name": "v_offset",
        "type": "float"
      }
    ]
  },
  "CameraAttributes": {
    "methods": [],
    "name": "CameraAttributes",
    "parent": "Resource",
    "properties": [
      {
        "name": "auto_exposure_enabled",
        "type": "bool"
      },
      {
        "name": "auto_exposure_scale",
        "type": "float"
      },
      {
        "name": "auto_exposure_speed",
        "type": "float"
      },
      {
        "name": "exposure_multiplier",
        "type": "float"
      },
      {
        "name": "exposure_sensitivity",
        "type": "float"
      }
    ]
  },
  "CameraAttributesPhysical": {
    "methods": [
      {
        "name": "get_fov",
        "parameters": [],
        "return_type": "float"
      }
    ],
    "name": "CameraAttributesPhysical",
    "parent": "CameraAttributes",
    "properties": [
      {
        "name": "auto_exposure_max_exposure_value",
        "type": "float"
      },
      {
        "name": "auto_exposure_min_exposure_value",
        "type": "float"
      },
      {
        "name": "exposure_aperture",
        "type": "float"
      },
      {
        "name": "exposure_shutter_speed",
        "type": "float"
      },
      {
        "name": "frustum_far",
        "type": "float"
      },
      {
        "name": "frustum_focal_length",
        "type": "float"
      },
      {
        "name": "frustum_focus_distance",
        "type": "float"
      },
      {
        "name": "frustum_near",
        "type": "float"
      }
    ]
  },
  "CameraAttributesPractical": {
    "methods": [],
    "name": "CameraAttributesPractical",
    "parent": "CameraAttributes",
    "properties": [
      {
        "name": "auto_exposure_max_sensitivity",
        "type": "float"
      },
      {
        "name": "auto_exposure_min_sensitivity",
        "type": "float"
      },
      {
        "name": "dof_blur_amount",
        "type": "float"
      },
      {
        "name": "dof_blur_far_distance",
        "type": "float"
      },
      {
        "name": "dof_blur_far_enabled",
        "type": "bool"
      },
      {
        "name": "dof_blur_far_transition",
        "type": "float"
      },
      {
        "name": "dof_blur_near_distance",
        "type": "float"
      },
      {
        "name": "dof_blur_near_enabled",
        "type": "bool"
      },
      {
        "name": "dof_blur_near_transition",
        "type": "float"
      }
    ]
  },
  "CameraFeed": {
    "methods": [
      {
        "name": "_activate_feed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_deactivate_feed",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_datatype",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_position",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_texture_tex_id",
        "parameters": [
          {
            "name": "feed_image_type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_external",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_format",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "parameters",
            "type": "Dictionary"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_name",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_position",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_rgb_image",
        "parameters": [
          {
            "name": "rgb_image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ycbcr_image",
        "parameters": [
          {
            "name": "ycbcr_image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CameraFeed",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "feed_is_active",
        "type": "bool"
      },
      {
        "name": "feed_transform",
        "type": "Transform2D"
      },
      {
        "name": "formats",
        "type": "Array"
      }
    ]
  },
  "CameraServer": {
    "methods": [
      {
        "name": "add_feed",
        "parameters": [
          {
            "name": "feed",
            "type": "CameraFeed"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "feeds",
        "parameters": [],
        "return_type": "CameraFeed[]"
      },
      {
        "name": "get_feed",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "CameraFeed"
      },
      {
        "name": "get_feed_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "remove_feed",
        "parameters": [
          {
            "name": "feed",
            "type": "CameraFeed"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CameraServer",
    "parent": "Object",
    "properties": []
  },
  "CameraTexture": {
    "methods": [],
    "name": "CameraTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "camera_feed_id",
        "type": "int"
      },
      {
        "name": "camera_is_active",
        "type": "bool"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "which_feed",
        "type": "int"
      }
    ]
  },
  "CanvasGroup": {
    "methods": [],
    "name": "CanvasGroup",
    "parent": "Node2D",
    "properties": [
      {
        "name": "clear_margin",
        "type": "float"
      },
      {
        "name": "fit_margin",
        "type": "float"
      },
      {
        "name": "use_mipmaps",
        "type": "bool"
      }
    ]
  },
  "CanvasItem": {
    "methods": [
      {
        "name": "_draw",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw_animation_slice",
        "parameters": [
          {
            "name": "animation_length",
            "type": "float"
          },
          {
            "name": "slice_begin",
            "type": "float"
          },
          {
            "name": "slice_end",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_arc",
        "parameters": [
          {
            "name": "center",
            "type": "Vector2"
          },
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "start_angle",
            "type": "float"
          },
          {
            "name": "end_angle",
            "type": "float"
          },
          {
            "name": "point_count",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_char",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "char",
            "type": "String"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_char_outline",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "char",
            "type": "String"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_circle",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "filled",
            "type": "bool"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_colored_polygon",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_dashed_line",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "dash",
            "type": "float"
          },
          {
            "name": "aligned",
            "type": "bool"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_end_animation",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw_lcd_texture_rect_region",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_line",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_mesh",
        "parameters": [
          {
            "name": "mesh",
            "type": "Mesh"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_msdf_texture_rect_region",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "outline",
            "type": "float"
          },
          {
            "name": "pixel_range",
            "type": "float"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multiline",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multiline_colors",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multiline_string",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "max_lines",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "brk_flags",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multiline_string_outline",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "max_lines",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "brk_flags",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multimesh",
        "parameters": [
          {
            "name": "multimesh",
            "type": "MultiMesh"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_polygon",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_polyline",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_polyline_colors",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_primitive",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "filled",
            "type": "bool"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_set_transform",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "rotation",
            "type": "float"
          },
          {
            "name": "scale",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_set_transform_matrix",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_string",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_string_outline",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_style_box",
        "parameters": [
          {
            "name": "style_box",
            "type": "StyleBox"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_texture",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_texture_rect",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "tile",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_texture_rect_region",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          },
          {
            "name": "clip_uv",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "force_update_transform",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_canvas",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_canvas_item",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_canvas_layer_node",
        "parameters": [],
        "return_type": "CanvasLayer"
      },
      {
        "name": "get_canvas_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_global_mouse_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_global_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_global_transform_with_canvas",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_instance_shader_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_local_mouse_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_screen_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_viewport_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_viewport_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_visibility_layer_bit",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_world_2d",
        "parameters": [],
        "return_type": "World2D"
      },
      {
        "name": "hide",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_local_transform_notification_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_transform_notification_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_visible_in_tree",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "make_canvas_position_local",
        "parameters": [
          {
            "name": "viewport_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "make_input_local",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "InputEvent"
      },
      {
        "name": "move_to_front",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "queue_redraw",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_instance_shader_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_notify_local_transform",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_notify_transform",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_visibility_layer_bit",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "CanvasItem",
    "parent": "Node",
    "properties": [
      {
        "name": "clip_children",
        "type": "int"
      },
      {
        "name": "light_mask",
        "type": "int"
      },
      {
        "name": "material",
        "type": "Material"
      },
      {
        "name": "modulate",
        "type": "Color"
      },
      {
        "name": "self_modulate",
        "type": "Color"
      },
      {
        "name": "show_behind_parent",
        "type": "bool"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "texture_repeat",
        "type": "int"
      },
      {
        "name": "top_level",
        "type": "bool"
      },
      {
        "name": "use_parent_material",
        "type": "bool"
      },
      {
        "name": "visibility_layer",
        "type": "int"
      },
      {
        "name": "visible",
        "type": "bool"
      },
      {
        "name": "y_sort_enabled",
        "type": "bool"
      },
      {
        "name": "z_as_relative",
        "type": "bool"
      },
      {
        "name": "z_index",
        "type": "int"
      }
    ]
  },
  "CanvasItemMaterial": {
    "methods": [],
    "name": "CanvasItemMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "blend_mode",
        "type": "int"
      },
      {
        "name": "light_mode",
        "type": "int"
      },
      {
        "name": "particles_anim_h_frames",
        "type": "int"
      },
      {
        "name": "particles_anim_loop",
        "type": "bool"
      },
      {
        "name": "particles_anim_v_frames",
        "type": "int"
      },
      {
        "name": "particles_animation",
        "type": "bool"
      }
    ]
  },
  "CanvasLayer": {
    "methods": [
      {
        "name": "get_canvas",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_final_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "hide",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "show",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "CanvasLayer",
    "parent": "Node",
    "properties": [
      {
        "name": "custom_viewport",
        "type": "Node"
      },
      {
        "name": "follow_viewport_enabled",
        "type": "bool"
      },
      {
        "name": "follow_viewport_scale",
        "type": "float"
      },
      {
        "name": "layer",
        "type": "int"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "rotation",
        "type": "float"
      },
      {
        "name": "scale",
        "type": "Vector2"
      },
      {
        "name": "transform",
        "type": "Transform2D"
      },
      {
        "name": "visible",
        "type": "bool"
      }
    ]
  },
  "CanvasModulate": {
    "methods": [],
    "name": "CanvasModulate",
    "parent": "Node2D",
    "properties": [
      {
        "name": "color",
        "type": "Color"
      }
    ]
  },
  "CanvasTexture": {
    "methods": [],
    "name": "CanvasTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "diffuse_texture",
        "type": "Texture2D"
      },
      {
        "name": "normal_texture",
        "type": "Texture2D"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "specular_color",
        "type": "Color"
      },
      {
        "name": "specular_shininess",
        "type": "float"
      },
      {
        "name": "specular_texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "texture_repeat",
        "type": "int"
      }
    ]
  },
  "CapsuleMesh": {
    "methods": [],
    "name": "CapsuleMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radial_segments",
        "type": "int"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "rings",
        "type": "int"
      }
    ]
  },
  "CapsuleShape2D": {
    "methods": [],
    "name": "CapsuleShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "CapsuleShape3D": {
    "methods": [],
    "name": "CapsuleShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "CenterContainer": {
    "methods": [],
    "name": "CenterContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "use_top_left",
        "type": "bool"
      }
    ]
  },
  "CharFXTransform": {
    "methods": [],
    "name": "CharFXTransform",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "elapsed_time",
        "type": "float"
      },
      {
        "name": "env",
        "type": "Dictionary"
      },
      {
        "name": "font",
        "type": "RID"
      },
      {
        "name": "glyph_count",
        "type": "int"
      },
      {
        "name": "glyph_flags",
        "type": "int"
      },
      {
        "name": "glyph_index",
        "type": "int"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "outline",
        "type": "bool"
      },
      {
        "name": "range",
        "type": "Vector2i"
      },
      {
        "name": "relative_index",
        "type": "int"
      },
      {
        "name": "transform",
        "type": "Transform2D"
      },
      {
        "name": "visible",
        "type": "bool"
      }
    ]
  },
  "CharacterBody2D": {
    "methods": [
      {
        "name": "apply_floor_snap",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_floor_angle",
        "parameters": [
          {
            "name": "up_direction",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_floor_normal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_last_motion",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_last_slide_collision",
        "parameters": [],
        "return_type": "KinematicCollision2D"
      },
      {
        "name": "get_platform_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_position_delta",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_real_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_slide_collision",
        "parameters": [
          {
            "name": "slide_idx",
            "type": "int"
          }
        ],
        "return_type": "KinematicCollision2D"
      },
      {
        "name": "get_slide_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_wall_normal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "is_on_ceiling",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_ceiling_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_floor",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_floor_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_wall",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_wall_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_and_slide",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "CharacterBody2D",
    "parent": "PhysicsBody2D",
    "properties": [
      {
        "name": "floor_block_on_wall",
        "type": "bool"
      },
      {
        "name": "floor_constant_speed",
        "type": "bool"
      },
      {
        "name": "floor_max_angle",
        "type": "float"
      },
      {
        "name": "floor_snap_length",
        "type": "float"
      },
      {
        "name": "floor_stop_on_slope",
        "type": "bool"
      },
      {
        "name": "max_slides",
        "type": "int"
      },
      {
        "name": "motion_mode",
        "type": "int"
      },
      {
        "name": "platform_floor_layers",
        "type": "int"
      },
      {
        "name": "platform_on_leave",
        "type": "int"
      },
      {
        "name": "platform_wall_layers",
        "type": "int"
      },
      {
        "name": "safe_margin",
        "type": "float"
      },
      {
        "name": "slide_on_ceiling",
        "type": "bool"
      },
      {
        "name": "up_direction",
        "type": "Vector2"
      },
      {
        "name": "velocity",
        "type": "Vector2"
      },
      {
        "name": "wall_min_slide_angle",
        "type": "float"
      }
    ]
  },
  "CharacterBody3D": {
    "methods": [
      {
        "name": "apply_floor_snap",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_floor_angle",
        "parameters": [
          {
            "name": "up_direction",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_floor_normal",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_last_motion",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_last_slide_collision",
        "parameters": [],
        "return_type": "KinematicCollision3D"
      },
      {
        "name": "get_platform_angular_velocity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_platform_velocity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_position_delta",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_real_velocity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_slide_collision",
        "parameters": [
          {
            "name": "slide_idx",
            "type": "int"
          }
        ],
        "return_type": "KinematicCollision3D"
      },
      {
        "name": "get_slide_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_wall_normal",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "is_on_ceiling",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_ceiling_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_floor",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_floor_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_wall",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_on_wall_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_and_slide",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "CharacterBody3D",
    "parent": "PhysicsBody3D",
    "properties": [
      {
        "name": "floor_block_on_wall",
        "type": "bool"
      },
      {
        "name": "floor_constant_speed",
        "type": "bool"
      },
      {
        "name": "floor_max_angle",
        "type": "float"
      },
      {
        "name": "floor_snap_length",
        "type": "float"
      },
      {
        "name": "floor_stop_on_slope",
        "type": "bool"
      },
      {
        "name": "max_slides",
        "type": "int"
      },
      {
        "name": "motion_mode",
        "type": "int"
      },
      {
        "name": "platform_floor_layers",
        "type": "int"
      },
      {
        "name": "platform_on_leave",
        "type": "int"
      },
      {
        "name": "platform_wall_layers",
        "type": "int"
      },
      {
        "name": "safe_margin",
        "type": "float"
      },
      {
        "name": "slide_on_ceiling",
        "type": "bool"
      },
      {
        "name": "up_direction",
        "type": "Vector3"
      },
      {
        "name": "velocity",
        "type": "Vector3"
      },
      {
        "name": "wall_min_slide_angle",
        "type": "float"
      }
    ]
  },
  "CheckBox": {
    "methods": [],
    "name": "CheckBox",
    "parent": "Button",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "CheckButton": {
    "methods": [],
    "name": "CheckButton",
    "parent": "Button",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "CircleShape2D": {
    "methods": [],
    "name": "CircleShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "ClassDB": {
    "methods": [
      {
        "name": "can_instantiate",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_call_static",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "class_exists",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_get_api_type",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "class_get_enum_constants",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "enum",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "class_get_enum_list",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "class_get_integer_constant",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "class_get_integer_constant_enum",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "class_get_integer_constant_list",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "class_get_method_argument_count",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "class_get_method_list",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "class_get_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "class_get_property_default_value",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "class_get_property_getter",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "class_get_property_list",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "class_get_property_setter",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "class_get_signal",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "class_get_signal_list",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "class_has_enum",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_has_integer_constant",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_has_method",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_has_signal",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "class_set_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_class_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_inheriters_from_class",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_parent_class",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "instantiate",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "is_class_enabled",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_class_enum_bitfield",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "enum",
            "type": "StringName"
          },
          {
            "name": "no_inheritance",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_parent_class",
        "parameters": [
          {
            "name": "class",
            "type": "StringName"
          },
          {
            "name": "inherits",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "ClassDB",
    "parent": "Object",
    "properties": []
  },
  "CodeEdit": {
    "methods": [
      {
        "name": "_confirm_code_completion",
        "parameters": [
          {
            "name": "replace",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_filter_code_completion_candidates",
        "parameters": [
          {
            "name": "candidates",
            "type": "Dictionary[]"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_request_code_completion",
        "parameters": [
          {
            "name": "force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_auto_brace_completion_pair",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          },
          {
            "name": "end_key",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_code_completion_option",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "display_text",
            "type": "String"
          },
          {
            "name": "insert_text",
            "type": "String"
          },
          {
            "name": "text_color",
            "type": "Color"
          },
          {
            "name": "icon",
            "type": "Resource"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "location",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_comment_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          },
          {
            "name": "end_key",
            "type": "String"
          },
          {
            "name": "line_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_string_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          },
          {
            "name": "end_key",
            "type": "String"
          },
          {
            "name": "line_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "can_fold_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "cancel_code_completion",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_bookmarked_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_breakpointed_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_comment_delimiters",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_executing_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_string_delimiters",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "confirm_code_completion",
        "parameters": [
          {
            "name": "replace",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "convert_indent",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_code_region",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "delete_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "do_indent",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate_selection",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "fold_all_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "fold_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_auto_brace_completion_close_key",
        "parameters": [
          {
            "name": "open_key",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_bookmarked_lines",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_breakpointed_lines",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_code_completion_option",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_code_completion_options",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_code_completion_selected_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_code_region_end_tag",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_code_region_start_tag",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_delimiter_end_key",
        "parameters": [
          {
            "name": "delimiter_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_delimiter_end_position",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_delimiter_start_key",
        "parameters": [
          {
            "name": "delimiter_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_delimiter_start_position",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_executing_lines",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_folded_lines",
        "parameters": [],
        "return_type": "int[]"
      },
      {
        "name": "get_text_for_code_completion",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_text_for_symbol_lookup",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_text_with_cursor_char",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_auto_brace_completion_close_key",
        "parameters": [
          {
            "name": "close_key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_auto_brace_completion_open_key",
        "parameters": [
          {
            "name": "open_key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_comment_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_string_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "indent_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_in_comment",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_in_string",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_line_bookmarked",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_breakpointed",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_code_region_end",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_code_region_start",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_executing",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_folded",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "move_lines_down",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "move_lines_up",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_comment_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_string_delimiter",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "request_code_completion",
        "parameters": [
          {
            "name": "force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_code_completion_selected_index",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_code_hint",
        "parameters": [
          {
            "name": "code_hint",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_code_hint_draw_below",
        "parameters": [
          {
            "name": "draw_below",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_code_region_tags",
        "parameters": [
          {
            "name": "start",
            "type": "String"
          },
          {
            "name": "end",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_bookmarked",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "bookmarked",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_breakpoint",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "breakpointed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_executing",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "executing",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_symbol_lookup_word_as_valid",
        "parameters": [
          {
            "name": "valid",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "toggle_foldable_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "toggle_foldable_lines_at_carets",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "unfold_all_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "unfold_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unindent_lines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "update_code_completion_options",
        "parameters": [
          {
            "name": "force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CodeEdit",
    "parent": "TextEdit",
    "properties": [
      {
        "name": "auto_brace_completion_enabled",
        "type": "bool"
      },
      {
        "name": "auto_brace_completion_highlight_matching",
        "type": "bool"
      },
      {
        "name": "auto_brace_completion_pairs",
        "type": "Dictionary"
      },
      {
        "name": "code_completion_enabled",
        "type": "bool"
      },
      {
        "name": "code_completion_prefixes",
        "type": "String[]"
      },
      {
        "name": "delimiter_comments",
        "type": "String[]"
      },
      {
        "name": "delimiter_strings",
        "type": "String[]"
      },
      {
        "name": "gutters_draw_bookmarks",
        "type": "bool"
      },
      {
        "name": "gutters_draw_breakpoints_gutter",
        "type": "bool"
      },
      {
        "name": "gutters_draw_executing_lines",
        "type": "bool"
      },
      {
        "name": "gutters_draw_fold_gutter",
        "type": "bool"
      },
      {
        "name": "gutters_draw_line_numbers",
        "type": "bool"
      },
      {
        "name": "gutters_zero_pad_line_numbers",
        "type": "bool"
      },
      {
        "name": "indent_automatic",
        "type": "bool"
      },
      {
        "name": "indent_automatic_prefixes",
        "type": "String[]"
      },
      {
        "name": "indent_size",
        "type": "int"
      },
      {
        "name": "indent_use_spaces",
        "type": "bool"
      },
      {
        "name": "layout_direction",
        "type": "int"
      },
      {
        "name": "line_folding",
        "type": "bool"
      },
      {
        "name": "line_length_guidelines",
        "type": "int[]"
      },
      {
        "name": "symbol_lookup_on_click",
        "type": "bool"
      },
      {
        "name": "symbol_tooltip_on_hover",
        "type": "bool"
      },
      {
        "name": "text_direction",
        "type": "int"
      }
    ]
  },
  "CodeHighlighter": {
    "methods": [
      {
        "name": "add_color_region",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          },
          {
            "name": "end_key",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "line_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_keyword_color",
        "parameters": [
          {
            "name": "keyword",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_member_keyword_color",
        "parameters": [
          {
            "name": "member_keyword",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_color_regions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_keyword_colors",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_member_keyword_colors",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_keyword_color",
        "parameters": [
          {
            "name": "keyword",
            "type": "String"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_member_keyword_color",
        "parameters": [
          {
            "name": "member_keyword",
            "type": "String"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "has_color_region",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_keyword_color",
        "parameters": [
          {
            "name": "keyword",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_member_keyword_color",
        "parameters": [
          {
            "name": "member_keyword",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_color_region",
        "parameters": [
          {
            "name": "start_key",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_keyword_color",
        "parameters": [
          {
            "name": "keyword",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_member_keyword_color",
        "parameters": [
          {
            "name": "member_keyword",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CodeHighlighter",
    "parent": "SyntaxHighlighter",
    "properties": [
      {
        "name": "color_regions",
        "type": "Dictionary"
      },
      {
        "name": "function_color",
        "type": "Color"
      },
      {
        "name": "keyword_colors",
        "type": "Dictionary"
      },
      {
        "name": "member_keyword_colors",
        "type": "Dictionary"
      },
      {
        "name": "member_variable_color",
        "type": "Color"
      },
      {
        "name": "number_color",
        "type": "Color"
      },
      {
        "name": "symbol_color",
        "type": "Color"
      }
    ]
  },
  "CollisionObject2D": {
    "methods": [
      {
        "name": "_input_event",
        "parameters": [
          {
            "name": "viewport",
            "type": "Viewport"
          },
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_mouse_enter",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_mouse_exit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_mouse_shape_enter",
        "parameters": [
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_mouse_shape_exit",
        "parameters": [
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_shape_owner",
        "parameters": [
          {
            "name": "owner",
            "type": "Object"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_shape_owner_one_way_collision_margin",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_shape_owners",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "is_shape_owner_disabled",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_shape_owner_one_way_collision_enabled",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_shape_owner",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_find_owner",
        "parameters": [
          {
            "name": "shape_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_add_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "Shape2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_clear_shapes",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_get_owner",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "shape_owner_get_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "Shape2D"
      },
      {
        "name": "shape_owner_get_shape_count",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_get_shape_index",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_get_transform",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "shape_owner_remove_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_disabled",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_one_way_collision",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_one_way_collision_margin",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_transform",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CollisionObject2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "collision_layer",
        "type": "int"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "collision_priority",
        "type": "float"
      },
      {
        "name": "disable_mode",
        "type": "int"
      },
      {
        "name": "input_pickable",
        "type": "bool"
      }
    ]
  },
  "CollisionObject3D": {
    "methods": [
      {
        "name": "_input_event",
        "parameters": [
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "event_position",
            "type": "Vector3"
          },
          {
            "name": "normal",
            "type": "Vector3"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_mouse_enter",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_mouse_exit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_shape_owner",
        "parameters": [
          {
            "name": "owner",
            "type": "Object"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_shape_owners",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "is_shape_owner_disabled",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_shape_owner",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_find_owner",
        "parameters": [
          {
            "name": "shape_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_add_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "Shape3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_clear_shapes",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_get_owner",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "shape_owner_get_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "Shape3D"
      },
      {
        "name": "shape_owner_get_shape_count",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_get_shape_index",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_owner_get_transform",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "shape_owner_remove_shape",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "shape_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_disabled",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_owner_set_transform",
        "parameters": [
          {
            "name": "owner_id",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CollisionObject3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "collision_layer",
        "type": "int"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "collision_priority",
        "type": "float"
      },
      {
        "name": "disable_mode",
        "type": "int"
      },
      {
        "name": "input_capture_on_drag",
        "type": "bool"
      },
      {
        "name": "input_ray_pickable",
        "type": "bool"
      }
    ]
  },
  "CollisionPolygon2D": {
    "methods": [],
    "name": "CollisionPolygon2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "build_mode",
        "type": "int"
      },
      {
        "name": "disabled",
        "type": "bool"
      },
      {
        "name": "one_way_collision",
        "type": "bool"
      },
      {
        "name": "one_way_collision_margin",
        "type": "float"
      },
      {
        "name": "polygon",
        "type": "PackedVector2Array"
      }
    ]
  },
  "CollisionPolygon3D": {
    "methods": [],
    "name": "CollisionPolygon3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "debug_color",
        "type": "Color"
      },
      {
        "name": "debug_fill",
        "type": "bool"
      },
      {
        "name": "depth",
        "type": "float"
      },
      {
        "name": "disabled",
        "type": "bool"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "polygon",
        "type": "PackedVector2Array"
      }
    ]
  },
  "CollisionShape2D": {
    "methods": [],
    "name": "CollisionShape2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "debug_color",
        "type": "Color"
      },
      {
        "name": "disabled",
        "type": "bool"
      },
      {
        "name": "one_way_collision",
        "type": "bool"
      },
      {
        "name": "one_way_collision_margin",
        "type": "float"
      },
      {
        "name": "shape",
        "type": "Shape2D"
      }
    ]
  },
  "CollisionShape3D": {
    "methods": [
      {
        "name": "make_convex_from_siblings",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "resource_changed",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CollisionShape3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "debug_color",
        "type": "Color"
      },
      {
        "name": "debug_fill",
        "type": "bool"
      },
      {
        "name": "disabled",
        "type": "bool"
      },
      {
        "name": "shape",
        "type": "Shape3D"
      }
    ]
  },
  "Color": {
    "methods": [
      {
        "name": "blend",
        "parameters": [
          {
            "name": "over",
            "type": "Color"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Color"
          },
          {
            "name": "max",
            "type": "Color"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "darkened",
        "parameters": [
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "from_hsv",
        "parameters": [
          {
            "name": "h",
            "type": "float"
          },
          {
            "name": "s",
            "type": "float"
          },
          {
            "name": "v",
            "type": "float"
          },
          {
            "name": "alpha",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "from_ok_hsl",
        "parameters": [
          {
            "name": "h",
            "type": "float"
          },
          {
            "name": "s",
            "type": "float"
          },
          {
            "name": "l",
            "type": "float"
          },
          {
            "name": "alpha",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "from_rgba8",
        "parameters": [
          {
            "name": "r8",
            "type": "int"
          },
          {
            "name": "g8",
            "type": "int"
          },
          {
            "name": "b8",
            "type": "int"
          },
          {
            "name": "a8",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "from_rgbe9995",
        "parameters": [
          {
            "name": "rgbe",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "from_string",
        "parameters": [
          {
            "name": "str",
            "type": "String"
          },
          {
            "name": "default",
            "type": "Color"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_luminance",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "hex",
        "parameters": [
          {
            "name": "hex",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "hex64",
        "parameters": [
          {
            "name": "hex",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "html",
        "parameters": [
          {
            "name": "rgba",
            "type": "String"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "html_is_valid",
        "parameters": [
          {
            "name": "color",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "inverted",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to",
            "type": "Color"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "lerp",
        "parameters": [
          {
            "name": "to",
            "type": "Color"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "lightened",
        "parameters": [
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "linear_to_srgb",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "srgb_to_linear",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "to_abgr32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_abgr64",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_argb32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_argb64",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_html",
        "parameters": [
          {
            "name": "with_alpha",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "to_rgba32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_rgba64",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "Color",
    "parent": null,
    "properties": [
      {
        "name": "a",
        "type": "float"
      },
      {
        "name": "a8",
        "type": "int"
      },
      {
        "name": "b",
        "type": "float"
      },
      {
        "name": "b8",
        "type": "int"
      },
      {
        "name": "g",
        "type": "float"
      },
      {
        "name": "g8",
        "type": "int"
      },
      {
        "name": "h",
        "type": "float"
      },
      {
        "name": "ok_hsl_h",
        "type": "float"
      },
      {
        "name": "ok_hsl_l",
        "type": "float"
      },
      {
        "name": "ok_hsl_s",
        "type": "float"
      },
      {
        "name": "r",
        "type": "float"
      },
      {
        "name": "r8",
        "type": "int"
      },
      {
        "name": "s",
        "type": "float"
      },
      {
        "name": "v",
        "type": "float"
      }
    ]
  },
  "ColorPalette": {
    "methods": [],
    "name": "ColorPalette",
    "parent": "Resource",
    "properties": [
      {
        "name": "colors",
        "type": "PackedColorArray"
      }
    ]
  },
  "ColorPicker": {
    "methods": [
      {
        "name": "add_preset",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_recent_preset",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_preset",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_recent_preset",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_presets",
        "parameters": [],
        "return_type": "PackedColorArray"
      },
      {
        "name": "get_recent_presets",
        "parameters": [],
        "return_type": "PackedColorArray"
      }
    ],
    "name": "ColorPicker",
    "parent": "VBoxContainer",
    "properties": [
      {
        "name": "can_add_swatches",
        "type": "bool"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "color_mode",
        "type": "int"
      },
      {
        "name": "color_modes_visible",
        "type": "bool"
      },
      {
        "name": "deferred_mode",
        "type": "bool"
      },
      {
        "name": "edit_alpha",
        "type": "bool"
      },
      {
        "name": "hex_visible",
        "type": "bool"
      },
      {
        "name": "picker_shape",
        "type": "int"
      },
      {
        "name": "presets_visible",
        "type": "bool"
      },
      {
        "name": "sampler_visible",
        "type": "bool"
      },
      {
        "name": "sliders_visible",
        "type": "bool"
      }
    ]
  },
  "ColorPickerButton": {
    "methods": [
      {
        "name": "get_picker",
        "parameters": [],
        "return_type": "ColorPicker"
      },
      {
        "name": "get_popup",
        "parameters": [],
        "return_type": "PopupPanel"
      }
    ],
    "name": "ColorPickerButton",
    "parent": "Button",
    "properties": [
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "edit_alpha",
        "type": "bool"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "ColorRect": {
    "methods": [],
    "name": "ColorRect",
    "parent": "Control",
    "properties": [
      {
        "name": "color",
        "type": "Color"
      }
    ]
  },
  "Compositor": {
    "methods": [],
    "name": "Compositor",
    "parent": "Resource",
    "properties": [
      {
        "name": "compositor_effects",
        "type": "CompositorEffect[]"
      }
    ]
  },
  "CompositorEffect": {
    "methods": [
      {
        "name": "_render_callback",
        "parameters": [
          {
            "name": "effect_callback_type",
            "type": "int"
          },
          {
            "name": "render_data",
            "type": "RenderData"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "CompositorEffect",
    "parent": "Resource",
    "properties": [
      {
        "name": "access_resolved_color",
        "type": "bool"
      },
      {
        "name": "access_resolved_depth",
        "type": "bool"
      },
      {
        "name": "effect_callback_type",
        "type": "int"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "needs_motion_vectors",
        "type": "bool"
      },
      {
        "name": "needs_normal_roughness",
        "type": "bool"
      },
      {
        "name": "needs_separate_specular",
        "type": "bool"
      }
    ]
  },
  "CompressedCubemap": {
    "methods": [],
    "name": "CompressedCubemap",
    "parent": "CompressedTextureLayered",
    "properties": []
  },
  "CompressedCubemapArray": {
    "methods": [],
    "name": "CompressedCubemapArray",
    "parent": "CompressedTextureLayered",
    "properties": []
  },
  "CompressedTexture2D": {
    "methods": [
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "CompressedTexture2D",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "load_path",
        "type": "String"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "CompressedTexture2DArray": {
    "methods": [],
    "name": "CompressedTexture2DArray",
    "parent": "CompressedTextureLayered",
    "properties": []
  },
  "CompressedTexture3D": {
    "methods": [
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "CompressedTexture3D",
    "parent": "Texture3D",
    "properties": [
      {
        "name": "load_path",
        "type": "String"
      }
    ]
  },
  "CompressedTextureLayered": {
    "methods": [
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "CompressedTextureLayered",
    "parent": "TextureLayered",
    "properties": [
      {
        "name": "load_path",
        "type": "String"
      }
    ]
  },
  "ConcavePolygonShape2D": {
    "methods": [],
    "name": "ConcavePolygonShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "segments",
        "type": "PackedVector2Array"
      }
    ]
  },
  "ConcavePolygonShape3D": {
    "methods": [
      {
        "name": "get_faces",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "set_faces",
        "parameters": [
          {
            "name": "faces",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ConcavePolygonShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "backface_collision",
        "type": "bool"
      }
    ]
  },
  "ConeTwistJoint3D": {
    "methods": [
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ConeTwistJoint3D",
    "parent": "Joint3D",
    "properties": [
      {
        "name": "bias",
        "type": "float"
      },
      {
        "name": "relaxation",
        "type": "float"
      },
      {
        "name": "softness",
        "type": "float"
      },
      {
        "name": "swing_span",
        "type": "float"
      },
      {
        "name": "twist_span",
        "type": "float"
      }
    ]
  },
  "ConfigFile": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "encode_to_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "erase_section",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_section_key",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_section_keys",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_sections",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_value",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          },
          {
            "name": "default",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "has_section",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_section_key",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_encrypted",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_encrypted_pass",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "password",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "parse",
        "parameters": [
          {
            "name": "data",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_encrypted",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_encrypted_pass",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "password",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_value",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ConfigFile",
    "parent": "RefCounted",
    "properties": []
  },
  "ConfirmationDialog": {
    "methods": [
      {
        "name": "get_cancel_button",
        "parameters": [],
        "return_type": "Button"
      }
    ],
    "name": "ConfirmationDialog",
    "parent": "AcceptDialog",
    "properties": [
      {
        "name": "cancel_button_text",
        "type": "String"
      },
      {
        "name": "min_size",
        "type": "Vector2i"
      },
      {
        "name": "size",
        "type": "Vector2i"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "Container": {
    "methods": [
      {
        "name": "_get_allowed_size_flags_horizontal",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_get_allowed_size_flags_vertical",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "fit_child_in_rect",
        "parameters": [
          {
            "name": "child",
            "type": "Control"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_sort",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Container",
    "parent": "Control",
    "properties": [
      {
        "name": "mouse_filter",
        "type": "int"
      }
    ]
  },
  "Control": {
    "methods": [
      {
        "name": "_can_drop_data",
        "parameters": [
          {
            "name": "at_position",
            "type": "Vector2"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_drop_data",
        "parameters": [
          {
            "name": "at_position",
            "type": "Vector2"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_drag_data",
        "parameters": [
          {
            "name": "at_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_tooltip",
        "parameters": [
          {
            "name": "at_position",
            "type": "Vector2"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_gui_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_has_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_make_custom_tooltip",
        "parameters": [
          {
            "name": "for_text",
            "type": "String"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "_structured_text_parser",
        "parameters": [
          {
            "name": "args",
            "type": "Array"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "Vector3i[]"
      },
      {
        "name": "accept_event",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "add_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "constant",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "font",
            "type": "Font"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "stylebox",
            "type": "StyleBox"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "begin_bulk_theme_override",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "end_bulk_theme_override",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "find_next_valid_focus",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "find_prev_valid_focus",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "find_valid_focus_neighbor",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          }
        ],
        "return_type": "Control"
      },
      {
        "name": "force_drag",
        "parameters": [
          {
            "name": "data",
            "type": "Variant"
          },
          {
            "name": "preview",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_anchor",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_begin",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_combined_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_cursor_shape",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_end",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_focus_neighbor",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_global_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_offset",
        "parameters": [
          {
            "name": "offset",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_parent_area_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_parent_control",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "get_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_screen_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_theme_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_theme_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_theme_default_base_scale",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_theme_default_font",
        "parameters": [],
        "return_type": "Font"
      },
      {
        "name": "get_theme_default_font_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_theme_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Font"
      },
      {
        "name": "get_theme_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_theme_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_theme_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "StyleBox"
      },
      {
        "name": "get_tooltip",
        "parameters": [
          {
            "name": "at_position",
            "type": "Vector2"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "grab_click_focus",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "grab_focus",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "has_focus",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_theme_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_drag_successful",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_layout_rtl",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "release_focus",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reset_size",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_anchor",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "anchor",
            "type": "float"
          },
          {
            "name": "keep_offset",
            "type": "bool"
          },
          {
            "name": "push_opposite_anchor",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_anchor_and_offset",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "anchor",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "push_opposite_anchor",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_anchors_and_offsets_preset",
        "parameters": [
          {
            "name": "preset",
            "type": "int"
          },
          {
            "name": "resize_mode",
            "type": "int"
          },
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_anchors_preset",
        "parameters": [
          {
            "name": "preset",
            "type": "int"
          },
          {
            "name": "keep_offsets",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_begin",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_drag_forwarding",
        "parameters": [
          {
            "name": "drag_func",
            "type": "Callable"
          },
          {
            "name": "can_drop_func",
            "type": "Callable"
          },
          {
            "name": "drop_func",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_drag_preview",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_end",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_focus_neighbor",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "neighbor",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_global_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "keep_offsets",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_offset",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_offsets_preset",
        "parameters": [
          {
            "name": "preset",
            "type": "int"
          },
          {
            "name": "resize_mode",
            "type": "int"
          },
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "keep_offsets",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_size",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "keep_offsets",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_minimum_size",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "warp_mouse",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Control",
    "parent": "CanvasItem",
    "properties": [
      {
        "name": "anchor_bottom",
        "type": "float"
      },
      {
        "name": "anchor_left",
        "type": "float"
      },
      {
        "name": "anchor_right",
        "type": "float"
      },
      {
        "name": "anchor_top",
        "type": "float"
      },
      {
        "name": "auto_translate",
        "type": "bool"
      },
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "custom_minimum_size",
        "type": "Vector2"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "focus_neighbor_bottom",
        "type": "NodePath"
      },
      {
        "name": "focus_neighbor_left",
        "type": "NodePath"
      },
      {
        "name": "focus_neighbor_right",
        "type": "NodePath"
      },
      {
        "name": "focus_neighbor_top",
        "type": "NodePath"
      },
      {
        "name": "focus_next",
        "type": "NodePath"
      },
      {
        "name": "focus_previous",
        "type": "NodePath"
      },
      {
        "name": "global_position",
        "type": "Vector2"
      },
      {
        "name": "grow_horizontal",
        "type": "int"
      },
      {
        "name": "grow_vertical",
        "type": "int"
      },
      {
        "name": "layout_direction",
        "type": "int"
      },
      {
        "name": "localize_numeral_system",
        "type": "bool"
      },
      {
        "name": "mouse_default_cursor_shape",
        "type": "int"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "mouse_force_pass_scroll_events",
        "type": "bool"
      },
      {
        "name": "offset_bottom",
        "type": "float"
      },
      {
        "name": "offset_left",
        "type": "float"
      },
      {
        "name": "offset_right",
        "type": "float"
      },
      {
        "name": "offset_top",
        "type": "float"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "pivot_offset",
        "type": "Vector2"
      },
      {
        "name": "position",
        "type": "Vector2"
      },
      {
        "name": "rotation",
        "type": "float"
      },
      {
        "name": "rotation_degrees",
        "type": "float"
      },
      {
        "name": "scale",
        "type": "Vector2"
      },
      {
        "name": "shortcut_context",
        "type": "Node"
      },
      {
        "name": "size",
        "type": "Vector2"
      },
      {
        "name": "size_flags_horizontal",
        "type": "int"
      },
      {
        "name": "size_flags_stretch_ratio",
        "type": "float"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "theme",
        "type": "Theme"
      },
      {
        "name": "theme_type_variation",
        "type": "StringName"
      },
      {
        "name": "tooltip_auto_translate_mode",
        "type": "int"
      },
      {
        "name": "tooltip_text",
        "type": "String"
      }
    ]
  },
  "ConvexPolygonShape2D": {
    "methods": [
      {
        "name": "set_point_cloud",
        "parameters": [
          {
            "name": "point_cloud",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ConvexPolygonShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "points",
        "type": "PackedVector2Array"
      }
    ]
  },
  "ConvexPolygonShape3D": {
    "methods": [],
    "name": "ConvexPolygonShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "points",
        "type": "PackedVector3Array"
      }
    ]
  },
  "Crypto": {
    "methods": [
      {
        "name": "constant_time_compare",
        "parameters": [
          {
            "name": "trusted",
            "type": "PackedByteArray"
          },
          {
            "name": "received",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "decrypt",
        "parameters": [
          {
            "name": "key",
            "type": "CryptoKey"
          },
          {
            "name": "ciphertext",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "encrypt",
        "parameters": [
          {
            "name": "key",
            "type": "CryptoKey"
          },
          {
            "name": "plaintext",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "generate_random_bytes",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "generate_rsa",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "CryptoKey"
      },
      {
        "name": "generate_self_signed_certificate",
        "parameters": [
          {
            "name": "key",
            "type": "CryptoKey"
          },
          {
            "name": "issuer_name",
            "type": "String"
          },
          {
            "name": "not_before",
            "type": "String"
          },
          {
            "name": "not_after",
            "type": "String"
          }
        ],
        "return_type": "X509Certificate"
      },
      {
        "name": "hmac_digest",
        "parameters": [
          {
            "name": "hash_type",
            "type": "int"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          },
          {
            "name": "msg",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sign",
        "parameters": [
          {
            "name": "hash_type",
            "type": "int"
          },
          {
            "name": "hash",
            "type": "PackedByteArray"
          },
          {
            "name": "key",
            "type": "CryptoKey"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "verify",
        "parameters": [
          {
            "name": "hash_type",
            "type": "int"
          },
          {
            "name": "hash",
            "type": "PackedByteArray"
          },
          {
            "name": "signature",
            "type": "PackedByteArray"
          },
          {
            "name": "key",
            "type": "CryptoKey"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "Crypto",
    "parent": "RefCounted",
    "properties": []
  },
  "CryptoKey": {
    "methods": [
      {
        "name": "is_public_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "public_only",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_from_string",
        "parameters": [
          {
            "name": "string_key",
            "type": "String"
          },
          {
            "name": "public_only",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "public_only",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_to_string",
        "parameters": [
          {
            "name": "public_only",
            "type": "bool"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "CryptoKey",
    "parent": "Resource",
    "properties": []
  },
  "Cubemap": {
    "methods": [
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      }
    ],
    "name": "Cubemap",
    "parent": "ImageTextureLayered",
    "properties": []
  },
  "CubemapArray": {
    "methods": [
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      }
    ],
    "name": "CubemapArray",
    "parent": "ImageTextureLayered",
    "properties": []
  },
  "Curve": {
    "methods": [
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "left_tangent",
            "type": "float"
          },
          {
            "name": "right_tangent",
            "type": "float"
          },
          {
            "name": "left_mode",
            "type": "int"
          },
          {
            "name": "right_mode",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "bake",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clean_dupes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_points",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_domain_range",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_point_left_mode",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_point_left_tangent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_right_mode",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_point_right_tangent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_value_range",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sample",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "sample_baked",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_point_left_mode",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_left_tangent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "tangent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_offset",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_point_right_mode",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_right_tangent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "tangent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_value",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "y",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Curve",
    "parent": "Resource",
    "properties": [
      {
        "name": "bake_resolution",
        "type": "int"
      },
      {
        "name": "max_domain",
        "type": "float"
      },
      {
        "name": "max_value",
        "type": "float"
      },
      {
        "name": "min_domain",
        "type": "float"
      },
      {
        "name": "min_value",
        "type": "float"
      },
      {
        "name": "point_count",
        "type": "int"
      }
    ]
  },
  "Curve2D": {
    "methods": [
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "in",
            "type": "Vector2"
          },
          {
            "name": "out",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_points",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_baked_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_baked_points",
        "parameters": [],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_closest_offset",
        "parameters": [
          {
            "name": "to_point",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_closest_point",
        "parameters": [
          {
            "name": "to_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_in",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_out",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sample",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "sample_baked",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "cubic",
            "type": "bool"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "sample_baked_with_rotation",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "cubic",
            "type": "bool"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "samplef",
        "parameters": [
          {
            "name": "fofs",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "set_point_in",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_out",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_position",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tessellate",
        "parameters": [
          {
            "name": "max_stages",
            "type": "int"
          },
          {
            "name": "tolerance_degrees",
            "type": "float"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "tessellate_even_length",
        "parameters": [
          {
            "name": "max_stages",
            "type": "int"
          },
          {
            "name": "tolerance_length",
            "type": "float"
          }
        ],
        "return_type": "PackedVector2Array"
      }
    ],
    "name": "Curve2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "bake_interval",
        "type": "float"
      },
      {
        "name": "point_count",
        "type": "int"
      }
    ]
  },
  "Curve3D": {
    "methods": [
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector3"
          },
          {
            "name": "in",
            "type": "Vector3"
          },
          {
            "name": "out",
            "type": "Vector3"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_points",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_baked_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_baked_points",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_baked_tilts",
        "parameters": [],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "get_baked_up_vectors",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_closest_offset",
        "parameters": [
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_closest_point",
        "parameters": [
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_point_in",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_point_out",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_point_tilt",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sample",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "sample_baked",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "cubic",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "sample_baked_up_vector",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "apply_tilt",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "sample_baked_with_rotation",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "cubic",
            "type": "bool"
          },
          {
            "name": "apply_tilt",
            "type": "bool"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "samplef",
        "parameters": [
          {
            "name": "fofs",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "set_point_in",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_out",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_position",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_tilt",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tilt",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tessellate",
        "parameters": [
          {
            "name": "max_stages",
            "type": "int"
          },
          {
            "name": "tolerance_degrees",
            "type": "float"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "tessellate_even_length",
        "parameters": [
          {
            "name": "max_stages",
            "type": "int"
          },
          {
            "name": "tolerance_length",
            "type": "float"
          }
        ],
        "return_type": "PackedVector3Array"
      }
    ],
    "name": "Curve3D",
    "parent": "Resource",
    "properties": [
      {
        "name": "bake_interval",
        "type": "float"
      },
      {
        "name": "closed",
        "type": "bool"
      },
      {
        "name": "point_count",
        "type": "int"
      },
      {
        "name": "up_vector_enabled",
        "type": "bool"
      }
    ]
  },
  "CurveTexture": {
    "methods": [],
    "name": "CurveTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "curve",
        "type": "Curve"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "texture_mode",
        "type": "int"
      },
      {
        "name": "width",
        "type": "int"
      }
    ]
  },
  "CurveXYZTexture": {
    "methods": [],
    "name": "CurveXYZTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "curve_x",
        "type": "Curve"
      },
      {
        "name": "curve_y",
        "type": "Curve"
      },
      {
        "name": "curve_z",
        "type": "Curve"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "width",
        "type": "int"
      }
    ]
  },
  "CylinderMesh": {
    "methods": [],
    "name": "CylinderMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "bottom_radius",
        "type": "float"
      },
      {
        "name": "cap_bottom",
        "type": "bool"
      },
      {
        "name": "cap_top",
        "type": "bool"
      },
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radial_segments",
        "type": "int"
      },
      {
        "name": "rings",
        "type": "int"
      },
      {
        "name": "top_radius",
        "type": "float"
      }
    ]
  },
  "CylinderShape3D": {
    "methods": [],
    "name": "CylinderShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "DTLSServer": {
    "methods": [
      {
        "name": "setup",
        "parameters": [
          {
            "name": "server_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "take_connection",
        "parameters": [
          {
            "name": "udp_peer",
            "type": "PacketPeerUDP"
          }
        ],
        "return_type": "PacketPeerDTLS"
      }
    ],
    "name": "DTLSServer",
    "parent": "RefCounted",
    "properties": []
  },
  "DampedSpringJoint2D": {
    "methods": [],
    "name": "DampedSpringJoint2D",
    "parent": "Joint2D",
    "properties": [
      {
        "name": "damping",
        "type": "float"
      },
      {
        "name": "length",
        "type": "float"
      },
      {
        "name": "rest_length",
        "type": "float"
      },
      {
        "name": "stiffness",
        "type": "float"
      }
    ]
  },
  "Decal": {
    "methods": [
      {
        "name": "get_texture",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "set_texture",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Decal",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "albedo_mix",
        "type": "float"
      },
      {
        "name": "cull_mask",
        "type": "int"
      },
      {
        "name": "distance_fade_begin",
        "type": "float"
      },
      {
        "name": "distance_fade_enabled",
        "type": "bool"
      },
      {
        "name": "distance_fade_length",
        "type": "float"
      },
      {
        "name": "emission_energy",
        "type": "float"
      },
      {
        "name": "lower_fade",
        "type": "float"
      },
      {
        "name": "modulate",
        "type": "Color"
      },
      {
        "name": "normal_fade",
        "type": "float"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "texture_albedo",
        "type": "Texture2D"
      },
      {
        "name": "texture_emission",
        "type": "Texture2D"
      },
      {
        "name": "texture_normal",
        "type": "Texture2D"
      },
      {
        "name": "texture_orm",
        "type": "Texture2D"
      },
      {
        "name": "upper_fade",
        "type": "float"
      }
    ]
  },
  "Dictionary": {
    "methods": [
      {
        "name": "assign",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate",
        "parameters": [
          {
            "name": "deep",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "erase",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "find_key",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "default",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_or_add",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "default",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_typed_key_builtin",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_typed_key_class_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_typed_key_script",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "get_typed_value_builtin",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_typed_value_class_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_typed_value_script",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_all",
        "parameters": [
          {
            "name": "keys",
            "type": "Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_read_only",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_same_typed",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_same_typed_key",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_same_typed_value",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_typed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_typed_key",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_typed_value",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "keys",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "make_read_only",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          },
          {
            "name": "overwrite",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "merged",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          },
          {
            "name": "overwrite",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "recursive_equal",
        "parameters": [
          {
            "name": "dictionary",
            "type": "Dictionary"
          },
          {
            "name": "recursion_count",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "values",
        "parameters": [],
        "return_type": "Array"
      }
    ],
    "name": "Dictionary",
    "parent": null,
    "properties": []
  },
  "DirAccess": {
    "methods": [
      {
        "name": "change_dir",
        "parameters": [
          {
            "name": "to_dir",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "copy",
        "parameters": [
          {
            "name": "from",
            "type": "String"
          },
          {
            "name": "to",
            "type": "String"
          },
          {
            "name": "chmod_flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "copy_absolute",
        "parameters": [
          {
            "name": "from",
            "type": "String"
          },
          {
            "name": "to",
            "type": "String"
          },
          {
            "name": "chmod_flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_link",
        "parameters": [
          {
            "name": "source",
            "type": "String"
          },
          {
            "name": "target",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_temp",
        "parameters": [
          {
            "name": "prefix",
            "type": "String"
          },
          {
            "name": "keep",
            "type": "bool"
          }
        ],
        "return_type": "DirAccess"
      },
      {
        "name": "current_is_dir",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "dir_exists",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "dir_exists_absolute",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "file_exists",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_current_dir",
        "parameters": [
          {
            "name": "include_drive",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_current_drive",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_directories",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_directories_at",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_drive_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_drive_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_files",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_files_at",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_next",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_open_error",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_space_left",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_bundle",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_case_sensitive",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_link",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "list_dir_begin",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "list_dir_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "make_dir",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "make_dir_absolute",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "make_dir_recursive",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "make_dir_recursive_absolute",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "open",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "DirAccess"
      },
      {
        "name": "read_link",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "remove",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "remove_absolute",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rename",
        "parameters": [
          {
            "name": "from",
            "type": "String"
          },
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rename_absolute",
        "parameters": [
          {
            "name": "from",
            "type": "String"
          },
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "DirAccess",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "include_hidden",
        "type": "bool"
      },
      {
        "name": "include_navigational",
        "type": "bool"
      }
    ]
  },
  "DirectionalLight2D": {
    "methods": [],
    "name": "DirectionalLight2D",
    "parent": "Light2D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "max_distance",
        "type": "float"
      }
    ]
  },
  "DirectionalLight3D": {
    "methods": [],
    "name": "DirectionalLight3D",
    "parent": "Light3D",
    "properties": [
      {
        "name": "directional_shadow_blend_splits",
        "type": "bool"
      },
      {
        "name": "directional_shadow_fade_start",
        "type": "float"
      },
      {
        "name": "directional_shadow_max_distance",
        "type": "float"
      },
      {
        "name": "directional_shadow_mode",
        "type": "int"
      },
      {
        "name": "directional_shadow_pancake_size",
        "type": "float"
      },
      {
        "name": "directional_shadow_split_1",
        "type": "float"
      },
      {
        "name": "directional_shadow_split_2",
        "type": "float"
      },
      {
        "name": "directional_shadow_split_3",
        "type": "float"
      },
      {
        "name": "sky_mode",
        "type": "int"
      }
    ]
  },
  "DisplayServer": {
    "methods": [
      {
        "name": "beep",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clipboard_get",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "clipboard_get_image",
        "parameters": [],
        "return_type": "Image"
      },
      {
        "name": "clipboard_get_primary",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "clipboard_has",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "clipboard_has_image",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "clipboard_set",
        "parameters": [
          {
            "name": "clipboard",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clipboard_set_primary",
        "parameters": [
          {
            "name": "clipboard_primary",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_status_indicator",
        "parameters": [
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "tooltip",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "cursor_get_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "cursor_set_custom_image",
        "parameters": [
          {
            "name": "cursor",
            "type": "Resource"
          },
          {
            "name": "shape",
            "type": "int"
          },
          {
            "name": "hotspot",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "cursor_set_shape",
        "parameters": [
          {
            "name": "shape",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "delete_status_indicator",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "dialog_input_text",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "description",
            "type": "String"
          },
          {
            "name": "existing_text",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "dialog_show",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "description",
            "type": "String"
          },
          {
            "name": "buttons",
            "type": "PackedStringArray"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "enable_for_stealing_focus",
        "parameters": [
          {
            "name": "process_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "file_dialog_show",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "current_directory",
            "type": "String"
          },
          {
            "name": "filename",
            "type": "String"
          },
          {
            "name": "show_hidden",
            "type": "bool"
          },
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "filters",
            "type": "PackedStringArray"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "file_dialog_with_options_show",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "current_directory",
            "type": "String"
          },
          {
            "name": "root",
            "type": "String"
          },
          {
            "name": "filename",
            "type": "String"
          },
          {
            "name": "show_hidden",
            "type": "bool"
          },
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "filters",
            "type": "PackedStringArray"
          },
          {
            "name": "options",
            "type": "Dictionary[]"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "force_process_and_drop_events",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_accent_color",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "get_base_color",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "get_display_cutouts",
        "parameters": [],
        "return_type": "Rect2[]"
      },
      {
        "name": "get_display_safe_area",
        "parameters": [],
        "return_type": "Rect2i"
      },
      {
        "name": "get_keyboard_focus_screen",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_primary_screen",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_screen_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_screen_from_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_swap_cancel_ok",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_window_at_screen_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_window_list",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "global_menu_add_check_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_icon_check_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_icon_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_icon_radio_check_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_multistate_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "max_states",
            "type": "int"
          },
          {
            "name": "default_state",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_radio_check_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_separator",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_add_submenu_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "submenu",
            "type": "String"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_clear",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_get_item_accelerator",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_callback",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "global_menu_get_item_count",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_icon",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "global_menu_get_item_indentation_level",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_index_from_tag",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "tag",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_index_from_text",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_key_callback",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "global_menu_get_item_max_states",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_state",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_menu_get_item_submenu",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "global_menu_get_item_tag",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "global_menu_get_item_text",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "global_menu_get_item_tooltip",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "global_menu_get_system_menu_roots",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "global_menu_is_item_checkable",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "global_menu_is_item_checked",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "global_menu_is_item_disabled",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "global_menu_is_item_hidden",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "global_menu_is_item_radio_checkable",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "global_menu_remove_item",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_accelerator",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_callback",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_checkable",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checkable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_checked",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checked",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_disabled",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_hidden",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_hover_callbacks",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_icon",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_indentation_level",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_key_callback",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_max_states",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "max_states",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_radio_checkable",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checkable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_state",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_submenu",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "submenu",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_tag",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tag",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_text",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_item_tooltip",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_menu_set_popup_callbacks",
        "parameters": [
          {
            "name": "menu_root",
            "type": "String"
          },
          {
            "name": "open_callback",
            "type": "Callable"
          },
          {
            "name": "close_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "has_additional_outputs",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_hardware_keyboard",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "help_set_search_callbacks",
        "parameters": [
          {
            "name": "search_callback",
            "type": "Callable"
          },
          {
            "name": "action_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "ime_get_selection",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "ime_get_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "is_dark_mode",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_dark_mode_supported",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_touchscreen_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_window_transparency_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "keyboard_get_current_layout",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "keyboard_get_keycode_from_physical",
        "parameters": [
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "keyboard_get_label_from_physical",
        "parameters": [
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "keyboard_get_layout_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "keyboard_get_layout_language",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "keyboard_get_layout_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "keyboard_set_current_layout",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mouse_get_button_state",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "mouse_get_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "mouse_get_position",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "mouse_set_mode",
        "parameters": [
          {
            "name": "mouse_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "process_events",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "register_additional_output",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "screen_get_dpi",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "screen_get_image",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "screen_get_image_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "screen_get_max_scale",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "screen_get_orientation",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "screen_get_pixel",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "screen_get_position",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "screen_get_refresh_rate",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "screen_get_scale",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "screen_get_size",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "screen_get_usable_rect",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "screen_is_kept_on",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "screen_set_keep_on",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "screen_set_orientation",
        "parameters": [
          {
            "name": "orientation",
            "type": "int"
          },
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_native_icon",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_system_theme_change_callback",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show_emoji_and_symbol_picker",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "status_indicator_get_rect",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "status_indicator_set_callback",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "status_indicator_set_icon",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "status_indicator_set_menu",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "menu_rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "status_indicator_set_tooltip",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tablet_get_current_driver",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "tablet_get_driver_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "tablet_get_driver_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "tablet_set_current_driver",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tts_get_voices",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "tts_get_voices_for_language",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "tts_is_paused",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "tts_is_speaking",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "tts_pause",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "tts_resume",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "tts_set_utterance_callback",
        "parameters": [
          {
            "name": "event",
            "type": "int"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tts_speak",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "voice",
            "type": "String"
          },
          {
            "name": "volume",
            "type": "int"
          },
          {
            "name": "pitch",
            "type": "float"
          },
          {
            "name": "rate",
            "type": "float"
          },
          {
            "name": "utterance_id",
            "type": "int"
          },
          {
            "name": "interrupt",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tts_stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "unregister_additional_output",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "virtual_keyboard_get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "virtual_keyboard_hide",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "virtual_keyboard_show",
        "parameters": [
          {
            "name": "existing_text",
            "type": "String"
          },
          {
            "name": "position",
            "type": "Rect2"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "max_length",
            "type": "int"
          },
          {
            "name": "cursor_start",
            "type": "int"
          },
          {
            "name": "cursor_end",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "warp_mouse",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_can_draw",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "window_get_active_popup",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "window_get_attached_instance_id",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "window_get_current_screen",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "window_get_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "window_get_max_size",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_min_size",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_mode",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "window_get_native_handle",
        "parameters": [
          {
            "name": "handle_type",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "window_get_popup_safe_rect",
        "parameters": [
          {
            "name": "window",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "window_get_position",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_position_with_decorations",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_safe_title_margins",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "window_get_size",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_size_with_decorations",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_title_size",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "window_get_vsync_mode",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "window_is_focused",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "window_is_maximize_allowed",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "window_maximize_on_title_dbl_click",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "window_minimize_on_title_dbl_click",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "window_move_to_foreground",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_request_attention",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_current_screen",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_drop_files_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_exclusive",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          },
          {
            "name": "exclusive",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_ime_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_ime_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_input_event_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_input_text_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_max_size",
        "parameters": [
          {
            "name": "max_size",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_min_size",
        "parameters": [
          {
            "name": "min_size",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_mouse_passthrough",
        "parameters": [
          {
            "name": "region",
            "type": "PackedVector2Array"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_popup_safe_rect",
        "parameters": [
          {
            "name": "window",
            "type": "int"
          },
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_rect_changed_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_size",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_title",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_transient",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          },
          {
            "name": "parent_window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_vsync_mode",
        "parameters": [
          {
            "name": "vsync_mode",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_window_buttons_offset",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2i"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_set_window_event_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_start_drag",
        "parameters": [
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "window_start_resize",
        "parameters": [
          {
            "name": "edge",
            "type": "int"
          },
          {
            "name": "window_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "DisplayServer",
    "parent": "Object",
    "properties": []
  },
  "EditorCommandPalette": {
    "methods": [
      {
        "name": "add_command",
        "parameters": [
          {
            "name": "command_name",
            "type": "String"
          },
          {
            "name": "key_name",
            "type": "String"
          },
          {
            "name": "binded_callable",
            "type": "Callable"
          },
          {
            "name": "shortcut_text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_command",
        "parameters": [
          {
            "name": "key_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorCommandPalette",
    "parent": "ConfirmationDialog",
    "properties": [
      {
        "name": "dialog_hide_on_ok",
        "type": "bool"
      }
    ]
  },
  "EditorContextMenuPlugin": {
    "methods": [
      {
        "name": "_popup_menu",
        "parameters": [
          {
            "name": "paths",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_context_menu_item",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_context_menu_item_from_shortcut",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_context_submenu_item",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "menu",
            "type": "PopupMenu"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_menu_shortcut",
        "parameters": [
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorContextMenuPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorDebuggerPlugin": {
    "methods": [
      {
        "name": "_breakpoint_set_in_tree",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_breakpoints_cleared_in_tree",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_capture",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "data",
            "type": "Array"
          },
          {
            "name": "session_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_goto_script_line",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_has_capture",
        "parameters": [
          {
            "name": "capture",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_setup_session",
        "parameters": [
          {
            "name": "session_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_session",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "EditorDebuggerSession"
      },
      {
        "name": "get_sessions",
        "parameters": [],
        "return_type": "Array"
      }
    ],
    "name": "EditorDebuggerPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorDebuggerSession": {
    "methods": [
      {
        "name": "add_session_tab",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "is_active",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_breaked",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_debuggable",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_session_tab",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "send_message",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "data",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_breakpoint",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "toggle_profiler",
        "parameters": [
          {
            "name": "profiler",
            "type": "String"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "data",
            "type": "Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorDebuggerSession",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorExportPlatform": {
    "methods": [
      {
        "name": "add_message",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "category",
            "type": "String"
          },
          {
            "name": "message",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_messages",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_preset",
        "parameters": [],
        "return_type": "EditorExportPreset"
      },
      {
        "name": "export_pack",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "export_pack_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "patches",
            "type": "PackedStringArray"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "export_project",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "export_project_files",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "save_cb",
            "type": "Callable"
          },
          {
            "name": "shared_cb",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "export_zip",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "export_zip_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "patches",
            "type": "PackedStringArray"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find_export_template",
        "parameters": [
          {
            "name": "template_file_name",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "gen_export_flags",
        "parameters": [
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_current_presets",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_forced_export_files",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_internal_export_files",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_message_category",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_message_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_message_text",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_message_type",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_os_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_worst_message_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "save_pack",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "embed",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "save_pack_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "save_zip",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "save_zip_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "ssh_push_to_remote",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "String"
          },
          {
            "name": "scp_args",
            "type": "PackedStringArray"
          },
          {
            "name": "src_file",
            "type": "String"
          },
          {
            "name": "dst_file",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "ssh_run_on_remote",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "String"
          },
          {
            "name": "ssh_arg",
            "type": "PackedStringArray"
          },
          {
            "name": "cmd_args",
            "type": "String"
          },
          {
            "name": "output",
            "type": "Array"
          },
          {
            "name": "port_fwd",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "ssh_run_on_remote_no_wait",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "String"
          },
          {
            "name": "ssh_args",
            "type": "PackedStringArray"
          },
          {
            "name": "cmd_args",
            "type": "String"
          },
          {
            "name": "port_fwd",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "EditorExportPlatform",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorExportPlatformExtension": {
    "methods": [
      {
        "name": "_can_export",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_cleanup",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_export_pack",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_export_pack_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "patches",
            "type": "PackedStringArray"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_export_project",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_export_zip",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_export_zip_patch",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "patches",
            "type": "PackedStringArray"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_binary_extensions",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_debug_protocol",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_device_architecture",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_export_option_visibility",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_export_option_warning",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "option",
            "type": "StringName"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_export_options",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_logo",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_option_icon",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "ImageTexture"
      },
      {
        "name": "_get_option_label",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_option_tooltip",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_options_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_options_tooltip",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_os_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_platform_features",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_preset_features",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_run_icon",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "_has_valid_export_configuration",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_valid_project_configuration",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_executable",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_poll_export",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_run",
        "parameters": [
          {
            "name": "preset",
            "type": "EditorExportPreset"
          },
          {
            "name": "device",
            "type": "int"
          },
          {
            "name": "debug_flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_should_update_export_options",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_config_error",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_config_missing_templates",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_config_error",
        "parameters": [
          {
            "name": "error_text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_config_missing_templates",
        "parameters": [
          {
            "name": "missing_templates",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorExportPlatformExtension",
    "parent": "EditorExportPlatform",
    "properties": []
  },
  "EditorExportPlatformPC": {
    "methods": [],
    "name": "EditorExportPlatformPC",
    "parent": "EditorExportPlatform",
    "properties": []
  },
  "EditorExportPlugin": {
    "methods": [
      {
        "name": "_begin_customize_resources",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "features",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_begin_customize_scenes",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "features",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_customize_resource",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "_customize_scene",
        "parameters": [
          {
            "name": "scene",
            "type": "Node"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "_end_customize_resources",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_end_customize_scenes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_export_begin",
        "parameters": [
          {
            "name": "features",
            "type": "PackedStringArray"
          },
          {
            "name": "is_debug",
            "type": "bool"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_export_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_export_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "type",
            "type": "String"
          },
          {
            "name": "features",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_android_dependencies",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_android_dependencies_maven_repos",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_android_libraries",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_android_manifest_activity_element_contents",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_android_manifest_application_element_contents",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_android_manifest_element_contents",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_customization_configuration_hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_export_features",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "debug",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_export_option_visibility",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_export_option_warning",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_export_options",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_export_options_overrides",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_should_update_export_options",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_supports_platform",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "file",
            "type": "PackedByteArray"
          },
          {
            "name": "remap",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_bundle_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_cpp_code",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_embedded_framework",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_framework",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_linker_flags",
        "parameters": [
          {
            "name": "flags",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_plist_content",
        "parameters": [
          {
            "name": "plist_content",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_ios_project_static_lib",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_macos_plugin_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_shared_object",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "tags",
            "type": "PackedStringArray"
          },
          {
            "name": "target",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_export_platform",
        "parameters": [],
        "return_type": "EditorExportPlatform"
      },
      {
        "name": "get_export_preset",
        "parameters": [],
        "return_type": "EditorExportPreset"
      },
      {
        "name": "get_option",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "skip",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "EditorExportPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorExportPreset": {
    "methods": [
      {
        "name": "are_advanced_options_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_custom_features",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_customized_files",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_customized_files_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_encrypt_directory",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_encrypt_pck",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_encryption_ex_filter",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_encryption_in_filter",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_encryption_key",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_exclude_filter",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_export_filter",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_export_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_file_export_mode",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "default",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_files_to_export",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_include_filter",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_or_env",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "env_var",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_patches",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_preset_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_script_export_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_version",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "windows_version",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_export_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_dedicated_server",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_runnable",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "EditorExportPreset",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorFeatureProfile": {
    "methods": [
      {
        "name": "get_feature_name",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_class_disabled",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_class_editor_disabled",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_class_property_disabled",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_feature_disabled",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load_from_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_to_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_disable_class",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_disable_class_editor",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_disable_class_property",
        "parameters": [
          {
            "name": "class_name",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_disable_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorFeatureProfile",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorFileDialog": {
    "methods": [
      {
        "name": "add_filter",
        "parameters": [
          {
            "name": "filter",
            "type": "String"
          },
          {
            "name": "description",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_option",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "values",
            "type": "PackedStringArray"
          },
          {
            "name": "default_value_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_side_menu",
        "parameters": [
          {
            "name": "menu",
            "type": "Control"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_filename_filter",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_filters",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_filename_filter",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_line_edit",
        "parameters": [],
        "return_type": "LineEdit"
      },
      {
        "name": "get_option_default",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_option_name",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_option_values",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_selected_options",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_vbox",
        "parameters": [],
        "return_type": "VBoxContainer"
      },
      {
        "name": "invalidate",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "popup_file_dialog",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_filename_filter",
        "parameters": [
          {
            "name": "filter",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_option_default",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "default_value_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_option_name",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_option_values",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "values",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorFileDialog",
    "parent": "ConfirmationDialog",
    "properties": [
      {
        "name": "access",
        "type": "int"
      },
      {
        "name": "current_dir",
        "type": "String"
      },
      {
        "name": "current_file",
        "type": "String"
      },
      {
        "name": "current_path",
        "type": "String"
      },
      {
        "name": "dialog_hide_on_ok",
        "type": "bool"
      },
      {
        "name": "disable_overwrite_warning",
        "type": "bool"
      },
      {
        "name": "display_mode",
        "type": "int"
      },
      {
        "name": "file_mode",
        "type": "int"
      },
      {
        "name": "filters",
        "type": "PackedStringArray"
      },
      {
        "name": "option_count",
        "type": "int"
      },
      {
        "name": "show_hidden_files",
        "type": "bool"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "EditorFileSystem": {
    "methods": [
      {
        "name": "get_file_type",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_filesystem",
        "parameters": [],
        "return_type": "EditorFileSystemDirectory"
      },
      {
        "name": "get_filesystem_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "EditorFileSystemDirectory"
      },
      {
        "name": "get_scanning_progress",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_scanning",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "reimport_files",
        "parameters": [
          {
            "name": "files",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scan",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "scan_sources",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "update_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorFileSystem",
    "parent": "Node",
    "properties": []
  },
  "EditorFileSystemDirectory": {
    "methods": [
      {
        "name": "find_dir_index",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find_file_index",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_file",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_file_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_file_import_is_valid",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_file_path",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_file_script_class_extends",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_file_script_class_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_file_type",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_parent",
        "parameters": [],
        "return_type": "EditorFileSystemDirectory"
      },
      {
        "name": "get_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_subdir",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "EditorFileSystemDirectory"
      },
      {
        "name": "get_subdir_count",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "EditorFileSystemDirectory",
    "parent": "Object",
    "properties": []
  },
  "EditorFileSystemImportFormatSupportQuery": {
    "methods": [
      {
        "name": "_get_file_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_is_active",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_query",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "EditorFileSystemImportFormatSupportQuery",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorImportPlugin": {
    "methods": [
      {
        "name": "_can_import_threaded",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_get_format_version",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_import_options",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "preset_index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_import_order",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_importer_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_option_visibility",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "option_name",
            "type": "StringName"
          },
          {
            "name": "options",
            "type": "Dictionary"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_preset_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_preset_name",
        "parameters": [
          {
            "name": "preset_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_priority",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_recognized_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_resource_type",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_save_extension",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_visible_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_import",
        "parameters": [
          {
            "name": "source_file",
            "type": "String"
          },
          {
            "name": "save_path",
            "type": "String"
          },
          {
            "name": "options",
            "type": "Dictionary"
          },
          {
            "name": "platform_variants",
            "type": "String[]"
          },
          {
            "name": "gen_files",
            "type": "String[]"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "append_import_external_resource",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "custom_options",
            "type": "Dictionary"
          },
          {
            "name": "custom_importer",
            "type": "String"
          },
          {
            "name": "generator_parameters",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "EditorImportPlugin",
    "parent": "ResourceImporter",
    "properties": []
  },
  "EditorInspector": {
    "methods": [
      {
        "name": "edit",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_edited_object",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_selected_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "instantiate_property_editor",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "hint",
            "type": "int"
          },
          {
            "name": "hint_text",
            "type": "String"
          },
          {
            "name": "usage",
            "type": "int"
          },
          {
            "name": "wide",
            "type": "bool"
          }
        ],
        "return_type": "EditorProperty"
      }
    ],
    "name": "EditorInspector",
    "parent": "ScrollContainer",
    "properties": [
      {
        "name": "draw_focus_border",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "follow_focus",
        "type": "bool"
      },
      {
        "name": "horizontal_scroll_mode",
        "type": "int"
      }
    ]
  },
  "EditorInspectorPlugin": {
    "methods": [
      {
        "name": "_can_handle",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_parse_begin",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_parse_category",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "category",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_parse_end",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_parse_group",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "group",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_parse_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "hint_type",
            "type": "int"
          },
          {
            "name": "hint_string",
            "type": "String"
          },
          {
            "name": "usage_flags",
            "type": "int"
          },
          {
            "name": "wide",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_custom_control",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_property_editor",
        "parameters": [
          {
            "name": "property",
            "type": "String"
          },
          {
            "name": "editor",
            "type": "Control"
          },
          {
            "name": "add_to_end",
            "type": "bool"
          },
          {
            "name": "label",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_property_editor_for_multiple_properties",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "properties",
            "type": "PackedStringArray"
          },
          {
            "name": "editor",
            "type": "Control"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorInspectorPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorInterface": {
    "methods": [
      {
        "name": "edit_node",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "edit_resource",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "edit_script",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "grab_focus",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_base_control",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "get_command_palette",
        "parameters": [],
        "return_type": "EditorCommandPalette"
      },
      {
        "name": "get_current_directory",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_current_feature_profile",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_current_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_edited_scene_root",
        "parameters": [],
        "return_type": "Node"
      },
      {
        "name": "get_editor_main_screen",
        "parameters": [],
        "return_type": "VBoxContainer"
      },
      {
        "name": "get_editor_paths",
        "parameters": [],
        "return_type": "EditorPaths"
      },
      {
        "name": "get_editor_scale",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_editor_settings",
        "parameters": [],
        "return_type": "EditorSettings"
      },
      {
        "name": "get_editor_theme",
        "parameters": [],
        "return_type": "Theme"
      },
      {
        "name": "get_editor_toaster",
        "parameters": [],
        "return_type": "EditorToaster"
      },
      {
        "name": "get_editor_undo_redo",
        "parameters": [],
        "return_type": "EditorUndoRedoManager"
      },
      {
        "name": "get_editor_viewport_2d",
        "parameters": [],
        "return_type": "SubViewport"
      },
      {
        "name": "get_editor_viewport_3d",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "SubViewport"
      },
      {
        "name": "get_file_system_dock",
        "parameters": [],
        "return_type": "FileSystemDock"
      },
      {
        "name": "get_inspector",
        "parameters": [],
        "return_type": "EditorInspector"
      },
      {
        "name": "get_open_scenes",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_playing_scene",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_resource_filesystem",
        "parameters": [],
        "return_type": "EditorFileSystem"
      },
      {
        "name": "get_resource_previewer",
        "parameters": [],
        "return_type": "EditorResourcePreview"
      },
      {
        "name": "get_script_editor",
        "parameters": [],
        "return_type": "ScriptEditor"
      },
      {
        "name": "get_selected_paths",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_selection",
        "parameters": [],
        "return_type": "EditorSelection"
      },
      {
        "name": "inspect_object",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "for_property",
            "type": "String"
          },
          {
            "name": "inspector_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "is_multi_window_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_playing_scene",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_plugin_enabled",
        "parameters": [
          {
            "name": "plugin",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "make_mesh_previews",
        "parameters": [
          {
            "name": "meshes",
            "type": "Mesh[]"
          },
          {
            "name": "preview_size",
            "type": "int"
          }
        ],
        "return_type": "Texture2D[]"
      },
      {
        "name": "mark_scene_as_unsaved",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "open_scene_from_path",
        "parameters": [
          {
            "name": "scene_filepath",
            "type": "String"
          },
          {
            "name": "set_inherited",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_current_scene",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "play_custom_scene",
        "parameters": [
          {
            "name": "scene_filepath",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "play_main_scene",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "popup_create_dialog",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "base_type",
            "type": "StringName"
          },
          {
            "name": "current_type",
            "type": "String"
          },
          {
            "name": "dialog_title",
            "type": "String"
          },
          {
            "name": "type_blocklist",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_dialog",
        "parameters": [
          {
            "name": "dialog",
            "type": "Window"
          },
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_dialog_centered",
        "parameters": [
          {
            "name": "dialog",
            "type": "Window"
          },
          {
            "name": "minsize",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_dialog_centered_clamped",
        "parameters": [
          {
            "name": "dialog",
            "type": "Window"
          },
          {
            "name": "minsize",
            "type": "Vector2i"
          },
          {
            "name": "fallback_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_dialog_centered_ratio",
        "parameters": [
          {
            "name": "dialog",
            "type": "Window"
          },
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_method_selector",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "current_value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_node_selector",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "valid_types",
            "type": "StringName[]"
          },
          {
            "name": "current_value",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_property_selector",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "type_filter",
            "type": "PackedInt32Array"
          },
          {
            "name": "current_value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_quick_open",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "base_types",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reload_scene_from_path",
        "parameters": [
          {
            "name": "scene_filepath",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "restart_editor",
        "parameters": [
          {
            "name": "save",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "save_all_scenes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "save_scene",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "save_scene_as",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "with_preview",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select_file",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_current_feature_profile",
        "parameters": [
          {
            "name": "profile_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_main_screen_editor",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_plugin_enabled",
        "parameters": [
          {
            "name": "plugin",
            "type": "String"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop_playing_scene",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "EditorInterface",
    "parent": "Object",
    "properties": [
      {
        "name": "distraction_free_mode",
        "type": "bool"
      },
      {
        "name": "movie_maker_enabled",
        "type": "bool"
      }
    ]
  },
  "EditorNode3DGizmo": {
    "methods": [
      {
        "name": "_begin_handle_action",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_commit_handle",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          },
          {
            "name": "restore",
            "type": "Variant"
          },
          {
            "name": "cancel",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_commit_subgizmos",
        "parameters": [
          {
            "name": "ids",
            "type": "PackedInt32Array"
          },
          {
            "name": "restores",
            "type": "Transform3D[]"
          },
          {
            "name": "cancel",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_handle_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_handle_value",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_subgizmo_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_is_handle_highlighted",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_redraw",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_set_handle",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          },
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_subgizmo_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_subgizmos_intersect_frustum",
        "parameters": [
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "frustum",
            "type": "Plane[]"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_subgizmos_intersect_ray",
        "parameters": [
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_collision_segments",
        "parameters": [
          {
            "name": "segments",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_collision_triangles",
        "parameters": [
          {
            "name": "triangles",
            "type": "TriangleMesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_handles",
        "parameters": [
          {
            "name": "handles",
            "type": "PackedVector3Array"
          },
          {
            "name": "material",
            "type": "Material"
          },
          {
            "name": "ids",
            "type": "PackedInt32Array"
          },
          {
            "name": "billboard",
            "type": "bool"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_lines",
        "parameters": [
          {
            "name": "lines",
            "type": "PackedVector3Array"
          },
          {
            "name": "material",
            "type": "Material"
          },
          {
            "name": "billboard",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_mesh",
        "parameters": [
          {
            "name": "mesh",
            "type": "Mesh"
          },
          {
            "name": "material",
            "type": "Material"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "skeleton",
            "type": "SkinReference"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_unscaled_billboard",
        "parameters": [
          {
            "name": "material",
            "type": "Material"
          },
          {
            "name": "default_scale",
            "type": "float"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_node_3d",
        "parameters": [],
        "return_type": "Node3D"
      },
      {
        "name": "get_plugin",
        "parameters": [],
        "return_type": "EditorNode3DGizmoPlugin"
      },
      {
        "name": "get_subgizmo_selection",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "is_subgizmo_selected",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_hidden",
        "parameters": [
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_node_3d",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorNode3DGizmo",
    "parent": "Node3DGizmo",
    "properties": []
  },
  "EditorNode3DGizmoPlugin": {
    "methods": [
      {
        "name": "_begin_handle_action",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_can_be_hidden",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_commit_handle",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          },
          {
            "name": "restore",
            "type": "Variant"
          },
          {
            "name": "cancel",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_commit_subgizmos",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "ids",
            "type": "PackedInt32Array"
          },
          {
            "name": "restores",
            "type": "Transform3D[]"
          },
          {
            "name": "cancel",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_create_gizmo",
        "parameters": [
          {
            "name": "for_node_3d",
            "type": "Node3D"
          }
        ],
        "return_type": "EditorNode3DGizmo"
      },
      {
        "name": "_get_gizmo_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_handle_name",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_handle_value",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_priority",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_subgizmo_transform",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "subgizmo_id",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_has_gizmo",
        "parameters": [
          {
            "name": "for_node_3d",
            "type": "Node3D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_handle_highlighted",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_selectable_when_hidden",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_redraw",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_handle",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "handle_id",
            "type": "int"
          },
          {
            "name": "secondary",
            "type": "bool"
          },
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "screen_pos",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_subgizmo_transform",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "subgizmo_id",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_subgizmos_intersect_frustum",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "frustum_planes",
            "type": "Plane[]"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_subgizmos_intersect_ray",
        "parameters": [
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          },
          {
            "name": "camera",
            "type": "Camera3D"
          },
          {
            "name": "screen_pos",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_material",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "material",
            "type": "StandardMaterial3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_handle_material",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "billboard",
            "type": "bool"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_icon_material",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "on_top",
            "type": "bool"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_material",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "billboard",
            "type": "bool"
          },
          {
            "name": "on_top",
            "type": "bool"
          },
          {
            "name": "use_vertex_color",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_material",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "gizmo",
            "type": "EditorNode3DGizmo"
          }
        ],
        "return_type": "StandardMaterial3D"
      }
    ],
    "name": "EditorNode3DGizmoPlugin",
    "parent": "Resource",
    "properties": []
  },
  "EditorPaths": {
    "methods": [
      {
        "name": "get_cache_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_config_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_data_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_project_settings_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_self_contained_file",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "is_self_contained",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "EditorPaths",
    "parent": "Object",
    "properties": []
  },
  "EditorPlugin": {
    "methods": [
      {
        "name": "_apply_changes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_build",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_disable_plugin",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_edit",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_enable_plugin",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_forward_3d_draw_over_viewport",
        "parameters": [
          {
            "name": "viewport_control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_forward_3d_force_draw_over_viewport",
        "parameters": [
          {
            "name": "viewport_control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_forward_3d_gui_input",
        "parameters": [
          {
            "name": "viewport_camera",
            "type": "Camera3D"
          },
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_forward_canvas_draw_over_viewport",
        "parameters": [
          {
            "name": "viewport_control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_forward_canvas_force_draw_over_viewport",
        "parameters": [
          {
            "name": "viewport_control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_forward_canvas_gui_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_breakpoints",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_plugin_icon",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "_get_plugin_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_state",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_unsaved_status",
        "parameters": [
          {
            "name": "for_scene",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_window_layout",
        "parameters": [
          {
            "name": "configuration",
            "type": "ConfigFile"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_handles",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_main_screen",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_make_visible",
        "parameters": [
          {
            "name": "visible",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_save_external_data",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_set_state",
        "parameters": [
          {
            "name": "state",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_window_layout",
        "parameters": [
          {
            "name": "configuration",
            "type": "ConfigFile"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_autoload_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_context_menu_plugin",
        "parameters": [
          {
            "name": "slot",
            "type": "int"
          },
          {
            "name": "plugin",
            "type": "EditorContextMenuPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_control_to_bottom_panel",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          },
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          }
        ],
        "return_type": "Button"
      },
      {
        "name": "add_control_to_container",
        "parameters": [
          {
            "name": "container",
            "type": "int"
          },
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_control_to_dock",
        "parameters": [
          {
            "name": "slot",
            "type": "int"
          },
          {
            "name": "control",
            "type": "Control"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_custom_type",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          },
          {
            "name": "base",
            "type": "String"
          },
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_debugger_plugin",
        "parameters": [
          {
            "name": "script",
            "type": "EditorDebuggerPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_export_platform",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_export_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorExportPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_import_plugin",
        "parameters": [
          {
            "name": "importer",
            "type": "EditorImportPlugin"
          },
          {
            "name": "first_priority",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_inspector_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorInspectorPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_node_3d_gizmo_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorNode3DGizmoPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_resource_conversion_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorResourceConversionPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_scene_format_importer_plugin",
        "parameters": [
          {
            "name": "scene_format_importer",
            "type": "EditorSceneFormatImporter"
          },
          {
            "name": "first_priority",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_scene_post_import_plugin",
        "parameters": [
          {
            "name": "scene_import_plugin",
            "type": "EditorScenePostImportPlugin"
          },
          {
            "name": "first_priority",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_tool_menu_item",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_tool_submenu_item",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "submenu",
            "type": "PopupMenu"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_translation_parser_plugin",
        "parameters": [
          {
            "name": "parser",
            "type": "EditorTranslationParserPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_redo_inspector_hook_callback",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_editor_interface",
        "parameters": [],
        "return_type": "EditorInterface"
      },
      {
        "name": "get_export_as_menu",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_plugin_version",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_script_create_dialog",
        "parameters": [],
        "return_type": "ScriptCreateDialog"
      },
      {
        "name": "get_undo_redo",
        "parameters": [],
        "return_type": "EditorUndoRedoManager"
      },
      {
        "name": "hide_bottom_panel",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "make_bottom_panel_item_visible",
        "parameters": [
          {
            "name": "item",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_save_layout",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_autoload_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_context_menu_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorContextMenuPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_control_from_bottom_panel",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_control_from_container",
        "parameters": [
          {
            "name": "container",
            "type": "int"
          },
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_control_from_docks",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_custom_type",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_debugger_plugin",
        "parameters": [
          {
            "name": "script",
            "type": "EditorDebuggerPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_export_platform",
        "parameters": [
          {
            "name": "platform",
            "type": "EditorExportPlatform"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_export_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorExportPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_import_plugin",
        "parameters": [
          {
            "name": "importer",
            "type": "EditorImportPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_inspector_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorInspectorPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_node_3d_gizmo_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorNode3DGizmoPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_resource_conversion_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorResourceConversionPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_scene_format_importer_plugin",
        "parameters": [
          {
            "name": "scene_format_importer",
            "type": "EditorSceneFormatImporter"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_scene_post_import_plugin",
        "parameters": [
          {
            "name": "scene_import_plugin",
            "type": "EditorScenePostImportPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_tool_menu_item",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_translation_parser_plugin",
        "parameters": [
          {
            "name": "parser",
            "type": "EditorTranslationParserPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_undo_redo_inspector_hook_callback",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_dock_tab_icon",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_force_draw_over_forwarding_enabled",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_input_event_forwarding_always_enabled",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "update_overlays",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "EditorPlugin",
    "parent": "Node",
    "properties": []
  },
  "EditorProperty": {
    "methods": [
      {
        "name": "_set_read_only",
        "parameters": [
          {
            "name": "read_only",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_update_property",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "add_focusable",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "deselect",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "emit_changed",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "field",
            "type": "StringName"
          },
          {
            "name": "changing",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_edited_object",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_edited_property",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "is_selected",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "focusable",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bottom_editor",
        "parameters": [
          {
            "name": "editor",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_label_reference",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_object_and_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_property",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "EditorProperty",
    "parent": "Container",
    "properties": [
      {
        "name": "checkable",
        "type": "bool"
      },
      {
        "name": "checked",
        "type": "bool"
      },
      {
        "name": "deletable",
        "type": "bool"
      },
      {
        "name": "draw_background",
        "type": "bool"
      },
      {
        "name": "draw_label",
        "type": "bool"
      },
      {
        "name": "draw_warning",
        "type": "bool"
      },
      {
        "name": "keying",
        "type": "bool"
      },
      {
        "name": "label",
        "type": "String"
      },
      {
        "name": "name_split_ratio",
        "type": "float"
      },
      {
        "name": "read_only",
        "type": "bool"
      },
      {
        "name": "selectable",
        "type": "bool"
      },
      {
        "name": "use_folding",
        "type": "bool"
      }
    ]
  },
  "EditorResourceConversionPlugin": {
    "methods": [
      {
        "name": "_convert",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "_converts_to",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_handles",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "EditorResourceConversionPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorResourcePicker": {
    "methods": [
      {
        "name": "_handle_menu_selected",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_set_create_options",
        "parameters": [
          {
            "name": "menu_node",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_allowed_types",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "set_toggle_pressed",
        "parameters": [
          {
            "name": "pressed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorResourcePicker",
    "parent": "HBoxContainer",
    "properties": [
      {
        "name": "base_type",
        "type": "String"
      },
      {
        "name": "editable",
        "type": "bool"
      },
      {
        "name": "edited_resource",
        "type": "Resource"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "EditorResourcePreview": {
    "methods": [
      {
        "name": "add_preview_generator",
        "parameters": [
          {
            "name": "generator",
            "type": "EditorResourcePreviewGenerator"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "check_for_invalidation",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_edited_resource_preview",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "receiver",
            "type": "Object"
          },
          {
            "name": "receiver_func",
            "type": "StringName"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_resource_preview",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "receiver",
            "type": "Object"
          },
          {
            "name": "receiver_func",
            "type": "StringName"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_preview_generator",
        "parameters": [
          {
            "name": "generator",
            "type": "EditorResourcePreviewGenerator"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorResourcePreview",
    "parent": "Node",
    "properties": []
  },
  "EditorResourcePreviewGenerator": {
    "methods": [
      {
        "name": "_can_generate_small_preview",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_generate",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "metadata",
            "type": "Dictionary"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "_generate_from_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "metadata",
            "type": "Dictionary"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "_generate_small_preview_automatically",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_handles",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "EditorResourcePreviewGenerator",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorResourceTooltipPlugin": {
    "methods": [
      {
        "name": "_handles",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_make_tooltip_for_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "metadata",
            "type": "Dictionary"
          },
          {
            "name": "base",
            "type": "Control"
          }
        ],
        "return_type": "Control"
      },
      {
        "name": "request_thumbnail",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "control",
            "type": "TextureRect"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorResourceTooltipPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorSceneFormatImporter": {
    "methods": [
      {
        "name": "_get_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_import_options",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_option_visibility",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "for_animation",
            "type": "bool"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_import_scene",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          },
          {
            "name": "options",
            "type": "Dictionary"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "add_import_option",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_import_option_advanced",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "default_value",
            "type": "Variant"
          },
          {
            "name": "hint",
            "type": "int"
          },
          {
            "name": "hint_string",
            "type": "String"
          },
          {
            "name": "usage_flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorSceneFormatImporter",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorScenePostImport": {
    "methods": [
      {
        "name": "_post_import",
        "parameters": [
          {
            "name": "scene",
            "type": "Node"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_source_file",
        "parameters": [],
        "return_type": "String"
      }
    ],
    "name": "EditorScenePostImport",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorScenePostImportPlugin": {
    "methods": [
      {
        "name": "_get_import_options",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_internal_import_options",
        "parameters": [
          {
            "name": "category",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_internal_option_update_view_required",
        "parameters": [
          {
            "name": "category",
            "type": "int"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_internal_option_visibility",
        "parameters": [
          {
            "name": "category",
            "type": "int"
          },
          {
            "name": "for_animation",
            "type": "bool"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_option_visibility",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "for_animation",
            "type": "bool"
          },
          {
            "name": "option",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_internal_process",
        "parameters": [
          {
            "name": "category",
            "type": "int"
          },
          {
            "name": "base_node",
            "type": "Node"
          },
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_post_process",
        "parameters": [
          {
            "name": "scene",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pre_process",
        "parameters": [
          {
            "name": "scene",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_import_option",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_import_option_advanced",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "default_value",
            "type": "Variant"
          },
          {
            "name": "hint",
            "type": "int"
          },
          {
            "name": "hint_string",
            "type": "String"
          },
          {
            "name": "usage_flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_option_value",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      }
    ],
    "name": "EditorScenePostImportPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorScript": {
    "methods": [
      {
        "name": "_run",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "add_root_node",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_editor_interface",
        "parameters": [],
        "return_type": "EditorInterface"
      },
      {
        "name": "get_scene",
        "parameters": [],
        "return_type": "Node"
      }
    ],
    "name": "EditorScript",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorScriptPicker": {
    "methods": [],
    "name": "EditorScriptPicker",
    "parent": "EditorResourcePicker",
    "properties": [
      {
        "name": "script_owner",
        "type": "Node"
      }
    ]
  },
  "EditorSelection": {
    "methods": [
      {
        "name": "add_node",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_selected_nodes",
        "parameters": [],
        "return_type": "Node[]"
      },
      {
        "name": "get_transformable_selected_nodes",
        "parameters": [],
        "return_type": "Node[]"
      },
      {
        "name": "remove_node",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorSelection",
    "parent": "Object",
    "properties": []
  },
  "EditorSettings": {
    "methods": [
      {
        "name": "add_property_info",
        "parameters": [
          {
            "name": "info",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "check_changed_settings_in_group",
        "parameters": [
          {
            "name": "setting_prefix",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "erase",
        "parameters": [
          {
            "name": "property",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_changed_settings",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_favorites",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_project_metadata",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          },
          {
            "name": "default",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_recent_dirs",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "has_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "mark_setting_changed",
        "parameters": [
          {
            "name": "setting",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_builtin_action_override",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "actions_list",
            "type": "InputEvent[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_favorites",
        "parameters": [
          {
            "name": "dirs",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_initial_value",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "update_current",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_project_metadata",
        "parameters": [
          {
            "name": "section",
            "type": "String"
          },
          {
            "name": "key",
            "type": "String"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_recent_dirs",
        "parameters": [
          {
            "name": "dirs",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorSettings",
    "parent": "Resource",
    "properties": [
      {
        "name": "asset_library/use_threads",
        "type": "bool"
      },
      {
        "name": "debugger/auto_switch_to_remote_scene_tree",
        "type": "bool"
      },
      {
        "name": "debugger/auto_switch_to_stack_trace",
        "type": "bool"
      },
      {
        "name": "debugger/profile_native_calls",
        "type": "bool"
      },
      {
        "name": "debugger/profiler_frame_history_size",
        "type": "int"
      },
      {
        "name": "debugger/profiler_frame_max_functions",
        "type": "int"
      },
      {
        "name": "debugger/profiler_target_fps",
        "type": "int"
      },
      {
        "name": "debugger/remote_inspect_refresh_interval",
        "type": "float"
      },
      {
        "name": "debugger/remote_scene_tree_refresh_interval",
        "type": "float"
      },
      {
        "name": "docks/filesystem/always_show_folders",
        "type": "bool"
      },
      {
        "name": "docks/filesystem/other_file_extensions",
        "type": "String"
      },
      {
        "name": "docks/filesystem/textfile_extensions",
        "type": "String"
      },
      {
        "name": "docks/filesystem/thumbnail_size",
        "type": "int"
      },
      {
        "name": "docks/property_editor/auto_refresh_interval",
        "type": "float"
      },
      {
        "name": "docks/property_editor/subresource_hue_tint",
        "type": "float"
      },
      {
        "name": "docks/scene_tree/ask_before_deleting_related_animation_tracks",
        "type": "bool"
      },
      {
        "name": "docks/scene_tree/ask_before_revoking_unique_name",
        "type": "bool"
      },
      {
        "name": "docks/scene_tree/auto_expand_to_selected",
        "type": "bool"
      },
      {
        "name": "docks/scene_tree/center_node_on_reparent",
        "type": "bool"
      },
      {
        "name": "docks/scene_tree/hide_filtered_out_parents",
        "type": "bool"
      },
      {
        "name": "docks/scene_tree/start_create_dialog_fully_expanded",
        "type": "bool"
      },
      {
        "name": "editors/2d/bone_color1",
        "type": "Color"
      },
      {
        "name": "editors/2d/bone_color2",
        "type": "Color"
      },
      {
        "name": "editors/2d/bone_ik_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/bone_outline_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/bone_outline_size",
        "type": "float"
      },
      {
        "name": "editors/2d/bone_selected_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/bone_width",
        "type": "float"
      },
      {
        "name": "editors/2d/grid_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/guides_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/smart_snapping_line_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/use_integer_zoom_by_default",
        "type": "bool"
      },
      {
        "name": "editors/2d/viewport_border_color",
        "type": "Color"
      },
      {
        "name": "editors/2d/zoom_speed_factor",
        "type": "float"
      },
      {
        "name": "editors/3d/default_fov",
        "type": "float"
      },
      {
        "name": "editors/3d/default_z_far",
        "type": "float"
      },
      {
        "name": "editors/3d/default_z_near",
        "type": "float"
      },
      {
        "name": "editors/3d/freelook/freelook_activation_modifier",
        "type": "int"
      },
      {
        "name": "editors/3d/freelook/freelook_base_speed",
        "type": "float"
      },
      {
        "name": "editors/3d/freelook/freelook_inertia",
        "type": "float"
      },
      {
        "name": "editors/3d/freelook/freelook_navigation_scheme",
        "type": "int"
      },
      {
        "name": "editors/3d/freelook/freelook_sensitivity",
        "type": "float"
      },
      {
        "name": "editors/3d/freelook/freelook_speed_zoom_link",
        "type": "bool"
      },
      {
        "name": "editors/3d/grid_division_level_bias",
        "type": "float"
      },
      {
        "name": "editors/3d/grid_division_level_max",
        "type": "int"
      },
      {
        "name": "editors/3d/grid_division_level_min",
        "type": "int"
      },
      {
        "name": "editors/3d/grid_size",
        "type": "int"
      },
      {
        "name": "editors/3d/grid_xy_plane",
        "type": "bool"
      },
      {
        "name": "editors/3d/grid_xz_plane",
        "type": "bool"
      },
      {
        "name": "editors/3d/grid_yz_plane",
        "type": "bool"
      },
      {
        "name": "editors/3d/manipulator_gizmo_opacity",
        "type": "float"
      },
      {
        "name": "editors/3d/manipulator_gizmo_size",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation/emulate_3_button_mouse",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/emulate_numpad",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/invert_x_axis",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/invert_y_axis",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/navigation_scheme",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation/orbit_mouse_button",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation/pan_mouse_button",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation/show_viewport_navigation_gizmo",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/show_viewport_rotation_gizmo",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/warped_mouse_panning",
        "type": "bool"
      },
      {
        "name": "editors/3d/navigation/zoom_mouse_button",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation/zoom_style",
        "type": "int"
      },
      {
        "name": "editors/3d/navigation_feel/orbit_inertia",
        "type": "float"
      },
      {
        "name": "editors/3d/navigation_feel/orbit_sensitivity",
        "type": "float"
      },
      {
        "name": "editors/3d/navigation_feel/translation_inertia",
        "type": "float"
      },
      {
        "name": "editors/3d/navigation_feel/translation_sensitivity",
        "type": "float"
      },
      {
        "name": "editors/3d/navigation_feel/zoom_inertia",
        "type": "float"
      },
      {
        "name": "editors/3d/primary_grid_color",
        "type": "Color"
      },
      {
        "name": "editors/3d/primary_grid_steps",
        "type": "int"
      },
      {
        "name": "editors/3d/secondary_grid_color",
        "type": "Color"
      },
      {
        "name": "editors/3d/selection_box_color",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/aabb",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/camera",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/csg",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/decal",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/fog_volume",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/gridmap_grid",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/instantiated",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/joint",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/joint_body_a",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/joint_body_b",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/lightmap_lines",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/lightprobe_lines",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/occluder",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/particle_attractor",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/particle_collision",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/particles",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/path_tilt",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/reflection_probe",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/selected_bone",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/skeleton",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/spring_bone_collision",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/spring_bone_inside_collision",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/spring_bone_joint",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/stream_player_3d",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/visibility_notifier",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_colors/voxel_gi",
        "type": "Color"
      },
      {
        "name": "editors/3d_gizmos/gizmo_settings/bone_axis_length",
        "type": "float"
      },
      {
        "name": "editors/3d_gizmos/gizmo_settings/bone_shape",
        "type": "int"
      },
      {
        "name": "editors/3d_gizmos/gizmo_settings/path3d_tilt_disk_size",
        "type": "float"
      },
      {
        "name": "editors/animation/autorename_animation_tracks",
        "type": "bool"
      },
      {
        "name": "editors/animation/confirm_insert_track",
        "type": "bool"
      },
      {
        "name": "editors/animation/default_create_bezier_tracks",
        "type": "bool"
      },
      {
        "name": "editors/animation/default_create_reset_tracks",
        "type": "bool"
      },
      {
        "name": "editors/animation/onion_layers_future_color",
        "type": "Color"
      },
      {
        "name": "editors/animation/onion_layers_past_color",
        "type": "Color"
      },
      {
        "name": "editors/bone_mapper/handle_colors/error",
        "type": "Color"
      },
      {
        "name": "editors/bone_mapper/handle_colors/missing",
        "type": "Color"
      },
      {
        "name": "editors/bone_mapper/handle_colors/set",
        "type": "Color"
      },
      {
        "name": "editors/bone_mapper/handle_colors/unset",
        "type": "Color"
      },
      {
        "name": "editors/grid_map/palette_min_width",
        "type": "int"
      },
      {
        "name": "editors/grid_map/pick_distance",
        "type": "float"
      },
      {
        "name": "editors/grid_map/preview_size",
        "type": "int"
      },
      {
        "name": "editors/panning/2d_editor_pan_speed",
        "type": "int"
      },
      {
        "name": "editors/panning/2d_editor_panning_scheme",
        "type": "int"
      },
      {
        "name": "editors/panning/animation_editors_panning_scheme",
        "type": "int"
      },
      {
        "name": "editors/panning/simple_panning",
        "type": "bool"
      },
      {
        "name": "editors/panning/sub_editors_panning_scheme",
        "type": "int"
      },
      {
        "name": "editors/panning/warped_mouse_panning",
        "type": "bool"
      },
      {
        "name": "editors/polygon_editor/auto_bake_delay",
        "type": "float"
      },
      {
        "name": "editors/polygon_editor/point_grab_radius",
        "type": "int"
      },
      {
        "name": "editors/polygon_editor/show_previous_outline",
        "type": "bool"
      },
      {
        "name": "editors/shader_editor/behavior/files/restore_shaders_on_load",
        "type": "bool"
      },
      {
        "name": "editors/tiles_editor/display_grid",
        "type": "bool"
      },
      {
        "name": "editors/tiles_editor/grid_color",
        "type": "Color"
      },
      {
        "name": "editors/tiles_editor/highlight_selected_layer",
        "type": "bool"
      },
      {
        "name": "editors/visual_editors/category_colors/color_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/conditional_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/input_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/output_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/particle_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/scalar_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/special_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/textures_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/transform_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/utility_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/category_colors/vector_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/color_theme",
        "type": "String"
      },
      {
        "name": "editors/visual_editors/connection_colors/boolean_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/sampler_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/scalar_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/transform_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/vector2_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/vector3_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/connection_colors/vector4_color",
        "type": "Color"
      },
      {
        "name": "editors/visual_editors/grid_pattern",
        "type": "int"
      },
      {
        "name": "editors/visual_editors/lines_curvature",
        "type": "float"
      },
      {
        "name": "editors/visual_editors/minimap_opacity",
        "type": "float"
      },
      {
        "name": "editors/visual_editors/visual_shader/port_preview_size",
        "type": "int"
      },
      {
        "name": "export/ssh/scp",
        "type": "String"
      },
      {
        "name": "export/ssh/ssh",
        "type": "String"
      },
      {
        "name": "filesystem/directories/autoscan_project_path",
        "type": "String"
      },
      {
        "name": "filesystem/directories/default_project_path",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/3d_model_editor",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/audio_editor",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/raster_image_editor",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/terminal_emulator",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/terminal_emulator_flags",
        "type": "String"
      },
      {
        "name": "filesystem/external_programs/vector_image_editor",
        "type": "String"
      },
      {
        "name": "filesystem/file_dialog/display_mode",
        "type": "int"
      },
      {
        "name": "filesystem/file_dialog/show_hidden_files",
        "type": "bool"
      },
      {
        "name": "filesystem/file_dialog/thumbnail_size",
        "type": "int"
      },
      {
        "name": "filesystem/file_server/password",
        "type": "String"
      },
      {
        "name": "filesystem/file_server/port",
        "type": "int"
      },
      {
        "name": "filesystem/import/blender/blender_path",
        "type": "String"
      },
      {
        "name": "filesystem/import/blender/rpc_port",
        "type": "int"
      },
      {
        "name": "filesystem/import/blender/rpc_server_uptime",
        "type": "float"
      },
      {
        "name": "filesystem/import/fbx/fbx2gltf_path",
        "type": "String"
      },
      {
        "name": "filesystem/on_save/compress_binary_resources",
        "type": "bool"
      },
      {
        "name": "filesystem/on_save/safe_save_on_backup_then_rename",
        "type": "bool"
      },
      {
        "name": "filesystem/quick_open_dialog/default_display_mode",
        "type": "int"
      },
      {
        "name": "filesystem/quick_open_dialog/enable_fuzzy_matching",
        "type": "bool"
      },
      {
        "name": "filesystem/quick_open_dialog/include_addons",
        "type": "bool"
      },
      {
        "name": "filesystem/quick_open_dialog/max_fuzzy_misses",
        "type": "int"
      },
      {
        "name": "filesystem/quick_open_dialog/max_results",
        "type": "int"
      },
      {
        "name": "filesystem/quick_open_dialog/show_search_highlight",
        "type": "bool"
      },
      {
        "name": "filesystem/tools/oidn/oidn_denoise_path",
        "type": "String"
      },
      {
        "name": "input/buffering/agile_event_flushing",
        "type": "bool"
      },
      {
        "name": "input/buffering/use_accumulated_input",
        "type": "bool"
      },
      {
        "name": "interface/editor/accept_dialog_cancel_ok_buttons",
        "type": "int"
      },
      {
        "name": "interface/editor/automatically_open_screenshots",
        "type": "bool"
      },
      {
        "name": "interface/editor/code_font",
        "type": "String"
      },
      {
        "name": "interface/editor/code_font_contextual_ligatures",
        "type": "int"
      },
      {
        "name": "interface/editor/code_font_custom_opentype_features",
        "type": "String"
      },
      {
        "name": "interface/editor/code_font_custom_variations",
        "type": "String"
      },
      {
        "name": "interface/editor/code_font_size",
        "type": "int"
      },
      {
        "name": "interface/editor/custom_display_scale",
        "type": "float"
      },
      {
        "name": "interface/editor/display_scale",
        "type": "int"
      },
      {
        "name": "interface/editor/dock_tab_style",
        "type": "int"
      },
      {
        "name": "interface/editor/editor_language",
        "type": "String"
      },
      {
        "name": "interface/editor/editor_screen",
        "type": "int"
      },
      {
        "name": "interface/editor/expand_to_title",
        "type": "bool"
      },
      {
        "name": "interface/editor/font_allow_msdf",
        "type": "bool"
      },
      {
        "name": "interface/editor/font_antialiasing",
        "type": "int"
      },
      {
        "name": "interface/editor/font_disable_embedded_bitmaps",
        "type": "bool"
      },
      {
        "name": "interface/editor/font_hinting",
        "type": "int"
      },
      {
        "name": "interface/editor/font_subpixel_positioning",
        "type": "int"
      },
      {
        "name": "interface/editor/import_resources_when_unfocused",
        "type": "bool"
      },
      {
        "name": "interface/editor/keep_screen_on",
        "type": "bool"
      },
      {
        "name": "interface/editor/localize_settings",
        "type": "bool"
      },
      {
        "name": "interface/editor/low_processor_mode_sleep_usec",
        "type": "int"
      },
      {
        "name": "interface/editor/main_font",
        "type": "String"
      },
      {
        "name": "interface/editor/main_font_bold",
        "type": "String"
      },
      {
        "name": "interface/editor/main_font_size",
        "type": "int"
      },
      {
        "name": "interface/editor/mouse_extra_buttons_navigate_history",
        "type": "bool"
      },
      {
        "name": "interface/editor/project_manager_screen",
        "type": "int"
      },
      {
        "name": "interface/editor/save_each_scene_on_quit",
        "type": "bool"
      },
      {
        "name": "interface/editor/save_on_focus_loss",
        "type": "bool"
      },
      {
        "name": "interface/editor/separate_distraction_mode",
        "type": "bool"
      },
      {
        "name": "interface/editor/show_internal_errors_in_toast_notifications",
        "type": "int"
      },
      {
        "name": "interface/editor/show_update_spinner",
        "type": "int"
      },
      {
        "name": "interface/editor/single_window_mode",
        "type": "bool"
      },
      {
        "name": "interface/editor/ui_layout_direction",
        "type": "int"
      },
      {
        "name": "interface/editor/unfocused_low_processor_mode_sleep_usec",
        "type": "int"
      },
      {
        "name": "interface/editor/update_continuously",
        "type": "bool"
      },
      {
        "name": "interface/editor/use_embedded_menu",
        "type": "bool"
      },
      {
        "name": "interface/editor/use_native_file_dialogs",
        "type": "bool"
      },
      {
        "name": "interface/editor/vsync_mode",
        "type": "int"
      },
      {
        "name": "interface/editors/derive_script_globals_by_name",
        "type": "bool"
      },
      {
        "name": "interface/editors/show_scene_tree_root_selection",
        "type": "bool"
      },
      {
        "name": "interface/inspector/auto_unfold_foreign_scenes",
        "type": "bool"
      },
      {
        "name": "interface/inspector/default_color_picker_mode",
        "type": "int"
      },
      {
        "name": "interface/inspector/default_color_picker_shape",
        "type": "int"
      },
      {
        "name": "interface/inspector/default_float_step",
        "type": "float"
      },
      {
        "name": "interface/inspector/default_property_name_style",
        "type": "int"
      },
      {
        "name": "interface/inspector/delimitate_all_container_and_resources",
        "type": "bool"
      },
      {
        "name": "interface/inspector/disable_folding",
        "type": "bool"
      },
      {
        "name": "interface/inspector/float_drag_speed",
        "type": "float"
      },
      {
        "name": "interface/inspector/horizontal_vector2_editing",
        "type": "bool"
      },
      {
        "name": "interface/inspector/horizontal_vector_types_editing",
        "type": "bool"
      },
      {
        "name": "interface/inspector/max_array_dictionary_items_per_page",
        "type": "int"
      },
      {
        "name": "interface/inspector/nested_color_mode",
        "type": "int"
      },
      {
        "name": "interface/inspector/open_resources_in_current_inspector",
        "type": "bool"
      },
      {
        "name": "interface/inspector/resources_to_open_in_new_inspector",
        "type": "PackedStringArray"
      },
      {
        "name": "interface/inspector/show_low_level_opentype_features",
        "type": "bool"
      },
      {
        "name": "interface/multi_window/enable",
        "type": "bool"
      },
      {
        "name": "interface/multi_window/maximize_window",
        "type": "bool"
      },
      {
        "name": "interface/multi_window/restore_windows_on_load",
        "type": "bool"
      },
      {
        "name": "interface/scene_tabs/display_close_button",
        "type": "int"
      },
      {
        "name": "interface/scene_tabs/maximum_width",
        "type": "int"
      },
      {
        "name": "interface/scene_tabs/restore_scenes_on_load",
        "type": "bool"
      },
      {
        "name": "interface/scene_tabs/show_script_button",
        "type": "bool"
      },
      {
        "name": "interface/scene_tabs/show_thumbnail_on_hover",
        "type": "bool"
      },
      {
        "name": "interface/theme/accent_color",
        "type": "Color"
      },
      {
        "name": "interface/theme/additional_spacing",
        "type": "int"
      },
      {
        "name": "interface/theme/base_color",
        "type": "Color"
      },
      {
        "name": "interface/theme/base_spacing",
        "type": "int"
      },
      {
        "name": "interface/theme/border_size",
        "type": "int"
      },
      {
        "name": "interface/theme/contrast",
        "type": "float"
      },
      {
        "name": "interface/theme/corner_radius",
        "type": "int"
      },
      {
        "name": "interface/theme/custom_theme",
        "type": "String"
      },
      {
        "name": "interface/theme/draw_extra_borders",
        "type": "bool"
      },
      {
        "name": "interface/theme/follow_system_theme",
        "type": "bool"
      },
      {
        "name": "interface/theme/icon_and_font_color",
        "type": "int"
      },
      {
        "name": "interface/theme/icon_saturation",
        "type": "float"
      },
      {
        "name": "interface/theme/preset",
        "type": "String"
      },
      {
        "name": "interface/theme/relationship_line_opacity",
        "type": "float"
      },
      {
        "name": "interface/theme/spacing_preset",
        "type": "String"
      },
      {
        "name": "interface/theme/use_system_accent_color",
        "type": "bool"
      },
      {
        "name": "interface/touchscreen/enable_long_press_as_right_click",
        "type": "bool"
      },
      {
        "name": "interface/touchscreen/enable_pan_and_scale_gestures",
        "type": "bool"
      },
      {
        "name": "interface/touchscreen/increase_scrollbar_touch_area",
        "type": "bool"
      },
      {
        "name": "interface/touchscreen/scale_gizmo_handles",
        "type": "float"
      },
      {
        "name": "network/connection/engine_version_update_mode",
        "type": "int"
      },
      {
        "name": "network/connection/network_mode",
        "type": "int"
      },
      {
        "name": "network/debug/remote_host",
        "type": "String"
      },
      {
        "name": "network/debug/remote_port",
        "type": "int"
      },
      {
        "name": "network/http_proxy/host",
        "type": "String"
      },
      {
        "name": "network/http_proxy/port",
        "type": "int"
      },
      {
        "name": "network/tls/editor_tls_certificates",
        "type": "String"
      },
      {
        "name": "network/tls/enable_tls_v1.3",
        "type": "bool"
      },
      {
        "name": "project_manager/default_renderer",
        "type": "String"
      },
      {
        "name": "project_manager/directory_naming_convention",
        "type": "int"
      },
      {
        "name": "project_manager/sorting_order",
        "type": "int"
      },
      {
        "name": "run/auto_save/save_before_running",
        "type": "bool"
      },
      {
        "name": "run/bottom_panel/action_on_play",
        "type": "int"
      },
      {
        "name": "run/bottom_panel/action_on_stop",
        "type": "int"
      },
      {
        "name": "run/output/always_clear_output_on_play",
        "type": "bool"
      },
      {
        "name": "run/output/font_size",
        "type": "int"
      },
      {
        "name": "run/output/max_lines",
        "type": "int"
      },
      {
        "name": "run/platforms/linuxbsd/prefer_wayland",
        "type": "bool"
      },
      {
        "name": "run/window_placement/android_window",
        "type": "int"
      },
      {
        "name": "run/window_placement/game_embed_mode",
        "type": "int"
      },
      {
        "name": "run/window_placement/rect",
        "type": "int"
      },
      {
        "name": "run/window_placement/rect_custom_position",
        "type": "Vector2"
      },
      {
        "name": "run/window_placement/screen",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/caret/caret_blink",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/caret/caret_blink_interval",
        "type": "float"
      },
      {
        "name": "text_editor/appearance/caret/highlight_all_occurrences",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/caret/highlight_current_line",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/caret/type",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/guidelines/line_length_guideline_hard_column",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/guidelines/line_length_guideline_soft_column",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/guidelines/show_line_length_guidelines",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/gutters/highlight_type_safe_lines",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/gutters/line_numbers_zero_padded",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/gutters/show_info_gutter",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/gutters/show_line_numbers",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/lines/autowrap_mode",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/lines/code_folding",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/lines/word_wrap",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/minimap/minimap_width",
        "type": "int"
      },
      {
        "name": "text_editor/appearance/minimap/show_minimap",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/whitespace/draw_spaces",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/whitespace/draw_tabs",
        "type": "bool"
      },
      {
        "name": "text_editor/appearance/whitespace/line_spacing",
        "type": "int"
      },
      {
        "name": "text_editor/behavior/documentation/enable_tooltips",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/auto_reload_and_parse_scripts_on_save",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/auto_reload_scripts_on_external_change",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/autosave_interval_secs",
        "type": "int"
      },
      {
        "name": "text_editor/behavior/files/convert_indent_on_save",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/open_dominant_script_on_scene_change",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/restore_scripts_on_load",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/trim_final_newlines_on_save",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/files/trim_trailing_whitespace_on_save",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/general/empty_selection_clipboard",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/indent/auto_indent",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/indent/indent_wrapped_lines",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/indent/size",
        "type": "int"
      },
      {
        "name": "text_editor/behavior/indent/type",
        "type": "int"
      },
      {
        "name": "text_editor/behavior/navigation/custom_word_separators",
        "type": "String"
      },
      {
        "name": "text_editor/behavior/navigation/drag_and_drop_selection",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/move_caret_on_right_click",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/open_script_when_connecting_signal_to_existing_method",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/scroll_past_end_of_file",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/smooth_scrolling",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/stay_in_script_editor_on_node_selected",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/use_custom_word_separators",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/use_default_word_separators",
        "type": "bool"
      },
      {
        "name": "text_editor/behavior/navigation/v_scroll_speed",
        "type": "int"
      },
      {
        "name": "text_editor/completion/add_node_path_literals",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/add_string_name_literals",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/add_type_hints",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/auto_brace_complete",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/code_complete_delay",
        "type": "float"
      },
      {
        "name": "text_editor/completion/code_complete_enabled",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/colorize_suggestions",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/complete_file_paths",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/idle_parse_delay",
        "type": "float"
      },
      {
        "name": "text_editor/completion/idle_parse_delay_with_errors_found",
        "type": "float"
      },
      {
        "name": "text_editor/completion/put_callhint_tooltip_below_current_line",
        "type": "bool"
      },
      {
        "name": "text_editor/completion/use_single_quotes",
        "type": "bool"
      },
      {
        "name": "text_editor/external/exec_flags",
        "type": "String"
      },
      {
        "name": "text_editor/external/exec_path",
        "type": "String"
      },
      {
        "name": "text_editor/external/use_external_editor",
        "type": "bool"
      },
      {
        "name": "text_editor/help/class_reference_examples",
        "type": "int"
      },
      {
        "name": "text_editor/help/help_font_size",
        "type": "int"
      },
      {
        "name": "text_editor/help/help_source_font_size",
        "type": "int"
      },
      {
        "name": "text_editor/help/help_title_font_size",
        "type": "int"
      },
      {
        "name": "text_editor/help/show_help_index",
        "type": "bool"
      },
      {
        "name": "text_editor/help/sort_functions_alphabetically",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/group_help_pages",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/highlight_scene_scripts",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/list_script_names_as",
        "type": "int"
      },
      {
        "name": "text_editor/script_list/script_temperature_enabled",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/script_temperature_history_size",
        "type": "int"
      },
      {
        "name": "text_editor/script_list/show_members_overview",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/sort_members_outline_alphabetically",
        "type": "bool"
      },
      {
        "name": "text_editor/script_list/sort_scripts_by",
        "type": "int"
      },
      {
        "name": "text_editor/theme/color_theme",
        "type": "String"
      },
      {
        "name": "text_editor/theme/highlighting/background_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/base_type_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/bookmark_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/brace_mismatch_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/breakpoint_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/caret_background_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/caret_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/code_folding_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/comment_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_background_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_existing_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_font_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_scroll_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_scroll_hovered_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/completion_selected_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/control_flow_keyword_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/current_line_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/doc_comment_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/engine_type_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/executing_line_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/folded_code_region_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/function_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/keyword_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/line_length_guideline_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/line_number_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/mark_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/member_variable_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/number_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/safe_line_number_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/search_result_border_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/search_result_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/selection_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/string_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/symbol_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/text_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/text_selected_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/user_type_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/highlighting/word_highlighted_color",
        "type": "Color"
      },
      {
        "name": "text_editor/theme/line_spacing",
        "type": "int"
      },
      {
        "name": "version_control/ssh_private_key_path",
        "type": "String"
      },
      {
        "name": "version_control/ssh_public_key_path",
        "type": "String"
      },
      {
        "name": "version_control/username",
        "type": "String"
      }
    ]
  },
  "EditorSpinSlider": {
    "methods": [],
    "name": "EditorSpinSlider",
    "parent": "Range",
    "properties": [
      {
        "name": "editing_integer",
        "type": "bool"
      },
      {
        "name": "flat",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "hide_slider",
        "type": "bool"
      },
      {
        "name": "label",
        "type": "String"
      },
      {
        "name": "read_only",
        "type": "bool"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "suffix",
        "type": "String"
      }
    ]
  },
  "EditorSyntaxHighlighter": {
    "methods": [
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_supported_languages",
        "parameters": [],
        "return_type": "PackedStringArray"
      }
    ],
    "name": "EditorSyntaxHighlighter",
    "parent": "SyntaxHighlighter",
    "properties": []
  },
  "EditorToaster": {
    "methods": [
      {
        "name": "push_toast",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "severity",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorToaster",
    "parent": "HBoxContainer",
    "properties": []
  },
  "EditorTranslationParserPlugin": {
    "methods": [
      {
        "name": "_get_recognized_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_parse_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray[]"
      }
    ],
    "name": "EditorTranslationParserPlugin",
    "parent": "RefCounted",
    "properties": []
  },
  "EditorUndoRedoManager": {
    "methods": [
      {
        "name": "add_do_method",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_do_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_do_reference",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_method",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_reference",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_history",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "increase_version",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "commit_action",
        "parameters": [
          {
            "name": "execute",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_action",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "merge_mode",
            "type": "int"
          },
          {
            "name": "custom_context",
            "type": "Object"
          },
          {
            "name": "backward_undo_ops",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "force_fixed_history",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_history_undo_redo",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "UndoRedo"
      },
      {
        "name": "get_object_history_id",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_committing_action",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "EditorUndoRedoManager",
    "parent": "Object",
    "properties": []
  },
  "EditorVCSInterface": {
    "methods": [
      {
        "name": "_checkout_branch",
        "parameters": [
          {
            "name": "branch_name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_commit",
        "parameters": [
          {
            "name": "msg",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_create_branch",
        "parameters": [
          {
            "name": "branch_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_create_remote",
        "parameters": [
          {
            "name": "remote_name",
            "type": "String"
          },
          {
            "name": "remote_url",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_discard_file",
        "parameters": [
          {
            "name": "file_path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_fetch",
        "parameters": [
          {
            "name": "remote",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_branch_list",
        "parameters": [],
        "return_type": "String[]"
      },
      {
        "name": "_get_current_branch_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_diff",
        "parameters": [
          {
            "name": "identifier",
            "type": "String"
          },
          {
            "name": "area",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_line_diff",
        "parameters": [
          {
            "name": "file_path",
            "type": "String"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_modified_files_data",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_previous_commits",
        "parameters": [
          {
            "name": "max_commits",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_remotes",
        "parameters": [],
        "return_type": "String[]"
      },
      {
        "name": "_get_vcs_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_initialize",
        "parameters": [
          {
            "name": "project_path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_pull",
        "parameters": [
          {
            "name": "remote",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_push",
        "parameters": [
          {
            "name": "remote",
            "type": "String"
          },
          {
            "name": "force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_remove_branch",
        "parameters": [
          {
            "name": "branch_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_remove_remote",
        "parameters": [
          {
            "name": "remote_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_credentials",
        "parameters": [
          {
            "name": "username",
            "type": "String"
          },
          {
            "name": "password",
            "type": "String"
          },
          {
            "name": "ssh_public_key_path",
            "type": "String"
          },
          {
            "name": "ssh_private_key_path",
            "type": "String"
          },
          {
            "name": "ssh_passphrase",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shut_down",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_stage_file",
        "parameters": [
          {
            "name": "file_path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_unstage_file",
        "parameters": [
          {
            "name": "file_path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_diff_hunks_into_diff_file",
        "parameters": [
          {
            "name": "diff_file",
            "type": "Dictionary"
          },
          {
            "name": "diff_hunks",
            "type": "Dictionary[]"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "add_line_diffs_into_diff_hunk",
        "parameters": [
          {
            "name": "diff_hunk",
            "type": "Dictionary"
          },
          {
            "name": "line_diffs",
            "type": "Dictionary[]"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "create_commit",
        "parameters": [
          {
            "name": "msg",
            "type": "String"
          },
          {
            "name": "author",
            "type": "String"
          },
          {
            "name": "id",
            "type": "String"
          },
          {
            "name": "unix_timestamp",
            "type": "int"
          },
          {
            "name": "offset_minutes",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "create_diff_file",
        "parameters": [
          {
            "name": "new_file",
            "type": "String"
          },
          {
            "name": "old_file",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "create_diff_hunk",
        "parameters": [
          {
            "name": "old_start",
            "type": "int"
          },
          {
            "name": "new_start",
            "type": "int"
          },
          {
            "name": "old_lines",
            "type": "int"
          },
          {
            "name": "new_lines",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "create_diff_line",
        "parameters": [
          {
            "name": "new_line_no",
            "type": "int"
          },
          {
            "name": "old_line_no",
            "type": "int"
          },
          {
            "name": "content",
            "type": "String"
          },
          {
            "name": "status",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "create_status_file",
        "parameters": [
          {
            "name": "file_path",
            "type": "String"
          },
          {
            "name": "change_type",
            "type": "int"
          },
          {
            "name": "area",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "popup_error",
        "parameters": [
          {
            "name": "msg",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EditorVCSInterface",
    "parent": "Object",
    "properties": []
  },
  "EncodedObjectAsID": {
    "methods": [],
    "name": "EncodedObjectAsID",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "object_id",
        "type": "int"
      }
    ]
  },
  "Engine": {
    "methods": [
      {
        "name": "get_architecture_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_author_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_copyright_info",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_donor_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_frames_drawn",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_frames_per_second",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_license_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_license_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_main_loop",
        "parameters": [],
        "return_type": "MainLoop"
      },
      {
        "name": "get_physics_frames",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_physics_interpolation_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_process_frames",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_script_language",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "ScriptLanguage"
      },
      {
        "name": "get_script_language_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_singleton_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_version_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_write_movie_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_editor_hint",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_embedded_in_editor",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_in_physics_frame",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "register_script_language",
        "parameters": [
          {
            "name": "language",
            "type": "ScriptLanguage"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "register_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "instance",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unregister_script_language",
        "parameters": [
          {
            "name": "language",
            "type": "ScriptLanguage"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "unregister_singleton",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Engine",
    "parent": "Object",
    "properties": [
      {
        "name": "max_fps",
        "type": "int"
      },
      {
        "name": "max_physics_steps_per_frame",
        "type": "int"
      },
      {
        "name": "physics_jitter_fix",
        "type": "float"
      },
      {
        "name": "physics_ticks_per_second",
        "type": "int"
      },
      {
        "name": "print_error_messages",
        "type": "bool"
      },
      {
        "name": "print_to_stdout",
        "type": "bool"
      },
      {
        "name": "time_scale",
        "type": "float"
      }
    ]
  },
  "EngineDebugger": {
    "methods": [
      {
        "name": "clear_breakpoints",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "debug",
        "parameters": [
          {
            "name": "can_continue",
            "type": "bool"
          },
          {
            "name": "is_error_breakpoint",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_depth",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_lines_left",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_capture",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_profiler",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert_breakpoint",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "source",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "is_active",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_breakpoint",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "source",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_profiling",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_skipping_breakpoints",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "line_poll",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "profiler_add_frame_data",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "data",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "profiler_enable",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "register_message_capture",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "register_profiler",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "profiler",
            "type": "EngineProfiler"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_breakpoint",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "source",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "script_debug",
        "parameters": [
          {
            "name": "language",
            "type": "ScriptLanguage"
          },
          {
            "name": "can_continue",
            "type": "bool"
          },
          {
            "name": "is_error_breakpoint",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "send_message",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "data",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_depth",
        "parameters": [
          {
            "name": "depth",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_lines_left",
        "parameters": [
          {
            "name": "lines",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unregister_message_capture",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unregister_profiler",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EngineDebugger",
    "parent": "Object",
    "properties": []
  },
  "EngineProfiler": {
    "methods": [
      {
        "name": "_add_frame",
        "parameters": [
          {
            "name": "data",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_tick",
        "parameters": [
          {
            "name": "frame_time",
            "type": "float"
          },
          {
            "name": "process_time",
            "type": "float"
          },
          {
            "name": "physics_time",
            "type": "float"
          },
          {
            "name": "physics_frame_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_toggle",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "options",
            "type": "Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "EngineProfiler",
    "parent": "RefCounted",
    "properties": []
  },
  "Environment": {
    "methods": [
      {
        "name": "get_glow_level",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_glow_level",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "intensity",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Environment",
    "parent": "Resource",
    "properties": [
      {
        "name": "adjustment_brightness",
        "type": "float"
      },
      {
        "name": "adjustment_color_correction",
        "type": "Texture"
      },
      {
        "name": "adjustment_contrast",
        "type": "float"
      },
      {
        "name": "adjustment_enabled",
        "type": "bool"
      },
      {
        "name": "adjustment_saturation",
        "type": "float"
      },
      {
        "name": "ambient_light_color",
        "type": "Color"
      },
      {
        "name": "ambient_light_energy",
        "type": "float"
      },
      {
        "name": "ambient_light_sky_contribution",
        "type": "float"
      },
      {
        "name": "ambient_light_source",
        "type": "int"
      },
      {
        "name": "background_camera_feed_id",
        "type": "int"
      },
      {
        "name": "background_canvas_max_layer",
        "type": "int"
      },
      {
        "name": "background_color",
        "type": "Color"
      },
      {
        "name": "background_energy_multiplier",
        "type": "float"
      },
      {
        "name": "background_intensity",
        "type": "float"
      },
      {
        "name": "background_mode",
        "type": "int"
      },
      {
        "name": "fog_aerial_perspective",
        "type": "float"
      },
      {
        "name": "fog_density",
        "type": "float"
      },
      {
        "name": "fog_depth_begin",
        "type": "float"
      },
      {
        "name": "fog_depth_curve",
        "type": "float"
      },
      {
        "name": "fog_depth_end",
        "type": "float"
      },
      {
        "name": "fog_enabled",
        "type": "bool"
      },
      {
        "name": "fog_height",
        "type": "float"
      },
      {
        "name": "fog_height_density",
        "type": "float"
      },
      {
        "name": "fog_light_color",
        "type": "Color"
      },
      {
        "name": "fog_light_energy",
        "type": "float"
      },
      {
        "name": "fog_mode",
        "type": "int"
      },
      {
        "name": "fog_sky_affect",
        "type": "float"
      },
      {
        "name": "fog_sun_scatter",
        "type": "float"
      },
      {
        "name": "glow_blend_mode",
        "type": "int"
      },
      {
        "name": "glow_bloom",
        "type": "float"
      },
      {
        "name": "glow_enabled",
        "type": "bool"
      },
      {
        "name": "glow_hdr_luminance_cap",
        "type": "float"
      },
      {
        "name": "glow_hdr_scale",
        "type": "float"
      },
      {
        "name": "glow_hdr_threshold",
        "type": "float"
      },
      {
        "name": "glow_intensity",
        "type": "float"
      },
      {
        "name": "glow_levels/1",
        "type": "float"
      },
      {
        "name": "glow_levels/2",
        "type": "float"
      },
      {
        "name": "glow_levels/3",
        "type": "float"
      },
      {
        "name": "glow_levels/4",
        "type": "float"
      },
      {
        "name": "glow_levels/5",
        "type": "float"
      },
      {
        "name": "glow_levels/6",
        "type": "float"
      },
      {
        "name": "glow_levels/7",
        "type": "float"
      },
      {
        "name": "glow_map",
        "type": "Texture"
      },
      {
        "name": "glow_map_strength",
        "type": "float"
      },
      {
        "name": "glow_mix",
        "type": "float"
      },
      {
        "name": "glow_normalized",
        "type": "bool"
      },
      {
        "name": "glow_strength",
        "type": "float"
      },
      {
        "name": "reflected_light_source",
        "type": "int"
      },
      {
        "name": "sdfgi_bounce_feedback",
        "type": "float"
      },
      {
        "name": "sdfgi_cascade0_distance",
        "type": "float"
      },
      {
        "name": "sdfgi_cascades",
        "type": "int"
      },
      {
        "name": "sdfgi_enabled",
        "type": "bool"
      },
      {
        "name": "sdfgi_energy",
        "type": "float"
      },
      {
        "name": "sdfgi_max_distance",
        "type": "float"
      },
      {
        "name": "sdfgi_min_cell_size",
        "type": "float"
      },
      {
        "name": "sdfgi_normal_bias",
        "type": "float"
      },
      {
        "name": "sdfgi_probe_bias",
        "type": "float"
      },
      {
        "name": "sdfgi_read_sky_light",
        "type": "bool"
      },
      {
        "name": "sdfgi_use_occlusion",
        "type": "bool"
      },
      {
        "name": "sdfgi_y_scale",
        "type": "int"
      },
      {
        "name": "sky",
        "type": "Sky"
      },
      {
        "name": "sky_custom_fov",
        "type": "float"
      },
      {
        "name": "sky_rotation",
        "type": "Vector3"
      },
      {
        "name": "ssao_ao_channel_affect",
        "type": "float"
      },
      {
        "name": "ssao_detail",
        "type": "float"
      },
      {
        "name": "ssao_enabled",
        "type": "bool"
      },
      {
        "name": "ssao_horizon",
        "type": "float"
      },
      {
        "name": "ssao_intensity",
        "type": "float"
      },
      {
        "name": "ssao_light_affect",
        "type": "float"
      },
      {
        "name": "ssao_power",
        "type": "float"
      },
      {
        "name": "ssao_radius",
        "type": "float"
      },
      {
        "name": "ssao_sharpness",
        "type": "float"
      },
      {
        "name": "ssil_enabled",
        "type": "bool"
      },
      {
        "name": "ssil_intensity",
        "type": "float"
      },
      {
        "name": "ssil_normal_rejection",
        "type": "float"
      },
      {
        "name": "ssil_radius",
        "type": "float"
      },
      {
        "name": "ssil_sharpness",
        "type": "float"
      },
      {
        "name": "ssr_depth_tolerance",
        "type": "float"
      },
      {
        "name": "ssr_enabled",
        "type": "bool"
      },
      {
        "name": "ssr_fade_in",
        "type": "float"
      },
      {
        "name": "ssr_fade_out",
        "type": "float"
      },
      {
        "name": "ssr_max_steps",
        "type": "int"
      },
      {
        "name": "tonemap_exposure",
        "type": "float"
      },
      {
        "name": "tonemap_mode",
        "type": "int"
      },
      {
        "name": "tonemap_white",
        "type": "float"
      },
      {
        "name": "volumetric_fog_albedo",
        "type": "Color"
      },
      {
        "name": "volumetric_fog_ambient_inject",
        "type": "float"
      },
      {
        "name": "volumetric_fog_anisotropy",
        "type": "float"
      },
      {
        "name": "volumetric_fog_density",
        "type": "float"
      },
      {
        "name": "volumetric_fog_detail_spread",
        "type": "float"
      },
      {
        "name": "volumetric_fog_emission",
        "type": "Color"
      },
      {
        "name": "volumetric_fog_emission_energy",
        "type": "float"
      },
      {
        "name": "volumetric_fog_enabled",
        "type": "bool"
      },
      {
        "name": "volumetric_fog_gi_inject",
        "type": "float"
      },
      {
        "name": "volumetric_fog_length",
        "type": "float"
      },
      {
        "name": "volumetric_fog_sky_affect",
        "type": "float"
      },
      {
        "name": "volumetric_fog_temporal_reprojection_amount",
        "type": "float"
      },
      {
        "name": "volumetric_fog_temporal_reprojection_enabled",
        "type": "bool"
      }
    ]
  },
  "Expression": {
    "methods": [
      {
        "name": "execute",
        "parameters": [
          {
            "name": "inputs",
            "type": "Array"
          },
          {
            "name": "base_instance",
            "type": "Object"
          },
          {
            "name": "show_error",
            "type": "bool"
          },
          {
            "name": "const_calls_only",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_error_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has_execute_failed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "parse",
        "parameters": [
          {
            "name": "expression",
            "type": "String"
          },
          {
            "name": "input_names",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "Expression",
    "parent": "RefCounted",
    "properties": []
  },
  "ExternalTexture": {
    "methods": [
      {
        "name": "get_external_texture_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_external_buffer_id",
        "parameters": [
          {
            "name": "external_buffer_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ExternalTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "FileAccess": {
    "methods": [
      {
        "name": "close",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_temp",
        "parameters": [
          {
            "name": "mode_flags",
            "type": "int"
          },
          {
            "name": "prefix",
            "type": "String"
          },
          {
            "name": "extension",
            "type": "String"
          },
          {
            "name": "keep",
            "type": "bool"
          }
        ],
        "return_type": "FileAccess"
      },
      {
        "name": "eof_reached",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "file_exists",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "flush",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_8",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_16",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_64",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_as_text",
        "parameters": [
          {
            "name": "skip_cr",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_buffer",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_csv_line",
        "parameters": [
          {
            "name": "delim",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_double",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_error",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_file_as_bytes",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_file_as_string",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_float",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_half",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_hidden_attribute",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_length",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_md5",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_modified_time",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_open_error",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_pascal_string",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_path_absolute",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_position",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_read_only_attribute",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_real",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_sha256",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_unix_permissions",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_var",
        "parameters": [
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "is_open",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "open",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "FileAccess"
      },
      {
        "name": "open_compressed",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "mode_flags",
            "type": "int"
          },
          {
            "name": "compression_mode",
            "type": "int"
          }
        ],
        "return_type": "FileAccess"
      },
      {
        "name": "open_encrypted",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "mode_flags",
            "type": "int"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          },
          {
            "name": "iv",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "FileAccess"
      },
      {
        "name": "open_encrypted_with_pass",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "mode_flags",
            "type": "int"
          },
          {
            "name": "pass",
            "type": "String"
          }
        ],
        "return_type": "FileAccess"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "seek_end",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_hidden_attribute",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_read_only_attribute",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          },
          {
            "name": "ro",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_unix_permissions",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          },
          {
            "name": "permissions",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "store_8",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_16",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_32",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_64",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_csv_line",
        "parameters": [
          {
            "name": "values",
            "type": "PackedStringArray"
          },
          {
            "name": "delim",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_double",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_float",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_half",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_line",
        "parameters": [
          {
            "name": "line",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_pascal_string",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_real",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_string",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "store_var",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "full_objects",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "FileAccess",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "big_endian",
        "type": "bool"
      }
    ]
  },
  "FileDialog": {
    "methods": [
      {
        "name": "add_filter",
        "parameters": [
          {
            "name": "filter",
            "type": "String"
          },
          {
            "name": "description",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_option",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "values",
            "type": "PackedStringArray"
          },
          {
            "name": "default_value_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_filename_filter",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_filters",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "deselect_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_line_edit",
        "parameters": [],
        "return_type": "LineEdit"
      },
      {
        "name": "get_option_default",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_option_name",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_option_values",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_selected_options",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_vbox",
        "parameters": [],
        "return_type": "VBoxContainer"
      },
      {
        "name": "invalidate",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_option_default",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "default_value_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_option_name",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_option_values",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          },
          {
            "name": "values",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "FileDialog",
    "parent": "ConfirmationDialog",
    "properties": [
      {
        "name": "access",
        "type": "int"
      },
      {
        "name": "current_dir",
        "type": "String"
      },
      {
        "name": "current_file",
        "type": "String"
      },
      {
        "name": "current_path",
        "type": "String"
      },
      {
        "name": "dialog_hide_on_ok",
        "type": "bool"
      },
      {
        "name": "file_mode",
        "type": "int"
      },
      {
        "name": "filename_filter",
        "type": "String"
      },
      {
        "name": "filters",
        "type": "PackedStringArray"
      },
      {
        "name": "mode_overrides_title",
        "type": "bool"
      },
      {
        "name": "ok_button_text",
        "type": "String"
      },
      {
        "name": "option_count",
        "type": "int"
      },
      {
        "name": "root_subfolder",
        "type": "String"
      },
      {
        "name": "show_hidden_files",
        "type": "bool"
      },
      {
        "name": "size",
        "type": "Vector2i"
      },
      {
        "name": "title",
        "type": "String"
      },
      {
        "name": "use_native_dialog",
        "type": "bool"
      }
    ]
  },
  "FileSystemDock": {
    "methods": [
      {
        "name": "add_resource_tooltip_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorResourceTooltipPlugin"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "navigate_to_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_resource_tooltip_plugin",
        "parameters": [
          {
            "name": "plugin",
            "type": "EditorResourceTooltipPlugin"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "FileSystemDock",
    "parent": "VBoxContainer",
    "properties": []
  },
  "FlowContainer": {
    "methods": [
      {
        "name": "get_line_count",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "FlowContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "last_wrap_alignment",
        "type": "int"
      },
      {
        "name": "reverse_fill",
        "type": "bool"
      },
      {
        "name": "vertical",
        "type": "bool"
      }
    ]
  },
  "FogMaterial": {
    "methods": [],
    "name": "FogMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "albedo",
        "type": "Color"
      },
      {
        "name": "density",
        "type": "float"
      },
      {
        "name": "density_texture",
        "type": "Texture3D"
      },
      {
        "name": "edge_fade",
        "type": "float"
      },
      {
        "name": "emission",
        "type": "Color"
      },
      {
        "name": "height_falloff",
        "type": "float"
      }
    ]
  },
  "FogVolume": {
    "methods": [],
    "name": "FogVolume",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "material",
        "type": "Material"
      },
      {
        "name": "shape",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "Font": {
    "methods": [
      {
        "name": "draw_char",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "draw_char_outline",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "draw_multiline_string",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "max_lines",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "brk_flags",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_multiline_string_outline",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "max_lines",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "brk_flags",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_string",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_string_outline",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find_variation",
        "parameters": [
          {
            "name": "variation_coordinates",
            "type": "Dictionary"
          },
          {
            "name": "face_index",
            "type": "int"
          },
          {
            "name": "strength",
            "type": "float"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "spacing_top",
            "type": "int"
          },
          {
            "name": "spacing_bottom",
            "type": "int"
          },
          {
            "name": "spacing_space",
            "type": "int"
          },
          {
            "name": "spacing_glyph",
            "type": "int"
          },
          {
            "name": "baseline_offset",
            "type": "float"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_ascent",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_char_size",
        "parameters": [
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_descent",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_face_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_font_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_font_stretch",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_font_style",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_font_style_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_font_weight",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_height",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_multiline_string_size",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "max_lines",
            "type": "int"
          },
          {
            "name": "brk_flags",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_opentype_features",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_ot_name_strings",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_rids",
        "parameters": [],
        "return_type": "RID[]"
      },
      {
        "name": "get_spacing",
        "parameters": [
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_string_size",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_supported_chars",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_supported_feature_list",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_supported_variation_list",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_underline_position",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_underline_thickness",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "has_char",
        "parameters": [
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_language_supported",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_script_supported",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_cache_capacity",
        "parameters": [
          {
            "name": "single_line",
            "type": "int"
          },
          {
            "name": "multi_line",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Font",
    "parent": "Resource",
    "properties": [
      {
        "name": "fallbacks",
        "type": "Font[]"
      }
    ]
  },
  "FontFile": {
    "methods": [
      {
        "name": "clear_cache",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_glyphs",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_kerning_map",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_size_cache",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_textures",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_cache_ascent",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_cache_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_cache_descent",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_cache_scale",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_cache_underline_position",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_cache_underline_thickness",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_char_from_glyph_index",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_embolden",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_extra_baseline_offset",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_extra_spacing",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_face_index",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_glyph_advance",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_glyph_index",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "variation_selector",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_glyph_list",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_glyph_offset",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_glyph_size",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_glyph_texture_idx",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_glyph_uv_rect",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_kerning",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_kerning_list",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_language_support_override",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_language_support_overrides",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_script_support_override",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_script_support_overrides",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_size_cache_list",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_texture_count",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_texture_image",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "get_texture_offsets",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_transform",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "get_variation_coordinates",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "load_bitmap_font",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_dynamic_font",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "remove_cache",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_glyph",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_kerning",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_language_support_override",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_script_support_override",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_size_cache",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_texture",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "render_glyph",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "render_range",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cache_ascent",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "ascent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cache_descent",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "descent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cache_scale",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cache_underline_position",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cache_underline_thickness",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_thickness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_embolden",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "strength",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_extra_baseline_offset",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "baseline_offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_extra_spacing",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_face_index",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "face_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_glyph_advance",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "advance",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_glyph_offset",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_glyph_size",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "gl_size",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_glyph_texture_idx",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "texture_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_glyph_uv_rect",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "uv_rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_kerning",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          },
          {
            "name": "kerning",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_language_support_override",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_script_support_override",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture_image",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture_offsets",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_transform",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_variation_coordinates",
        "parameters": [
          {
            "name": "cache_index",
            "type": "int"
          },
          {
            "name": "variation_coordinates",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "FontFile",
    "parent": "Font",
    "properties": [
      {
        "name": "allow_system_fallback",
        "type": "bool"
      },
      {
        "name": "antialiasing",
        "type": "int"
      },
      {
        "name": "data",
        "type": "PackedByteArray"
      },
      {
        "name": "disable_embedded_bitmaps",
        "type": "bool"
      },
      {
        "name": "fixed_size",
        "type": "int"
      },
      {
        "name": "fixed_size_scale_mode",
        "type": "int"
      },
      {
        "name": "font_name",
        "type": "String"
      },
      {
        "name": "font_stretch",
        "type": "int"
      },
      {
        "name": "font_style",
        "type": "int"
      },
      {
        "name": "font_weight",
        "type": "int"
      },
      {
        "name": "force_autohinter",
        "type": "bool"
      },
      {
        "name": "generate_mipmaps",
        "type": "bool"
      },
      {
        "name": "hinting",
        "type": "int"
      },
      {
        "name": "keep_rounding_remainders",
        "type": "bool"
      },
      {
        "name": "msdf_pixel_range",
        "type": "int"
      },
      {
        "name": "msdf_size",
        "type": "int"
      },
      {
        "name": "multichannel_signed_distance_field",
        "type": "bool"
      },
      {
        "name": "opentype_feature_overrides",
        "type": "Dictionary"
      },
      {
        "name": "oversampling",
        "type": "float"
      },
      {
        "name": "style_name",
        "type": "String"
      },
      {
        "name": "subpixel_positioning",
        "type": "int"
      }
    ]
  },
  "FontVariation": {
    "methods": [
      {
        "name": "set_spacing",
        "parameters": [
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "FontVariation",
    "parent": "Font",
    "properties": [
      {
        "name": "base_font",
        "type": "Font"
      },
      {
        "name": "baseline_offset",
        "type": "float"
      },
      {
        "name": "opentype_features",
        "type": "Dictionary"
      },
      {
        "name": "spacing_bottom",
        "type": "int"
      },
      {
        "name": "spacing_glyph",
        "type": "int"
      },
      {
        "name": "spacing_space",
        "type": "int"
      },
      {
        "name": "spacing_top",
        "type": "int"
      },
      {
        "name": "variation_embolden",
        "type": "float"
      },
      {
        "name": "variation_face_index",
        "type": "int"
      },
      {
        "name": "variation_opentype",
        "type": "Dictionary"
      },
      {
        "name": "variation_transform",
        "type": "Transform2D"
      }
    ]
  },
  "FramebufferCacheRD": {
    "methods": [
      {
        "name": "get_cache_multipass",
        "parameters": [
          {
            "name": "textures",
            "type": "RID[]"
          },
          {
            "name": "passes",
            "type": "RDFramebufferPass[]"
          },
          {
            "name": "views",
            "type": "int"
          }
        ],
        "return_type": "RID"
      }
    ],
    "name": "FramebufferCacheRD",
    "parent": "Object",
    "properties": []
  },
  "GDExtension": {
    "methods": [
      {
        "name": "get_minimum_library_initialization_level",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_library_open",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "GDExtension",
    "parent": "Resource",
    "properties": []
  },
  "GDExtensionManager": {
    "methods": [
      {
        "name": "get_extension",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "GDExtension"
      },
      {
        "name": "get_loaded_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "is_extension_loaded",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load_extension",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reload_extension",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "unload_extension",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "GDExtensionManager",
    "parent": "Object",
    "properties": []
  },
  "GPUParticles2D": {
    "methods": [
      {
        "name": "capture_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "convert_from_particles",
        "parameters": [
          {
            "name": "particles",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "emit_particle",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform2D"
          },
          {
            "name": "velocity",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "custom",
            "type": "Color"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "request_particles_process",
        "parameters": [
          {
            "name": "process_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "restart",
        "parameters": [
          {
            "name": "keep_seed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GPUParticles2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "amount",
        "type": "int"
      },
      {
        "name": "amount_ratio",
        "type": "float"
      },
      {
        "name": "collision_base_size",
        "type": "float"
      },
      {
        "name": "draw_order",
        "type": "int"
      },
      {
        "name": "emitting",
        "type": "bool"
      },
      {
        "name": "explosiveness",
        "type": "float"
      },
      {
        "name": "fixed_fps",
        "type": "int"
      },
      {
        "name": "fract_delta",
        "type": "bool"
      },
      {
        "name": "interp_to_end",
        "type": "float"
      },
      {
        "name": "interpolate",
        "type": "bool"
      },
      {
        "name": "lifetime",
        "type": "float"
      },
      {
        "name": "local_coords",
        "type": "bool"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "preprocess",
        "type": "float"
      },
      {
        "name": "process_material",
        "type": "Material"
      },
      {
        "name": "randomness",
        "type": "float"
      },
      {
        "name": "seed",
        "type": "int"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "sub_emitter",
        "type": "NodePath"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "trail_enabled",
        "type": "bool"
      },
      {
        "name": "trail_lifetime",
        "type": "float"
      },
      {
        "name": "trail_section_subdivisions",
        "type": "int"
      },
      {
        "name": "trail_sections",
        "type": "int"
      },
      {
        "name": "use_fixed_seed",
        "type": "bool"
      },
      {
        "name": "visibility_rect",
        "type": "Rect2"
      }
    ]
  },
  "GPUParticles3D": {
    "methods": [
      {
        "name": "capture_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "convert_from_particles",
        "parameters": [
          {
            "name": "particles",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "emit_particle",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform3D"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "custom",
            "type": "Color"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_draw_pass_mesh",
        "parameters": [
          {
            "name": "pass",
            "type": "int"
          }
        ],
        "return_type": "Mesh"
      },
      {
        "name": "request_particles_process",
        "parameters": [
          {
            "name": "process_time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "restart",
        "parameters": [
          {
            "name": "keep_seed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_draw_pass_mesh",
        "parameters": [
          {
            "name": "pass",
            "type": "int"
          },
          {
            "name": "mesh",
            "type": "Mesh"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GPUParticles3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "amount",
        "type": "int"
      },
      {
        "name": "amount_ratio",
        "type": "float"
      },
      {
        "name": "collision_base_size",
        "type": "float"
      },
      {
        "name": "draw_order",
        "type": "int"
      },
      {
        "name": "draw_pass_1",
        "type": "Mesh"
      },
      {
        "name": "draw_pass_2",
        "type": "Mesh"
      },
      {
        "name": "draw_pass_3",
        "type": "Mesh"
      },
      {
        "name": "draw_pass_4",
        "type": "Mesh"
      },
      {
        "name": "draw_passes",
        "type": "int"
      },
      {
        "name": "draw_skin",
        "type": "Skin"
      },
      {
        "name": "emitting",
        "type": "bool"
      },
      {
        "name": "explosiveness",
        "type": "float"
      },
      {
        "name": "fixed_fps",
        "type": "int"
      },
      {
        "name": "fract_delta",
        "type": "bool"
      },
      {
        "name": "interp_to_end",
        "type": "float"
      },
      {
        "name": "interpolate",
        "type": "bool"
      },
      {
        "name": "lifetime",
        "type": "float"
      },
      {
        "name": "local_coords",
        "type": "bool"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "preprocess",
        "type": "float"
      },
      {
        "name": "process_material",
        "type": "Material"
      },
      {
        "name": "randomness",
        "type": "float"
      },
      {
        "name": "seed",
        "type": "int"
      },
      {
        "name": "speed_scale",
        "type": "float"
      },
      {
        "name": "sub_emitter",
        "type": "NodePath"
      },
      {
        "name": "trail_enabled",
        "type": "bool"
      },
      {
        "name": "trail_lifetime",
        "type": "float"
      },
      {
        "name": "transform_align",
        "type": "int"
      },
      {
        "name": "use_fixed_seed",
        "type": "bool"
      },
      {
        "name": "visibility_aabb",
        "type": "AABB"
      }
    ]
  },
  "GPUParticlesAttractor3D": {
    "methods": [],
    "name": "GPUParticlesAttractor3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "attenuation",
        "type": "float"
      },
      {
        "name": "cull_mask",
        "type": "int"
      },
      {
        "name": "directionality",
        "type": "float"
      },
      {
        "name": "strength",
        "type": "float"
      }
    ]
  },
  "GPUParticlesAttractorBox3D": {
    "methods": [],
    "name": "GPUParticlesAttractorBox3D",
    "parent": "GPUParticlesAttractor3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "GPUParticlesAttractorSphere3D": {
    "methods": [],
    "name": "GPUParticlesAttractorSphere3D",
    "parent": "GPUParticlesAttractor3D",
    "properties": [
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "GPUParticlesAttractorVectorField3D": {
    "methods": [],
    "name": "GPUParticlesAttractorVectorField3D",
    "parent": "GPUParticlesAttractor3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "texture",
        "type": "Texture3D"
      }
    ]
  },
  "GPUParticlesCollision3D": {
    "methods": [],
    "name": "GPUParticlesCollision3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "cull_mask",
        "type": "int"
      }
    ]
  },
  "GPUParticlesCollisionBox3D": {
    "methods": [],
    "name": "GPUParticlesCollisionBox3D",
    "parent": "GPUParticlesCollision3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3"
      }
    ]
  },
  "GPUParticlesCollisionHeightField3D": {
    "methods": [
      {
        "name": "get_heightfield_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_heightfield_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GPUParticlesCollisionHeightField3D",
    "parent": "GPUParticlesCollision3D",
    "properties": [
      {
        "name": "follow_camera_enabled",
        "type": "bool"
      },
      {
        "name": "heightfield_mask",
        "type": "int"
      },
      {
        "name": "resolution",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "update_mode",
        "type": "int"
      }
    ]
  },
  "GPUParticlesCollisionSDF3D": {
    "methods": [
      {
        "name": "get_bake_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_bake_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GPUParticlesCollisionSDF3D",
    "parent": "GPUParticlesCollision3D",
    "properties": [
      {
        "name": "bake_mask",
        "type": "int"
      },
      {
        "name": "resolution",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "texture",
        "type": "Texture3D"
      },
      {
        "name": "thickness",
        "type": "float"
      }
    ]
  },
  "GPUParticlesCollisionSphere3D": {
    "methods": [],
    "name": "GPUParticlesCollisionSphere3D",
    "parent": "GPUParticlesCollision3D",
    "properties": [
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "Generic6DOFJoint3D": {
    "methods": [
      {
        "name": "get_flag_x",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_flag_y",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_flag_z",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_param_x",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_y",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_z",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_flag_x",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_flag_y",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_flag_z",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_x",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_y",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_z",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Generic6DOFJoint3D",
    "parent": "Joint3D",
    "properties": [
      {
        "name": "angular_limit_x/damping",
        "type": "float"
      },
      {
        "name": "angular_limit_x/enabled",
        "type": "bool"
      },
      {
        "name": "angular_limit_x/erp",
        "type": "float"
      },
      {
        "name": "angular_limit_x/force_limit",
        "type": "float"
      },
      {
        "name": "angular_limit_x/lower_angle",
        "type": "float"
      },
      {
        "name": "angular_limit_x/restitution",
        "type": "float"
      },
      {
        "name": "angular_limit_x/softness",
        "type": "float"
      },
      {
        "name": "angular_limit_x/upper_angle",
        "type": "float"
      },
      {
        "name": "angular_limit_y/damping",
        "type": "float"
      },
      {
        "name": "angular_limit_y/enabled",
        "type": "bool"
      },
      {
        "name": "angular_limit_y/erp",
        "type": "float"
      },
      {
        "name": "angular_limit_y/force_limit",
        "type": "float"
      },
      {
        "name": "angular_limit_y/lower_angle",
        "type": "float"
      },
      {
        "name": "angular_limit_y/restitution",
        "type": "float"
      },
      {
        "name": "angular_limit_y/softness",
        "type": "float"
      },
      {
        "name": "angular_limit_y/upper_angle",
        "type": "float"
      },
      {
        "name": "angular_limit_z/damping",
        "type": "float"
      },
      {
        "name": "angular_limit_z/enabled",
        "type": "bool"
      },
      {
        "name": "angular_limit_z/erp",
        "type": "float"
      },
      {
        "name": "angular_limit_z/force_limit",
        "type": "float"
      },
      {
        "name": "angular_limit_z/lower_angle",
        "type": "float"
      },
      {
        "name": "angular_limit_z/restitution",
        "type": "float"
      },
      {
        "name": "angular_limit_z/softness",
        "type": "float"
      },
      {
        "name": "angular_limit_z/upper_angle",
        "type": "float"
      },
      {
        "name": "angular_motor_x/enabled",
        "type": "bool"
      },
      {
        "name": "angular_motor_x/force_limit",
        "type": "float"
      },
      {
        "name": "angular_motor_x/target_velocity",
        "type": "float"
      },
      {
        "name": "angular_motor_y/enabled",
        "type": "bool"
      },
      {
        "name": "angular_motor_y/force_limit",
        "type": "float"
      },
      {
        "name": "angular_motor_y/target_velocity",
        "type": "float"
      },
      {
        "name": "angular_motor_z/enabled",
        "type": "bool"
      },
      {
        "name": "angular_motor_z/force_limit",
        "type": "float"
      },
      {
        "name": "angular_motor_z/target_velocity",
        "type": "float"
      },
      {
        "name": "angular_spring_x/damping",
        "type": "float"
      },
      {
        "name": "angular_spring_x/enabled",
        "type": "bool"
      },
      {
        "name": "angular_spring_x/equilibrium_point",
        "type": "float"
      },
      {
        "name": "angular_spring_x/stiffness",
        "type": "float"
      },
      {
        "name": "angular_spring_y/damping",
        "type": "float"
      },
      {
        "name": "angular_spring_y/enabled",
        "type": "bool"
      },
      {
        "name": "angular_spring_y/equilibrium_point",
        "type": "float"
      },
      {
        "name": "angular_spring_y/stiffness",
        "type": "float"
      },
      {
        "name": "angular_spring_z/damping",
        "type": "float"
      },
      {
        "name": "angular_spring_z/enabled",
        "type": "bool"
      },
      {
        "name": "angular_spring_z/equilibrium_point",
        "type": "float"
      },
      {
        "name": "angular_spring_z/stiffness",
        "type": "float"
      },
      {
        "name": "linear_limit_x/damping",
        "type": "float"
      },
      {
        "name": "linear_limit_x/enabled",
        "type": "bool"
      },
      {
        "name": "linear_limit_x/lower_distance",
        "type": "float"
      },
      {
        "name": "linear_limit_x/restitution",
        "type": "float"
      },
      {
        "name": "linear_limit_x/softness",
        "type": "float"
      },
      {
        "name": "linear_limit_x/upper_distance",
        "type": "float"
      },
      {
        "name": "linear_limit_y/damping",
        "type": "float"
      },
      {
        "name": "linear_limit_y/enabled",
        "type": "bool"
      },
      {
        "name": "linear_limit_y/lower_distance",
        "type": "float"
      },
      {
        "name": "linear_limit_y/restitution",
        "type": "float"
      },
      {
        "name": "linear_limit_y/softness",
        "type": "float"
      },
      {
        "name": "linear_limit_y/upper_distance",
        "type": "float"
      },
      {
        "name": "linear_limit_z/damping",
        "type": "float"
      },
      {
        "name": "linear_limit_z/enabled",
        "type": "bool"
      },
      {
        "name": "linear_limit_z/lower_distance",
        "type": "float"
      },
      {
        "name": "linear_limit_z/restitution",
        "type": "float"
      },
      {
        "name": "linear_limit_z/softness",
        "type": "float"
      },
      {
        "name": "linear_limit_z/upper_distance",
        "type": "float"
      },
      {
        "name": "linear_motor_x/enabled",
        "type": "bool"
      },
      {
        "name": "linear_motor_x/force_limit",
        "type": "float"
      },
      {
        "name": "linear_motor_x/target_velocity",
        "type": "float"
      },
      {
        "name": "linear_motor_y/enabled",
        "type": "bool"
      },
      {
        "name": "linear_motor_y/force_limit",
        "type": "float"
      },
      {
        "name": "linear_motor_y/target_velocity",
        "type": "float"
      },
      {
        "name": "linear_motor_z/enabled",
        "type": "bool"
      },
      {
        "name": "linear_motor_z/force_limit",
        "type": "float"
      },
      {
        "name": "linear_motor_z/target_velocity",
        "type": "float"
      },
      {
        "name": "linear_spring_x/damping",
        "type": "float"
      },
      {
        "name": "linear_spring_x/enabled",
        "type": "bool"
      },
      {
        "name": "linear_spring_x/equilibrium_point",
        "type": "float"
      },
      {
        "name": "linear_spring_x/stiffness",
        "type": "float"
      },
      {
        "name": "linear_spring_y/damping",
        "type": "float"
      },
      {
        "name": "linear_spring_y/enabled",
        "type": "bool"
      },
      {
        "name": "linear_spring_y/equilibrium_point",
        "type": "float"
      },
      {
        "name": "linear_spring_y/stiffness",
        "type": "float"
      },
      {
        "name": "linear_spring_z/damping",
        "type": "float"
      },
      {
        "name": "linear_spring_z/enabled",
        "type": "bool"
      },
      {
        "name": "linear_spring_z/equilibrium_point",
        "type": "float"
      },
      {
        "name": "linear_spring_z/stiffness",
        "type": "float"
      }
    ]
  },
  "Geometry2D": {
    "methods": [
      {
        "name": "bresenham_line",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2i"
          },
          {
            "name": "to",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "clip_polygons",
        "parameters": [
          {
            "name": "polygon_a",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon_b",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "clip_polyline_with_polygon",
        "parameters": [
          {
            "name": "polyline",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "convex_hull",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "decompose_polygon_in_convex",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "exclude_polygons",
        "parameters": [
          {
            "name": "polygon_a",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon_b",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "get_closest_point_to_segment",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "s1",
            "type": "Vector2"
          },
          {
            "name": "s2",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_closest_point_to_segment_uncapped",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "s1",
            "type": "Vector2"
          },
          {
            "name": "s2",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_closest_points_between_segments",
        "parameters": [
          {
            "name": "p1",
            "type": "Vector2"
          },
          {
            "name": "q1",
            "type": "Vector2"
          },
          {
            "name": "p2",
            "type": "Vector2"
          },
          {
            "name": "q2",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "intersect_polygons",
        "parameters": [
          {
            "name": "polygon_a",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon_b",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "intersect_polyline_with_polygon",
        "parameters": [
          {
            "name": "polyline",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "is_point_in_circle",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "circle_position",
            "type": "Vector2"
          },
          {
            "name": "circle_radius",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_point_in_polygon",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_polygon_clockwise",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "line_intersects_line",
        "parameters": [
          {
            "name": "from_a",
            "type": "Vector2"
          },
          {
            "name": "dir_a",
            "type": "Vector2"
          },
          {
            "name": "from_b",
            "type": "Vector2"
          },
          {
            "name": "dir_b",
            "type": "Vector2"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "make_atlas",
        "parameters": [
          {
            "name": "sizes",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "merge_polygons",
        "parameters": [
          {
            "name": "polygon_a",
            "type": "PackedVector2Array"
          },
          {
            "name": "polygon_b",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "offset_polygon",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          },
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "join_type",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "offset_polyline",
        "parameters": [
          {
            "name": "polyline",
            "type": "PackedVector2Array"
          },
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "join_type",
            "type": "int"
          },
          {
            "name": "end_type",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "point_is_inside_triangle",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "a",
            "type": "Vector2"
          },
          {
            "name": "b",
            "type": "Vector2"
          },
          {
            "name": "c",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "segment_intersects_circle",
        "parameters": [
          {
            "name": "segment_from",
            "type": "Vector2"
          },
          {
            "name": "segment_to",
            "type": "Vector2"
          },
          {
            "name": "circle_position",
            "type": "Vector2"
          },
          {
            "name": "circle_radius",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "segment_intersects_segment",
        "parameters": [
          {
            "name": "from_a",
            "type": "Vector2"
          },
          {
            "name": "to_a",
            "type": "Vector2"
          },
          {
            "name": "from_b",
            "type": "Vector2"
          },
          {
            "name": "to_b",
            "type": "Vector2"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "triangulate_delaunay",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "triangulate_polygon",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "PackedInt32Array"
      }
    ],
    "name": "Geometry2D",
    "parent": "Object",
    "properties": []
  },
  "Geometry3D": {
    "methods": [
      {
        "name": "build_box_planes",
        "parameters": [
          {
            "name": "extents",
            "type": "Vector3"
          }
        ],
        "return_type": "Plane[]"
      },
      {
        "name": "build_capsule_planes",
        "parameters": [
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "height",
            "type": "float"
          },
          {
            "name": "sides",
            "type": "int"
          },
          {
            "name": "lats",
            "type": "int"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "Plane[]"
      },
      {
        "name": "build_cylinder_planes",
        "parameters": [
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "height",
            "type": "float"
          },
          {
            "name": "sides",
            "type": "int"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "Plane[]"
      },
      {
        "name": "clip_polygon",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector3Array"
          },
          {
            "name": "plane",
            "type": "Plane"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "compute_convex_mesh_points",
        "parameters": [
          {
            "name": "planes",
            "type": "Plane[]"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_closest_point_to_segment",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          },
          {
            "name": "s1",
            "type": "Vector3"
          },
          {
            "name": "s2",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_closest_point_to_segment_uncapped",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          },
          {
            "name": "s1",
            "type": "Vector3"
          },
          {
            "name": "s2",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_closest_points_between_segments",
        "parameters": [
          {
            "name": "p1",
            "type": "Vector3"
          },
          {
            "name": "p2",
            "type": "Vector3"
          },
          {
            "name": "q1",
            "type": "Vector3"
          },
          {
            "name": "q2",
            "type": "Vector3"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_triangle_barycentric_coords",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          },
          {
            "name": "a",
            "type": "Vector3"
          },
          {
            "name": "b",
            "type": "Vector3"
          },
          {
            "name": "c",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "ray_intersects_triangle",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "dir",
            "type": "Vector3"
          },
          {
            "name": "a",
            "type": "Vector3"
          },
          {
            "name": "b",
            "type": "Vector3"
          },
          {
            "name": "c",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "segment_intersects_convex",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "planes",
            "type": "Plane[]"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "segment_intersects_cylinder",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "height",
            "type": "float"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "segment_intersects_sphere",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "sphere_position",
            "type": "Vector3"
          },
          {
            "name": "sphere_radius",
            "type": "float"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "segment_intersects_triangle",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "a",
            "type": "Vector3"
          },
          {
            "name": "b",
            "type": "Vector3"
          },
          {
            "name": "c",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "tetrahedralize_delaunay",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "PackedInt32Array"
      }
    ],
    "name": "Geometry3D",
    "parent": "Object",
    "properties": []
  },
  "GeometryInstance3D": {
    "methods": [
      {
        "name": "get_instance_shader_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "set_instance_shader_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GeometryInstance3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "cast_shadow",
        "type": "int"
      },
      {
        "name": "custom_aabb",
        "type": "AABB"
      },
      {
        "name": "extra_cull_margin",
        "type": "float"
      },
      {
        "name": "gi_lightmap_scale",
        "type": "int"
      },
      {
        "name": "gi_lightmap_texel_scale",
        "type": "float"
      },
      {
        "name": "gi_mode",
        "type": "int"
      },
      {
        "name": "ignore_occlusion_culling",
        "type": "bool"
      },
      {
        "name": "lod_bias",
        "type": "float"
      },
      {
        "name": "material_overlay",
        "type": "Material"
      },
      {
        "name": "material_override",
        "type": "Material"
      },
      {
        "name": "transparency",
        "type": "float"
      },
      {
        "name": "visibility_range_begin",
        "type": "float"
      },
      {
        "name": "visibility_range_begin_margin",
        "type": "float"
      },
      {
        "name": "visibility_range_end",
        "type": "float"
      },
      {
        "name": "visibility_range_end_margin",
        "type": "float"
      },
      {
        "name": "visibility_range_fade_mode",
        "type": "int"
      }
    ]
  },
  "Gradient": {
    "methods": [
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_color",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_offset",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "sample",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "set_color",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_offset",
        "parameters": [
          {
            "name": "point",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Gradient",
    "parent": "Resource",
    "properties": [
      {
        "name": "colors",
        "type": "PackedColorArray"
      },
      {
        "name": "interpolation_color_space",
        "type": "int"
      },
      {
        "name": "interpolation_mode",
        "type": "int"
      },
      {
        "name": "offsets",
        "type": "PackedFloat32Array"
      }
    ]
  },
  "GradientTexture1D": {
    "methods": [],
    "name": "GradientTexture1D",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "gradient",
        "type": "Gradient"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "use_hdr",
        "type": "bool"
      },
      {
        "name": "width",
        "type": "int"
      }
    ]
  },
  "GradientTexture2D": {
    "methods": [],
    "name": "GradientTexture2D",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "fill",
        "type": "int"
      },
      {
        "name": "fill_from",
        "type": "Vector2"
      },
      {
        "name": "fill_to",
        "type": "Vector2"
      },
      {
        "name": "gradient",
        "type": "Gradient"
      },
      {
        "name": "height",
        "type": "int"
      },
      {
        "name": "repeat",
        "type": "int"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "use_hdr",
        "type": "bool"
      },
      {
        "name": "width",
        "type": "int"
      }
    ]
  },
  "GraphEdit": {
    "methods": [
      {
        "name": "_get_connection_line",
        "parameters": [
          {
            "name": "from_position",
            "type": "Vector2"
          },
          {
            "name": "to_position",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "_is_in_input_hotzone",
        "parameters": [
          {
            "name": "in_node",
            "type": "Object"
          },
          {
            "name": "in_port",
            "type": "int"
          },
          {
            "name": "mouse_position",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_in_output_hotzone",
        "parameters": [
          {
            "name": "in_node",
            "type": "Object"
          },
          {
            "name": "in_port",
            "type": "int"
          },
          {
            "name": "mouse_position",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_node_hover_valid",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_valid_connection_type",
        "parameters": [
          {
            "name": "from_type",
            "type": "int"
          },
          {
            "name": "to_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_valid_left_disconnect_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_valid_right_disconnect_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "arrange_nodes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "attach_graph_element_to_frame",
        "parameters": [
          {
            "name": "element",
            "type": "StringName"
          },
          {
            "name": "frame",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_connections",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect_node",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "to_port",
            "type": "int"
          },
          {
            "name": "keep_alive",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "detach_graph_element_from_frame",
        "parameters": [
          {
            "name": "element",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "disconnect_node",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "force_connection_drag_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_attached_nodes_of_frame",
        "parameters": [
          {
            "name": "frame",
            "type": "StringName"
          }
        ],
        "return_type": "StringName[]"
      },
      {
        "name": "get_closest_connection_at_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "max_distance",
            "type": "float"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_connection_count",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_connection_line",
        "parameters": [
          {
            "name": "from_node",
            "type": "Vector2"
          },
          {
            "name": "to_node",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_connections_intersecting_with_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_element_frame",
        "parameters": [
          {
            "name": "element",
            "type": "StringName"
          }
        ],
        "return_type": "GraphFrame"
      },
      {
        "name": "get_menu_hbox",
        "parameters": [],
        "return_type": "HBoxContainer"
      },
      {
        "name": "is_node_connected",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_connection_type",
        "parameters": [
          {
            "name": "from_type",
            "type": "int"
          },
          {
            "name": "to_type",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_valid_connection_type",
        "parameters": [
          {
            "name": "from_type",
            "type": "int"
          },
          {
            "name": "to_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_valid_left_disconnect_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_valid_right_disconnect_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_connection_activity",
        "parameters": [
          {
            "name": "from_node",
            "type": "StringName"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "StringName"
          },
          {
            "name": "to_port",
            "type": "int"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selected",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GraphEdit",
    "parent": "Control",
    "properties": [
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "connection_lines_antialiased",
        "type": "bool"
      },
      {
        "name": "connection_lines_curvature",
        "type": "float"
      },
      {
        "name": "connection_lines_thickness",
        "type": "float"
      },
      {
        "name": "connections",
        "type": "Dictionary[]"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "grid_pattern",
        "type": "int"
      },
      {
        "name": "minimap_enabled",
        "type": "bool"
      },
      {
        "name": "minimap_opacity",
        "type": "float"
      },
      {
        "name": "minimap_size",
        "type": "Vector2"
      },
      {
        "name": "panning_scheme",
        "type": "int"
      },
      {
        "name": "right_disconnects",
        "type": "bool"
      },
      {
        "name": "scroll_offset",
        "type": "Vector2"
      },
      {
        "name": "show_arrange_button",
        "type": "bool"
      },
      {
        "name": "show_grid",
        "type": "bool"
      },
      {
        "name": "show_grid_buttons",
        "type": "bool"
      },
      {
        "name": "show_menu",
        "type": "bool"
      },
      {
        "name": "show_minimap_button",
        "type": "bool"
      },
      {
        "name": "show_zoom_buttons",
        "type": "bool"
      },
      {
        "name": "show_zoom_label",
        "type": "bool"
      },
      {
        "name": "snapping_distance",
        "type": "int"
      },
      {
        "name": "snapping_enabled",
        "type": "bool"
      },
      {
        "name": "zoom",
        "type": "float"
      },
      {
        "name": "zoom_max",
        "type": "float"
      },
      {
        "name": "zoom_min",
        "type": "float"
      },
      {
        "name": "zoom_step",
        "type": "float"
      }
    ]
  },
  "GraphElement": {
    "methods": [],
    "name": "GraphElement",
    "parent": "Container",
    "properties": [
      {
        "name": "draggable",
        "type": "bool"
      },
      {
        "name": "position_offset",
        "type": "Vector2"
      },
      {
        "name": "resizable",
        "type": "bool"
      },
      {
        "name": "selectable",
        "type": "bool"
      },
      {
        "name": "selected",
        "type": "bool"
      }
    ]
  },
  "GraphFrame": {
    "methods": [
      {
        "name": "get_titlebar_hbox",
        "parameters": [],
        "return_type": "HBoxContainer"
      }
    ],
    "name": "GraphFrame",
    "parent": "GraphElement",
    "properties": [
      {
        "name": "autoshrink_enabled",
        "type": "bool"
      },
      {
        "name": "autoshrink_margin",
        "type": "int"
      },
      {
        "name": "drag_margin",
        "type": "int"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "tint_color",
        "type": "Color"
      },
      {
        "name": "tint_color_enabled",
        "type": "bool"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "GraphNode": {
    "methods": [
      {
        "name": "_draw_port",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "left",
            "type": "bool"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_all_slots",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_slot",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_input_port_color",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_input_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_input_port_position",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_input_port_slot",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_input_port_type",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_output_port_color",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_output_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_output_port_position",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_output_port_slot",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_output_port_type",
        "parameters": [
          {
            "name": "port_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_slot_color_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_slot_color_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_slot_custom_icon_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_slot_custom_icon_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_slot_type_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_slot_type_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_titlebar_hbox",
        "parameters": [],
        "return_type": "HBoxContainer"
      },
      {
        "name": "is_slot_draw_stylebox",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_slot_enabled_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_slot_enabled_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_slot",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "enable_left_port",
            "type": "bool"
          },
          {
            "name": "type_left",
            "type": "int"
          },
          {
            "name": "color_left",
            "type": "Color"
          },
          {
            "name": "enable_right_port",
            "type": "bool"
          },
          {
            "name": "type_right",
            "type": "int"
          },
          {
            "name": "color_right",
            "type": "Color"
          },
          {
            "name": "custom_icon_left",
            "type": "Texture2D"
          },
          {
            "name": "custom_icon_right",
            "type": "Texture2D"
          },
          {
            "name": "draw_stylebox",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_color_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_color_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_custom_icon_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "custom_icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_custom_icon_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "custom_icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_draw_stylebox",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_enabled_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_enabled_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_type_left",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_slot_type_right",
        "parameters": [
          {
            "name": "slot_index",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "GraphNode",
    "parent": "GraphElement",
    "properties": [
      {
        "name": "ignore_invalid_connection_type",
        "type": "bool"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "GridContainer": {
    "methods": [],
    "name": "GridContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "columns",
        "type": "int"
      }
    ]
  },
  "GrooveJoint2D": {
    "methods": [],
    "name": "GrooveJoint2D",
    "parent": "Joint2D",
    "properties": [
      {
        "name": "initial_offset",
        "type": "float"
      },
      {
        "name": "length",
        "type": "float"
      }
    ]
  },
  "HBoxContainer": {
    "methods": [],
    "name": "HBoxContainer",
    "parent": "BoxContainer",
    "properties": []
  },
  "HFlowContainer": {
    "methods": [],
    "name": "HFlowContainer",
    "parent": "FlowContainer",
    "properties": []
  },
  "HMACContext": {
    "methods": [
      {
        "name": "finish",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "hash_type",
            "type": "int"
          },
          {
            "name": "key",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "HMACContext",
    "parent": "RefCounted",
    "properties": []
  },
  "HScrollBar": {
    "methods": [],
    "name": "HScrollBar",
    "parent": "ScrollBar",
    "properties": []
  },
  "HSeparator": {
    "methods": [],
    "name": "HSeparator",
    "parent": "Separator",
    "properties": []
  },
  "HSlider": {
    "methods": [],
    "name": "HSlider",
    "parent": "Slider",
    "properties": []
  },
  "HSplitContainer": {
    "methods": [],
    "name": "HSplitContainer",
    "parent": "SplitContainer",
    "properties": []
  },
  "HTTPClient": {
    "methods": [
      {
        "name": "close",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect_to_host",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "tls_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_response_body_length",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_response_code",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_response_headers",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_response_headers_as_dictionary",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_response",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_response_chunked",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "query_string_from_dict",
        "parameters": [
          {
            "name": "fields",
            "type": "Dictionary"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "read_response_body_chunk",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "request",
        "parameters": [
          {
            "name": "method",
            "type": "int"
          },
          {
            "name": "url",
            "type": "String"
          },
          {
            "name": "headers",
            "type": "PackedStringArray"
          },
          {
            "name": "body",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "request_raw",
        "parameters": [
          {
            "name": "method",
            "type": "int"
          },
          {
            "name": "url",
            "type": "String"
          },
          {
            "name": "headers",
            "type": "PackedStringArray"
          },
          {
            "name": "body",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_http_proxy",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_https_proxy",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "HTTPClient",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "blocking_mode_enabled",
        "type": "bool"
      },
      {
        "name": "connection",
        "type": "StreamPeer"
      },
      {
        "name": "read_chunk_size",
        "type": "int"
      }
    ]
  },
  "HTTPRequest": {
    "methods": [
      {
        "name": "cancel_request",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_body_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_downloaded_bytes",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_http_client_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "request",
        "parameters": [
          {
            "name": "url",
            "type": "String"
          },
          {
            "name": "custom_headers",
            "type": "PackedStringArray"
          },
          {
            "name": "method",
            "type": "int"
          },
          {
            "name": "request_data",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "request_raw",
        "parameters": [
          {
            "name": "url",
            "type": "String"
          },
          {
            "name": "custom_headers",
            "type": "PackedStringArray"
          },
          {
            "name": "method",
            "type": "int"
          },
          {
            "name": "request_data_raw",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_http_proxy",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_https_proxy",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tls_options",
        "parameters": [
          {
            "name": "client_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "HTTPRequest",
    "parent": "Node",
    "properties": [
      {
        "name": "accept_gzip",
        "type": "bool"
      },
      {
        "name": "body_size_limit",
        "type": "int"
      },
      {
        "name": "download_chunk_size",
        "type": "int"
      },
      {
        "name": "download_file",
        "type": "String"
      },
      {
        "name": "max_redirects",
        "type": "int"
      },
      {
        "name": "timeout",
        "type": "float"
      },
      {
        "name": "use_threads",
        "type": "bool"
      }
    ]
  },
  "HashingContext": {
    "methods": [
      {
        "name": "finish",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "chunk",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "HashingContext",
    "parent": "RefCounted",
    "properties": []
  },
  "HeightMapShape3D": {
    "methods": [
      {
        "name": "get_max_height",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_min_height",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "update_map_data_from_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "height_min",
            "type": "float"
          },
          {
            "name": "height_max",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "HeightMapShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "map_data",
        "type": "PackedFloat32Array"
      },
      {
        "name": "map_depth",
        "type": "int"
      },
      {
        "name": "map_width",
        "type": "int"
      }
    ]
  },
  "HingeJoint3D": {
    "methods": [
      {
        "name": "get_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "HingeJoint3D",
    "parent": "Joint3D",
    "properties": [
      {
        "name": "angular_limit/bias",
        "type": "float"
      },
      {
        "name": "angular_limit/enable",
        "type": "bool"
      },
      {
        "name": "angular_limit/lower",
        "type": "float"
      },
      {
        "name": "angular_limit/relaxation",
        "type": "float"
      },
      {
        "name": "angular_limit/softness",
        "type": "float"
      },
      {
        "name": "angular_limit/upper",
        "type": "float"
      },
      {
        "name": "motor/enable",
        "type": "bool"
      },
      {
        "name": "motor/max_impulse",
        "type": "float"
      },
      {
        "name": "motor/target_velocity",
        "type": "float"
      },
      {
        "name": "params/bias",
        "type": "float"
      }
    ]
  },
  "IP": {
    "methods": [
      {
        "name": "clear_cache",
        "parameters": [
          {
            "name": "hostname",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_resolve_item",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_local_addresses",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_local_interfaces",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_resolve_item_address",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_resolve_item_addresses",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_resolve_item_status",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "resolve_hostname",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "ip_type",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "resolve_hostname_addresses",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "ip_type",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "resolve_hostname_queue_item",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "ip_type",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "IP",
    "parent": "Object",
    "properties": []
  },
  "Image": {
    "methods": [
      {
        "name": "adjust_bcs",
        "parameters": [
          {
            "name": "brightness",
            "type": "float"
          },
          {
            "name": "contrast",
            "type": "float"
          },
          {
            "name": "saturation",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blend_rect",
        "parameters": [
          {
            "name": "src",
            "type": "Image"
          },
          {
            "name": "src_rect",
            "type": "Rect2i"
          },
          {
            "name": "dst",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blend_rect_mask",
        "parameters": [
          {
            "name": "src",
            "type": "Image"
          },
          {
            "name": "mask",
            "type": "Image"
          },
          {
            "name": "src_rect",
            "type": "Rect2i"
          },
          {
            "name": "dst",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blit_rect",
        "parameters": [
          {
            "name": "src",
            "type": "Image"
          },
          {
            "name": "src_rect",
            "type": "Rect2i"
          },
          {
            "name": "dst",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "blit_rect_mask",
        "parameters": [
          {
            "name": "src",
            "type": "Image"
          },
          {
            "name": "mask",
            "type": "Image"
          },
          {
            "name": "src_rect",
            "type": "Rect2i"
          },
          {
            "name": "dst",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bump_map_to_normal_map",
        "parameters": [
          {
            "name": "bump_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_mipmaps",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "compress",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "source",
            "type": "int"
          },
          {
            "name": "astc_format",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "compress_from_channels",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "channels",
            "type": "int"
          },
          {
            "name": "astc_format",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "compute_image_metrics",
        "parameters": [
          {
            "name": "compared_image",
            "type": "Image"
          },
          {
            "name": "use_luma",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "convert",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "copy_from",
        "parameters": [
          {
            "name": "src",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "use_mipmaps",
            "type": "bool"
          },
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "create_empty",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "use_mipmaps",
            "type": "bool"
          },
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "create_from_data",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "use_mipmaps",
            "type": "bool"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "crop",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decompress",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "detect_alpha",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "detect_used_channels",
        "parameters": [
          {
            "name": "source",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fill_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2i"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fix_alpha_edges",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "flip_x",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "flip_y",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "generate_mipmaps",
        "parameters": [
          {
            "name": "renormalize",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_data",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_data_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_mipmap_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_mipmap_offset",
        "parameters": [
          {
            "name": "mipmap",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_pixel",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_pixelv",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2i"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_region",
        "parameters": [
          {
            "name": "region",
            "type": "Rect2i"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_used_rect",
        "parameters": [],
        "return_type": "Rect2i"
      },
      {
        "name": "get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_mipmaps",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_compressed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_invisible",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "linear_to_srgb",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_bmp_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_from_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "load_jpg_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_ktx_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_png_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_svg_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_svg_from_string",
        "parameters": [
          {
            "name": "svg_str",
            "type": "String"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_tga_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_webp_from_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "normal_map_to_xy",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "premultiply_alpha",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "interpolation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize_to_po2",
        "parameters": [
          {
            "name": "square",
            "type": "bool"
          },
          {
            "name": "interpolation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rgbe_to_srgb",
        "parameters": [],
        "return_type": "Image"
      },
      {
        "name": "rotate_90",
        "parameters": [
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate_180",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "save_exr",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "grayscale",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_exr_to_buffer",
        "parameters": [
          {
            "name": "grayscale",
            "type": "bool"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "save_jpg",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "quality",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_jpg_to_buffer",
        "parameters": [
          {
            "name": "quality",
            "type": "float"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "save_png",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_png_to_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "save_webp",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "lossy",
            "type": "bool"
          },
          {
            "name": "quality",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_webp_to_buffer",
        "parameters": [
          {
            "name": "lossy",
            "type": "bool"
          },
          {
            "name": "quality",
            "type": "float"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "set_data",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "use_mipmaps",
            "type": "bool"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_pixel",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_pixelv",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2i"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shrink_x2",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "srgb_to_linear",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Image",
    "parent": "Resource",
    "properties": [
      {
        "name": "data",
        "type": "Dictionary"
      }
    ]
  },
  "ImageFormatLoader": {
    "methods": [],
    "name": "ImageFormatLoader",
    "parent": "RefCounted",
    "properties": []
  },
  "ImageFormatLoaderExtension": {
    "methods": [
      {
        "name": "_get_recognized_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_load_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "fileaccess",
            "type": "FileAccess"
          },
          {
            "name": "flags",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_format_loader",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_format_loader",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "ImageFormatLoaderExtension",
    "parent": "ImageFormatLoader",
    "properties": []
  },
  "ImageTexture": {
    "methods": [
      {
        "name": "create_from_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "ImageTexture"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_size_override",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ImageTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "ImageTexture3D": {
    "methods": [
      {
        "name": "create",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "depth",
            "type": "int"
          },
          {
            "name": "use_mipmaps",
            "type": "bool"
          },
          {
            "name": "data",
            "type": "Image[]"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "data",
            "type": "Image[]"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ImageTexture3D",
    "parent": "Texture3D",
    "properties": []
  },
  "ImageTextureLayered": {
    "methods": [
      {
        "name": "create_from_images",
        "parameters": [
          {
            "name": "images",
            "type": "Image[]"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "update_layer",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ImageTextureLayered",
    "parent": "TextureLayered",
    "properties": []
  },
  "ImmediateMesh": {
    "methods": [
      {
        "name": "clear_surfaces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "surface_add_vertex",
        "parameters": [
          {
            "name": "vertex",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_add_vertex_2d",
        "parameters": [
          {
            "name": "vertex",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_begin",
        "parameters": [
          {
            "name": "primitive",
            "type": "int"
          },
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "surface_set_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_set_normal",
        "parameters": [
          {
            "name": "normal",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_set_tangent",
        "parameters": [
          {
            "name": "tangent",
            "type": "Plane"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_set_uv",
        "parameters": [
          {
            "name": "uv",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "surface_set_uv2",
        "parameters": [
          {
            "name": "uv2",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ImmediateMesh",
    "parent": "Mesh",
    "properties": []
  },
  "ImporterMesh": {
    "methods": [
      {
        "name": "add_blend_shape",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_surface",
        "parameters": [
          {
            "name": "primitive",
            "type": "int"
          },
          {
            "name": "arrays",
            "type": "Array"
          },
          {
            "name": "blend_shapes",
            "type": "Array[]"
          },
          {
            "name": "lods",
            "type": "Dictionary"
          },
          {
            "name": "material",
            "type": "Material"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "generate_lods",
        "parameters": [
          {
            "name": "normal_merge_angle",
            "type": "float"
          },
          {
            "name": "normal_split_angle",
            "type": "float"
          },
          {
            "name": "bone_transform_array",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_blend_shape_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_shape_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_shape_name",
        "parameters": [
          {
            "name": "blend_shape_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_lightmap_size_hint",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_mesh",
        "parameters": [
          {
            "name": "base_mesh",
            "type": "ArrayMesh"
          }
        ],
        "return_type": "ArrayMesh"
      },
      {
        "name": "get_surface_arrays",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_surface_blend_shape_arrays",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          },
          {
            "name": "blend_shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_surface_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_surface_format",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_surface_lod_count",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_surface_lod_indices",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          },
          {
            "name": "lod_idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_surface_lod_size",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          },
          {
            "name": "lod_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_surface_material",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "Material"
      },
      {
        "name": "get_surface_name",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_surface_primitive_type",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_blend_shape_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_lightmap_size_hint",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_surface_material",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          },
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_surface_name",
        "parameters": [
          {
            "name": "surface_idx",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ImporterMesh",
    "parent": "Resource",
    "properties": []
  },
  "ImporterMeshInstance3D": {
    "methods": [],
    "name": "ImporterMeshInstance3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "cast_shadow",
        "type": "int"
      },
      {
        "name": "layer_mask",
        "type": "int"
      },
      {
        "name": "mesh",
        "type": "ImporterMesh"
      },
      {
        "name": "skeleton_path",
        "type": "NodePath"
      },
      {
        "name": "skin",
        "type": "Skin"
      },
      {
        "name": "visibility_range_begin",
        "type": "float"
      },
      {
        "name": "visibility_range_begin_margin",
        "type": "float"
      },
      {
        "name": "visibility_range_end",
        "type": "float"
      },
      {
        "name": "visibility_range_end_margin",
        "type": "float"
      },
      {
        "name": "visibility_range_fade_mode",
        "type": "int"
      }
    ]
  },
  "Input": {
    "methods": [
      {
        "name": "action_press",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "strength",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "action_release",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_joy_mapping",
        "parameters": [
          {
            "name": "mapping",
            "type": "String"
          },
          {
            "name": "update_existing",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "flush_buffered_events",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_accelerometer",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_action_raw_strength",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_action_strength",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_axis",
        "parameters": [
          {
            "name": "negative_action",
            "type": "StringName"
          },
          {
            "name": "positive_action",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_connected_joypads",
        "parameters": [],
        "return_type": "int[]"
      },
      {
        "name": "get_current_cursor_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_gravity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_gyroscope",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_joy_axis",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_joy_guid",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_joy_info",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_joy_name",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_joy_vibration_duration",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_joy_vibration_strength",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_last_mouse_screen_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_last_mouse_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_magnetometer",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_mouse_button_mask",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_vector",
        "parameters": [
          {
            "name": "negative_x",
            "type": "StringName"
          },
          {
            "name": "positive_x",
            "type": "StringName"
          },
          {
            "name": "negative_y",
            "type": "StringName"
          },
          {
            "name": "positive_y",
            "type": "StringName"
          },
          {
            "name": "deadzone",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "is_action_just_pressed",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_action_just_released",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_action_pressed",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_anything_pressed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_joy_button_pressed",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          },
          {
            "name": "button",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_joy_known",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_key_label_pressed",
        "parameters": [
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_key_pressed",
        "parameters": [
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_mouse_button_pressed",
        "parameters": [
          {
            "name": "button",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_physical_key_pressed",
        "parameters": [
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "parse_input_event",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_joy_mapping",
        "parameters": [
          {
            "name": "guid",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_accelerometer",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_mouse_cursor",
        "parameters": [
          {
            "name": "image",
            "type": "Resource"
          },
          {
            "name": "shape",
            "type": "int"
          },
          {
            "name": "hotspot",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_default_cursor_shape",
        "parameters": [
          {
            "name": "shape",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gravity",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gyroscope",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_magnetometer",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "should_ignore_device",
        "parameters": [
          {
            "name": "vendor_id",
            "type": "int"
          },
          {
            "name": "product_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "start_joy_vibration",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          },
          {
            "name": "weak_magnitude",
            "type": "float"
          },
          {
            "name": "strong_magnitude",
            "type": "float"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop_joy_vibration",
        "parameters": [
          {
            "name": "device",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "vibrate_handheld",
        "parameters": [
          {
            "name": "duration_ms",
            "type": "int"
          },
          {
            "name": "amplitude",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "warp_mouse",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Input",
    "parent": "Object",
    "properties": [
      {
        "name": "emulate_mouse_from_touch",
        "type": "bool"
      },
      {
        "name": "emulate_touch_from_mouse",
        "type": "bool"
      },
      {
        "name": "mouse_mode",
        "type": "int"
      },
      {
        "name": "use_accumulated_input",
        "type": "bool"
      }
    ]
  },
  "InputEvent": {
    "methods": [
      {
        "name": "accumulate",
        "parameters": [
          {
            "name": "with_event",
            "type": "InputEvent"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "as_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_action_strength",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "is_action",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_action_pressed",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "allow_echo",
            "type": "bool"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_action_released",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_action_type",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_canceled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_echo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_match",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_pressed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_released",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "xformed_by",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform2D"
          },
          {
            "name": "local_ofs",
            "type": "Vector2"
          }
        ],
        "return_type": "InputEvent"
      }
    ],
    "name": "InputEvent",
    "parent": "Resource",
    "properties": [
      {
        "name": "device",
        "type": "int"
      }
    ]
  },
  "InputEventAction": {
    "methods": [],
    "name": "InputEventAction",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "action",
        "type": "StringName"
      },
      {
        "name": "event_index",
        "type": "int"
      },
      {
        "name": "pressed",
        "type": "bool"
      },
      {
        "name": "strength",
        "type": "float"
      }
    ]
  },
  "InputEventFromWindow": {
    "methods": [],
    "name": "InputEventFromWindow",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "window_id",
        "type": "int"
      }
    ]
  },
  "InputEventGesture": {
    "methods": [],
    "name": "InputEventGesture",
    "parent": "InputEventWithModifiers",
    "properties": [
      {
        "name": "position",
        "type": "Vector2"
      }
    ]
  },
  "InputEventJoypadButton": {
    "methods": [],
    "name": "InputEventJoypadButton",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "button_index",
        "type": "int"
      },
      {
        "name": "pressed",
        "type": "bool"
      },
      {
        "name": "pressure",
        "type": "float"
      }
    ]
  },
  "InputEventJoypadMotion": {
    "methods": [],
    "name": "InputEventJoypadMotion",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "axis",
        "type": "int"
      },
      {
        "name": "axis_value",
        "type": "float"
      }
    ]
  },
  "InputEventKey": {
    "methods": [
      {
        "name": "as_text_key_label",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "as_text_keycode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "as_text_location",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "as_text_physical_keycode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_key_label_with_modifiers",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_keycode_with_modifiers",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_physical_keycode_with_modifiers",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "InputEventKey",
    "parent": "InputEventWithModifiers",
    "properties": [
      {
        "name": "echo",
        "type": "bool"
      },
      {
        "name": "key_label",
        "type": "int"
      },
      {
        "name": "keycode",
        "type": "int"
      },
      {
        "name": "location",
        "type": "int"
      },
      {
        "name": "physical_keycode",
        "type": "int"
      },
      {
        "name": "pressed",
        "type": "bool"
      },
      {
        "name": "unicode",
        "type": "int"
      }
    ]
  },
  "InputEventMIDI": {
    "methods": [],
    "name": "InputEventMIDI",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "channel",
        "type": "int"
      },
      {
        "name": "controller_number",
        "type": "int"
      },
      {
        "name": "controller_value",
        "type": "int"
      },
      {
        "name": "instrument",
        "type": "int"
      },
      {
        "name": "message",
        "type": "int"
      },
      {
        "name": "pitch",
        "type": "int"
      },
      {
        "name": "pressure",
        "type": "int"
      },
      {
        "name": "velocity",
        "type": "int"
      }
    ]
  },
  "InputEventMagnifyGesture": {
    "methods": [],
    "name": "InputEventMagnifyGesture",
    "parent": "InputEventGesture",
    "properties": [
      {
        "name": "factor",
        "type": "float"
      }
    ]
  },
  "InputEventMouse": {
    "methods": [],
    "name": "InputEventMouse",
    "parent": "InputEventWithModifiers",
    "properties": [
      {
        "name": "button_mask",
        "type": "int"
      },
      {
        "name": "global_position",
        "type": "Vector2"
      },
      {
        "name": "position",
        "type": "Vector2"
      }
    ]
  },
  "InputEventMouseButton": {
    "methods": [],
    "name": "InputEventMouseButton",
    "parent": "InputEventMouse",
    "properties": [
      {
        "name": "button_index",
        "type": "int"
      },
      {
        "name": "canceled",
        "type": "bool"
      },
      {
        "name": "double_click",
        "type": "bool"
      },
      {
        "name": "factor",
        "type": "float"
      },
      {
        "name": "pressed",
        "type": "bool"
      }
    ]
  },
  "InputEventMouseMotion": {
    "methods": [],
    "name": "InputEventMouseMotion",
    "parent": "InputEventMouse",
    "properties": [
      {
        "name": "pen_inverted",
        "type": "bool"
      },
      {
        "name": "pressure",
        "type": "float"
      },
      {
        "name": "relative",
        "type": "Vector2"
      },
      {
        "name": "screen_relative",
        "type": "Vector2"
      },
      {
        "name": "screen_velocity",
        "type": "Vector2"
      },
      {
        "name": "tilt",
        "type": "Vector2"
      },
      {
        "name": "velocity",
        "type": "Vector2"
      }
    ]
  },
  "InputEventPanGesture": {
    "methods": [],
    "name": "InputEventPanGesture",
    "parent": "InputEventGesture",
    "properties": [
      {
        "name": "delta",
        "type": "Vector2"
      }
    ]
  },
  "InputEventScreenDrag": {
    "methods": [],
    "name": "InputEventScreenDrag",
    "parent": "InputEventFromWindow",
    "properties": [
      {
        "name": "index",
        "type": "int"
      },
      {
        "name": "pen_inverted",
        "type": "bool"
      },
      {
        "name": "position",
        "type": "Vector2"
      },
      {
        "name": "pressure",
        "type": "float"
      },
      {
        "name": "relative",
        "type": "Vector2"
      },
      {
        "name": "screen_relative",
        "type": "Vector2"
      },
      {
        "name": "screen_velocity",
        "type": "Vector2"
      },
      {
        "name": "tilt",
        "type": "Vector2"
      },
      {
        "name": "velocity",
        "type": "Vector2"
      }
    ]
  },
  "InputEventScreenTouch": {
    "methods": [],
    "name": "InputEventScreenTouch",
    "parent": "InputEventFromWindow",
    "properties": [
      {
        "name": "canceled",
        "type": "bool"
      },
      {
        "name": "double_tap",
        "type": "bool"
      },
      {
        "name": "index",
        "type": "int"
      },
      {
        "name": "position",
        "type": "Vector2"
      },
      {
        "name": "pressed",
        "type": "bool"
      }
    ]
  },
  "InputEventShortcut": {
    "methods": [],
    "name": "InputEventShortcut",
    "parent": "InputEvent",
    "properties": [
      {
        "name": "shortcut",
        "type": "Shortcut"
      }
    ]
  },
  "InputEventWithModifiers": {
    "methods": [
      {
        "name": "get_modifiers_mask",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_command_or_control_pressed",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "InputEventWithModifiers",
    "parent": "InputEventFromWindow",
    "properties": [
      {
        "name": "alt_pressed",
        "type": "bool"
      },
      {
        "name": "command_or_control_autoremap",
        "type": "bool"
      },
      {
        "name": "ctrl_pressed",
        "type": "bool"
      },
      {
        "name": "meta_pressed",
        "type": "bool"
      },
      {
        "name": "shift_pressed",
        "type": "bool"
      }
    ]
  },
  "InputMap": {
    "methods": [
      {
        "name": "action_add_event",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "action_erase_event",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "action_erase_events",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "action_get_deadzone",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "action_get_events",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "InputEvent[]"
      },
      {
        "name": "action_has_event",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "action_set_deadzone",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "deadzone",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_action",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "deadzone",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_action",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "event_is_action",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "action",
            "type": "StringName"
          },
          {
            "name": "exact_match",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_actions",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "has_action",
        "parameters": [
          {
            "name": "action",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load_from_project_settings",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "InputMap",
    "parent": "Object",
    "properties": []
  },
  "InstancePlaceholder": {
    "methods": [
      {
        "name": "create_instance",
        "parameters": [
          {
            "name": "replace",
            "type": "bool"
          },
          {
            "name": "custom_scene",
            "type": "PackedScene"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_instance_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_stored_values",
        "parameters": [
          {
            "name": "with_order",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      }
    ],
    "name": "InstancePlaceholder",
    "parent": "Node",
    "properties": []
  },
  "IntervalTweener": {
    "methods": [],
    "name": "IntervalTweener",
    "parent": "Tweener",
    "properties": []
  },
  "ItemList": {
    "methods": [
      {
        "name": "add_icon_item",
        "parameters": [
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "selectable",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_item",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "selectable",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "deselect",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "deselect_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "ensure_current_is_visible",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_update_list_size",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_h_scroll_bar",
        "parameters": [],
        "return_type": "HScrollBar"
      },
      {
        "name": "get_item_at_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "exact",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_auto_translate_mode",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_custom_bg_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_item_custom_fg_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_item_icon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_item_icon_modulate",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_item_icon_region",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_item_language",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_metadata",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_item_rect",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "expand",
            "type": "bool"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_item_text",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_text_direction",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_tooltip",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_selected_items",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_v_scroll_bar",
        "parameters": [],
        "return_type": "VScrollBar"
      },
      {
        "name": "is_anything_selected",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_item_disabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_icon_transposed",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_selectable",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_tooltip_enabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_selected",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "move_item",
        "parameters": [
          {
            "name": "from_idx",
            "type": "int"
          },
          {
            "name": "to_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_item",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "single",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_auto_translate_mode",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_custom_bg_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "custom_bg_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_custom_fg_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "custom_fg_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_disabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon_modulate",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon_region",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon_transposed",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "transposed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_language",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_metadata",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_selectable",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "selectable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text_direction",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tooltip",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tooltip_enabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sort_items_by_text",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "ItemList",
    "parent": "Control",
    "properties": [
      {
        "name": "allow_reselect",
        "type": "bool"
      },
      {
        "name": "allow_rmb_select",
        "type": "bool"
      },
      {
        "name": "allow_search",
        "type": "bool"
      },
      {
        "name": "auto_height",
        "type": "bool"
      },
      {
        "name": "auto_width",
        "type": "bool"
      },
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "fixed_column_width",
        "type": "int"
      },
      {
        "name": "fixed_icon_size",
        "type": "Vector2i"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "icon_mode",
        "type": "int"
      },
      {
        "name": "icon_scale",
        "type": "float"
      },
      {
        "name": "item_count",
        "type": "int"
      },
      {
        "name": "max_columns",
        "type": "int"
      },
      {
        "name": "max_text_lines",
        "type": "int"
      },
      {
        "name": "same_column_width",
        "type": "bool"
      },
      {
        "name": "select_mode",
        "type": "int"
      },
      {
        "name": "text_overrun_behavior",
        "type": "int"
      },
      {
        "name": "wraparound_items",
        "type": "bool"
      }
    ]
  },
  "JNISingleton": {
    "methods": [],
    "name": "JNISingleton",
    "parent": "Object",
    "properties": []
  },
  "JSON": {
    "methods": [
      {
        "name": "from_native",
        "parameters": [
          {
            "name": "variant",
            "type": "Variant"
          },
          {
            "name": "full_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_error_line",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_error_message",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_parsed_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "parse",
        "parameters": [
          {
            "name": "json_text",
            "type": "String"
          },
          {
            "name": "keep_text",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "parse_string",
        "parameters": [
          {
            "name": "json_string",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "stringify",
        "parameters": [
          {
            "name": "data",
            "type": "Variant"
          },
          {
            "name": "indent",
            "type": "String"
          },
          {
            "name": "sort_keys",
            "type": "bool"
          },
          {
            "name": "full_precision",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "to_native",
        "parameters": [
          {
            "name": "json",
            "type": "Variant"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      }
    ],
    "name": "JSON",
    "parent": "Resource",
    "properties": [
      {
        "name": "data",
        "type": "Variant"
      }
    ]
  },
  "JSONRPC": {
    "methods": [
      {
        "name": "make_notification",
        "parameters": [
          {
            "name": "method",
            "type": "String"
          },
          {
            "name": "params",
            "type": "Variant"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "make_request",
        "parameters": [
          {
            "name": "method",
            "type": "String"
          },
          {
            "name": "params",
            "type": "Variant"
          },
          {
            "name": "id",
            "type": "Variant"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "make_response",
        "parameters": [
          {
            "name": "result",
            "type": "Variant"
          },
          {
            "name": "id",
            "type": "Variant"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "make_response_error",
        "parameters": [
          {
            "name": "code",
            "type": "int"
          },
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "id",
            "type": "Variant"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "process_action",
        "parameters": [
          {
            "name": "action",
            "type": "Variant"
          },
          {
            "name": "recurse",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "process_string",
        "parameters": [
          {
            "name": "action",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "set_scope",
        "parameters": [
          {
            "name": "scope",
            "type": "String"
          },
          {
            "name": "target",
            "type": "Object"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "JSONRPC",
    "parent": "Object",
    "properties": []
  },
  "JavaClass": {
    "methods": [
      {
        "name": "get_java_class_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_java_method_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_java_parent_class",
        "parameters": [],
        "return_type": "JavaClass"
      }
    ],
    "name": "JavaClass",
    "parent": "RefCounted",
    "properties": []
  },
  "JavaClassWrapper": {
    "methods": [
      {
        "name": "get_exception",
        "parameters": [],
        "return_type": "JavaObject"
      },
      {
        "name": "wrap",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "JavaClass"
      }
    ],
    "name": "JavaClassWrapper",
    "parent": "Object",
    "properties": []
  },
  "JavaObject": {
    "methods": [
      {
        "name": "get_java_class",
        "parameters": [],
        "return_type": "JavaClass"
      }
    ],
    "name": "JavaObject",
    "parent": "RefCounted",
    "properties": []
  },
  "JavaScriptBridge": {
    "methods": [
      {
        "name": "create_callback",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "JavaScriptObject"
      },
      {
        "name": "create_object",
        "parameters": [
          {
            "name": "object",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "download_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "mime",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "eval",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          },
          {
            "name": "use_global_execution_context",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "force_fs_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_interface",
        "parameters": [
          {
            "name": "interface",
            "type": "String"
          }
        ],
        "return_type": "JavaScriptObject"
      },
      {
        "name": "is_js_buffer",
        "parameters": [
          {
            "name": "javascript_object",
            "type": "JavaScriptObject"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "js_buffer_to_packed_byte_array",
        "parameters": [
          {
            "name": "javascript_buffer",
            "type": "JavaScriptObject"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "pwa_needs_update",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "pwa_update",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "JavaScriptBridge",
    "parent": "Object",
    "properties": []
  },
  "JavaScriptObject": {
    "methods": [],
    "name": "JavaScriptObject",
    "parent": "RefCounted",
    "properties": []
  },
  "Joint2D": {
    "methods": [
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      }
    ],
    "name": "Joint2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "bias",
        "type": "float"
      },
      {
        "name": "disable_collision",
        "type": "bool"
      },
      {
        "name": "node_a",
        "type": "NodePath"
      },
      {
        "name": "node_b",
        "type": "NodePath"
      }
    ]
  },
  "Joint3D": {
    "methods": [
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      }
    ],
    "name": "Joint3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "exclude_nodes_from_collision",
        "type": "bool"
      },
      {
        "name": "node_a",
        "type": "NodePath"
      },
      {
        "name": "node_b",
        "type": "NodePath"
      },
      {
        "name": "solver_priority",
        "type": "int"
      }
    ]
  },
  "KinematicCollision2D": {
    "methods": [
      {
        "name": "get_angle",
        "parameters": [
          {
            "name": "up_direction",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_collider",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_collider_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collider_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_collider_shape_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collider_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_depth",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_local_shape",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_normal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_remainder",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_travel",
        "parameters": [],
        "return_type": "Vector2"
      }
    ],
    "name": "KinematicCollision2D",
    "parent": "RefCounted",
    "properties": []
  },
  "KinematicCollision3D": {
    "methods": [
      {
        "name": "get_angle",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          },
          {
            "name": "up_direction",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_collider",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_collider_id",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collider_rid",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_collider_shape_index",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collider_velocity",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_depth",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_local_shape",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_normal",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_position",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_remainder",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_travel",
        "parameters": [],
        "return_type": "Vector3"
      }
    ],
    "name": "KinematicCollision3D",
    "parent": "RefCounted",
    "properties": []
  },
  "Label": {
    "methods": [
      {
        "name": "get_character_bounds",
        "parameters": [
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_height",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_total_character_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_visible_line_count",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "Label",
    "parent": "Control",
    "properties": [
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "clip_text",
        "type": "bool"
      },
      {
        "name": "ellipsis_char",
        "type": "String"
      },
      {
        "name": "horizontal_alignment",
        "type": "int"
      },
      {
        "name": "justification_flags",
        "type": "int"
      },
      {
        "name": "label_settings",
        "type": "LabelSettings"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "lines_skipped",
        "type": "int"
      },
      {
        "name": "max_lines_visible",
        "type": "int"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "paragraph_separator",
        "type": "String"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "tab_stops",
        "type": "PackedFloat32Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "text_overrun_behavior",
        "type": "int"
      },
      {
        "name": "uppercase",
        "type": "bool"
      },
      {
        "name": "vertical_alignment",
        "type": "int"
      },
      {
        "name": "visible_characters",
        "type": "int"
      },
      {
        "name": "visible_characters_behavior",
        "type": "int"
      },
      {
        "name": "visible_ratio",
        "type": "float"
      }
    ]
  },
  "Label3D": {
    "methods": [
      {
        "name": "generate_triangle_mesh",
        "parameters": [],
        "return_type": "TriangleMesh"
      },
      {
        "name": "get_draw_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_draw_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Label3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "alpha_antialiasing_edge",
        "type": "float"
      },
      {
        "name": "alpha_antialiasing_mode",
        "type": "int"
      },
      {
        "name": "alpha_cut",
        "type": "int"
      },
      {
        "name": "alpha_hash_scale",
        "type": "float"
      },
      {
        "name": "alpha_scissor_threshold",
        "type": "float"
      },
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "billboard",
        "type": "int"
      },
      {
        "name": "cast_shadow",
        "type": "int"
      },
      {
        "name": "double_sided",
        "type": "bool"
      },
      {
        "name": "fixed_size",
        "type": "bool"
      },
      {
        "name": "font",
        "type": "Font"
      },
      {
        "name": "font_size",
        "type": "int"
      },
      {
        "name": "gi_mode",
        "type": "int"
      },
      {
        "name": "horizontal_alignment",
        "type": "int"
      },
      {
        "name": "justification_flags",
        "type": "int"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "line_spacing",
        "type": "float"
      },
      {
        "name": "modulate",
        "type": "Color"
      },
      {
        "name": "no_depth_test",
        "type": "bool"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "outline_modulate",
        "type": "Color"
      },
      {
        "name": "outline_render_priority",
        "type": "int"
      },
      {
        "name": "outline_size",
        "type": "int"
      },
      {
        "name": "pixel_size",
        "type": "float"
      },
      {
        "name": "render_priority",
        "type": "int"
      },
      {
        "name": "shaded",
        "type": "bool"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "uppercase",
        "type": "bool"
      },
      {
        "name": "vertical_alignment",
        "type": "int"
      },
      {
        "name": "width",
        "type": "float"
      }
    ]
  },
  "LabelSettings": {
    "methods": [],
    "name": "LabelSettings",
    "parent": "Resource",
    "properties": [
      {
        "name": "font",
        "type": "Font"
      },
      {
        "name": "font_color",
        "type": "Color"
      },
      {
        "name": "font_size",
        "type": "int"
      },
      {
        "name": "line_spacing",
        "type": "float"
      },
      {
        "name": "outline_color",
        "type": "Color"
      },
      {
        "name": "outline_size",
        "type": "int"
      },
      {
        "name": "paragraph_spacing",
        "type": "float"
      },
      {
        "name": "shadow_color",
        "type": "Color"
      },
      {
        "name": "shadow_offset",
        "type": "Vector2"
      },
      {
        "name": "shadow_size",
        "type": "int"
      }
    ]
  },
  "Light2D": {
    "methods": [
      {
        "name": "get_height",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "set_height",
        "parameters": [
          {
            "name": "height",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Light2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "blend_mode",
        "type": "int"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "editor_only",
        "type": "bool"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "energy",
        "type": "float"
      },
      {
        "name": "range_item_cull_mask",
        "type": "int"
      },
      {
        "name": "range_layer_max",
        "type": "int"
      },
      {
        "name": "range_layer_min",
        "type": "int"
      },
      {
        "name": "range_z_max",
        "type": "int"
      },
      {
        "name": "range_z_min",
        "type": "int"
      },
      {
        "name": "shadow_color",
        "type": "Color"
      },
      {
        "name": "shadow_enabled",
        "type": "bool"
      },
      {
        "name": "shadow_filter",
        "type": "int"
      },
      {
        "name": "shadow_filter_smooth",
        "type": "float"
      },
      {
        "name": "shadow_item_cull_mask",
        "type": "int"
      }
    ]
  },
  "Light3D": {
    "methods": [
      {
        "name": "get_correlated_color",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Light3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "distance_fade_begin",
        "type": "float"
      },
      {
        "name": "distance_fade_enabled",
        "type": "bool"
      },
      {
        "name": "distance_fade_length",
        "type": "float"
      },
      {
        "name": "distance_fade_shadow",
        "type": "float"
      },
      {
        "name": "editor_only",
        "type": "bool"
      },
      {
        "name": "light_angular_distance",
        "type": "float"
      },
      {
        "name": "light_bake_mode",
        "type": "int"
      },
      {
        "name": "light_color",
        "type": "Color"
      },
      {
        "name": "light_cull_mask",
        "type": "int"
      },
      {
        "name": "light_energy",
        "type": "float"
      },
      {
        "name": "light_indirect_energy",
        "type": "float"
      },
      {
        "name": "light_intensity_lumens",
        "type": "float"
      },
      {
        "name": "light_intensity_lux",
        "type": "float"
      },
      {
        "name": "light_negative",
        "type": "bool"
      },
      {
        "name": "light_projector",
        "type": "Texture2D"
      },
      {
        "name": "light_size",
        "type": "float"
      },
      {
        "name": "light_specular",
        "type": "float"
      },
      {
        "name": "light_temperature",
        "type": "float"
      },
      {
        "name": "light_volumetric_fog_energy",
        "type": "float"
      },
      {
        "name": "shadow_bias",
        "type": "float"
      },
      {
        "name": "shadow_blur",
        "type": "float"
      },
      {
        "name": "shadow_caster_mask",
        "type": "int"
      },
      {
        "name": "shadow_enabled",
        "type": "bool"
      },
      {
        "name": "shadow_normal_bias",
        "type": "float"
      },
      {
        "name": "shadow_opacity",
        "type": "float"
      },
      {
        "name": "shadow_reverse_cull_face",
        "type": "bool"
      },
      {
        "name": "shadow_transmittance_bias",
        "type": "float"
      }
    ]
  },
  "LightOccluder2D": {
    "methods": [],
    "name": "LightOccluder2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "occluder",
        "type": "OccluderPolygon2D"
      },
      {
        "name": "occluder_light_mask",
        "type": "int"
      },
      {
        "name": "sdf_collision",
        "type": "bool"
      }
    ]
  },
  "LightmapGI": {
    "methods": [],
    "name": "LightmapGI",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "bias",
        "type": "float"
      },
      {
        "name": "bounce_indirect_energy",
        "type": "float"
      },
      {
        "name": "bounces",
        "type": "int"
      },
      {
        "name": "camera_attributes",
        "type": "CameraAttributes"
      },
      {
        "name": "denoiser_range",
        "type": "int"
      },
      {
        "name": "denoiser_strength",
        "type": "float"
      },
      {
        "name": "directional",
        "type": "bool"
      },
      {
        "name": "environment_custom_color",
        "type": "Color"
      },
      {
        "name": "environment_custom_energy",
        "type": "float"
      },
      {
        "name": "environment_custom_sky",
        "type": "Sky"
      },
      {
        "name": "environment_mode",
        "type": "int"
      },
      {
        "name": "generate_probes_subdiv",
        "type": "int"
      },
      {
        "name": "interior",
        "type": "bool"
      },
      {
        "name": "light_data",
        "type": "LightmapGIData"
      },
      {
        "name": "max_texture_size",
        "type": "int"
      },
      {
        "name": "quality",
        "type": "int"
      },
      {
        "name": "shadowmask_mode",
        "type": "int"
      },
      {
        "name": "supersampling",
        "type": "bool"
      },
      {
        "name": "supersampling_factor",
        "type": "float"
      },
      {
        "name": "texel_scale",
        "type": "float"
      },
      {
        "name": "use_denoiser",
        "type": "bool"
      },
      {
        "name": "use_texture_for_bounces",
        "type": "bool"
      }
    ]
  },
  "LightmapGIData": {
    "methods": [
      {
        "name": "add_user",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          },
          {
            "name": "uv_scale",
            "type": "Rect2"
          },
          {
            "name": "slice_index",
            "type": "int"
          },
          {
            "name": "sub_instance",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_users",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_user_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_user_path",
        "parameters": [
          {
            "name": "user_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "is_using_spherical_harmonics",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_uses_spherical_harmonics",
        "parameters": [
          {
            "name": "uses_spherical_harmonics",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "LightmapGIData",
    "parent": "Resource",
    "properties": [
      {
        "name": "light_texture",
        "type": "TextureLayered"
      },
      {
        "name": "lightmap_textures",
        "type": "TextureLayered[]"
      },
      {
        "name": "shadowmask_textures",
        "type": "TextureLayered[]"
      }
    ]
  },
  "LightmapProbe": {
    "methods": [],
    "name": "LightmapProbe",
    "parent": "Node3D",
    "properties": []
  },
  "Lightmapper": {
    "methods": [],
    "name": "Lightmapper",
    "parent": "RefCounted",
    "properties": []
  },
  "LightmapperRD": {
    "methods": [],
    "name": "LightmapperRD",
    "parent": "Lightmapper",
    "properties": []
  },
  "Line2D": {
    "methods": [
      {
        "name": "add_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_points",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_point_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_point_position",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "remove_point",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_position",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Line2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "antialiased",
        "type": "bool"
      },
      {
        "name": "begin_cap_mode",
        "type": "int"
      },
      {
        "name": "closed",
        "type": "bool"
      },
      {
        "name": "default_color",
        "type": "Color"
      },
      {
        "name": "end_cap_mode",
        "type": "int"
      },
      {
        "name": "gradient",
        "type": "Gradient"
      },
      {
        "name": "joint_mode",
        "type": "int"
      },
      {
        "name": "points",
        "type": "PackedVector2Array"
      },
      {
        "name": "round_precision",
        "type": "int"
      },
      {
        "name": "sharp_limit",
        "type": "float"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_mode",
        "type": "int"
      },
      {
        "name": "width",
        "type": "float"
      },
      {
        "name": "width_curve",
        "type": "Curve"
      }
    ]
  },
  "LineEdit": {
    "methods": [
      {
        "name": "apply_ime",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "cancel_ime",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "delete_char_at_caret",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "delete_text",
        "parameters": [
          {
            "name": "from_column",
            "type": "int"
          },
          {
            "name": "to_column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "deselect",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "edit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_menu",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_scroll_offset",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_selected_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_selection_from_column",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_selection_to_column",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_ime_text",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_redo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_selection",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_undo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "insert_text_at_caret",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "is_editing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_menu_visible",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "menu_option",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "unedit",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "LineEdit",
    "parent": "Control",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "caret_blink",
        "type": "bool"
      },
      {
        "name": "caret_blink_interval",
        "type": "float"
      },
      {
        "name": "caret_column",
        "type": "int"
      },
      {
        "name": "caret_force_displayed",
        "type": "bool"
      },
      {
        "name": "caret_mid_grapheme",
        "type": "bool"
      },
      {
        "name": "clear_button_enabled",
        "type": "bool"
      },
      {
        "name": "context_menu_enabled",
        "type": "bool"
      },
      {
        "name": "deselect_on_focus_loss_enabled",
        "type": "bool"
      },
      {
        "name": "drag_and_drop_selection_enabled",
        "type": "bool"
      },
      {
        "name": "draw_control_chars",
        "type": "bool"
      },
      {
        "name": "editable",
        "type": "bool"
      },
      {
        "name": "emoji_menu_enabled",
        "type": "bool"
      },
      {
        "name": "expand_to_text_length",
        "type": "bool"
      },
      {
        "name": "flat",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "keep_editing_on_text_submit",
        "type": "bool"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "max_length",
        "type": "int"
      },
      {
        "name": "middle_mouse_paste_enabled",
        "type": "bool"
      },
      {
        "name": "mouse_default_cursor_shape",
        "type": "int"
      },
      {
        "name": "placeholder_text",
        "type": "String"
      },
      {
        "name": "right_icon",
        "type": "Texture2D"
      },
      {
        "name": "secret",
        "type": "bool"
      },
      {
        "name": "secret_character",
        "type": "String"
      },
      {
        "name": "select_all_on_focus",
        "type": "bool"
      },
      {
        "name": "selecting_enabled",
        "type": "bool"
      },
      {
        "name": "shortcut_keys_enabled",
        "type": "bool"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "virtual_keyboard_enabled",
        "type": "bool"
      },
      {
        "name": "virtual_keyboard_type",
        "type": "int"
      }
    ]
  },
  "LinkButton": {
    "methods": [],
    "name": "LinkButton",
    "parent": "BaseButton",
    "properties": [
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "mouse_default_cursor_shape",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "underline",
        "type": "int"
      },
      {
        "name": "uri",
        "type": "String"
      }
    ]
  },
  "LookAtModifier3D": {
    "methods": [
      {
        "name": "get_interpolation_remaining",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_interpolating",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_target_within_limitation",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "LookAtModifier3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "bone",
        "type": "int"
      },
      {
        "name": "bone_name",
        "type": "String"
      },
      {
        "name": "duration",
        "type": "float"
      },
      {
        "name": "ease_type",
        "type": "int"
      },
      {
        "name": "forward_axis",
        "type": "int"
      },
      {
        "name": "origin_bone",
        "type": "int"
      },
      {
        "name": "origin_bone_name",
        "type": "String"
      },
      {
        "name": "origin_external_node",
        "type": "NodePath"
      },
      {
        "name": "origin_from",
        "type": "int"
      },
      {
        "name": "origin_offset",
        "type": "Vector3"
      },
      {
        "name": "origin_safe_margin",
        "type": "float"
      },
      {
        "name": "primary_damp_threshold",
        "type": "float"
      },
      {
        "name": "primary_limit_angle",
        "type": "float"
      },
      {
        "name": "primary_negative_damp_threshold",
        "type": "float"
      },
      {
        "name": "primary_negative_limit_angle",
        "type": "float"
      },
      {
        "name": "primary_positive_damp_threshold",
        "type": "float"
      },
      {
        "name": "primary_positive_limit_angle",
        "type": "float"
      },
      {
        "name": "primary_rotation_axis",
        "type": "int"
      },
      {
        "name": "secondary_damp_threshold",
        "type": "float"
      },
      {
        "name": "secondary_limit_angle",
        "type": "float"
      },
      {
        "name": "secondary_negative_damp_threshold",
        "type": "float"
      },
      {
        "name": "secondary_negative_limit_angle",
        "type": "float"
      },
      {
        "name": "secondary_positive_damp_threshold",
        "type": "float"
      },
      {
        "name": "secondary_positive_limit_angle",
        "type": "float"
      },
      {
        "name": "symmetry_limitation",
        "type": "bool"
      },
      {
        "name": "target_node",
        "type": "NodePath"
      },
      {
        "name": "transition_type",
        "type": "int"
      },
      {
        "name": "use_angle_limitation",
        "type": "bool"
      },
      {
        "name": "use_secondary_rotation",
        "type": "bool"
      }
    ]
  },
  "MainLoop": {
    "methods": [
      {
        "name": "_finalize",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_initialize",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_physics_process",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_process",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "MainLoop",
    "parent": "Object",
    "properties": []
  },
  "MarginContainer": {
    "methods": [],
    "name": "MarginContainer",
    "parent": "Container",
    "properties": []
  },
  "Marker2D": {
    "methods": [],
    "name": "Marker2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "gizmo_extents",
        "type": "float"
      }
    ]
  },
  "Marker3D": {
    "methods": [],
    "name": "Marker3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "gizmo_extents",
        "type": "float"
      }
    ]
  },
  "Marshalls": {
    "methods": [
      {
        "name": "base64_to_raw",
        "parameters": [
          {
            "name": "base64_str",
            "type": "String"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "base64_to_utf8",
        "parameters": [
          {
            "name": "base64_str",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "base64_to_variant",
        "parameters": [
          {
            "name": "base64_str",
            "type": "String"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "raw_to_base64",
        "parameters": [
          {
            "name": "array",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "utf8_to_base64",
        "parameters": [
          {
            "name": "utf8_str",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "variant_to_base64",
        "parameters": [
          {
            "name": "variant",
            "type": "Variant"
          },
          {
            "name": "full_objects",
            "type": "bool"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "Marshalls",
    "parent": "Object",
    "properties": []
  },
  "Material": {
    "methods": [
      {
        "name": "_can_do_next_pass",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_can_use_render_priority",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_get_shader_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_shader_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      },
      {
        "name": "inspect_native_shader_code",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Material",
    "parent": "Resource",
    "properties": [
      {
        "name": "next_pass",
        "type": "Material"
      },
      {
        "name": "render_priority",
        "type": "int"
      }
    ]
  },
  "MenuBar": {
    "methods": [
      {
        "name": "get_menu_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_menu_popup",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          }
        ],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_menu_title",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_menu_tooltip",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_menu_disabled",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_menu_hidden",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_native_menu",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_disable_shortcuts",
        "parameters": [
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_menu_disabled",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_menu_hidden",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_menu_title",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_menu_tooltip",
        "parameters": [
          {
            "name": "menu",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MenuBar",
    "parent": "Control",
    "properties": [
      {
        "name": "flat",
        "type": "bool"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "prefer_global_menu",
        "type": "bool"
      },
      {
        "name": "start_index",
        "type": "int"
      },
      {
        "name": "switch_on_hover",
        "type": "bool"
      },
      {
        "name": "text_direction",
        "type": "int"
      }
    ]
  },
  "MenuButton": {
    "methods": [
      {
        "name": "get_popup",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "set_disable_shortcuts",
        "parameters": [
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show_popup",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "MenuButton",
    "parent": "Button",
    "properties": [
      {
        "name": "action_mode",
        "type": "int"
      },
      {
        "name": "flat",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "item_count",
        "type": "int"
      },
      {
        "name": "switch_on_hover",
        "type": "bool"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "Mesh": {
    "methods": [
      {
        "name": "_get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "_get_blend_shape_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_blend_shape_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "_get_surface_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_set_blend_shape_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_surface_get_array_index_len",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_surface_get_array_len",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_surface_get_arrays",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "_surface_get_blend_shape_arrays",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Array[]"
      },
      {
        "name": "_surface_get_format",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_surface_get_lods",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_surface_get_material",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Material"
      },
      {
        "name": "_surface_get_primitive_type",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_surface_set_material",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_convex_shape",
        "parameters": [
          {
            "name": "clean",
            "type": "bool"
          },
          {
            "name": "simplify",
            "type": "bool"
          }
        ],
        "return_type": "ConvexPolygonShape3D"
      },
      {
        "name": "create_outline",
        "parameters": [
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "Mesh"
      },
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      },
      {
        "name": "create_trimesh_shape",
        "parameters": [],
        "return_type": "ConcavePolygonShape3D"
      },
      {
        "name": "generate_triangle_mesh",
        "parameters": [],
        "return_type": "TriangleMesh"
      },
      {
        "name": "get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_faces",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_surface_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "surface_get_arrays",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "surface_get_blend_shape_arrays",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "Array[]"
      },
      {
        "name": "surface_get_material",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          }
        ],
        "return_type": "Material"
      },
      {
        "name": "surface_set_material",
        "parameters": [
          {
            "name": "surf_idx",
            "type": "int"
          },
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Mesh",
    "parent": "Resource",
    "properties": [
      {
        "name": "lightmap_size_hint",
        "type": "Vector2i"
      }
    ]
  },
  "MeshConvexDecompositionSettings": {
    "methods": [],
    "name": "MeshConvexDecompositionSettings",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "convex_hull_approximation",
        "type": "bool"
      },
      {
        "name": "convex_hull_downsampling",
        "type": "int"
      },
      {
        "name": "max_concavity",
        "type": "float"
      },
      {
        "name": "max_convex_hulls",
        "type": "int"
      },
      {
        "name": "max_num_vertices_per_convex_hull",
        "type": "int"
      },
      {
        "name": "min_volume_per_convex_hull",
        "type": "float"
      },
      {
        "name": "mode",
        "type": "int"
      },
      {
        "name": "normalize_mesh",
        "type": "bool"
      },
      {
        "name": "plane_downsampling",
        "type": "int"
      },
      {
        "name": "project_hull_vertices",
        "type": "bool"
      },
      {
        "name": "resolution",
        "type": "int"
      },
      {
        "name": "revolution_axes_clipping_bias",
        "type": "float"
      },
      {
        "name": "symmetry_planes_clipping_bias",
        "type": "float"
      }
    ]
  },
  "MeshDataTool": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "commit_to_surface",
        "parameters": [
          {
            "name": "mesh",
            "type": "ArrayMesh"
          },
          {
            "name": "compression_flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_from_surface",
        "parameters": [
          {
            "name": "mesh",
            "type": "ArrayMesh"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_edge_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_edge_faces",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_edge_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_edge_vertex",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "vertex",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_face_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_face_edge",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "edge",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_face_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_face_normal",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_face_vertex",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "vertex",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_material",
        "parameters": [],
        "return_type": "Material"
      },
      {
        "name": "get_vertex",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_vertex_bones",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_vertex_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_vertex_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_vertex_edges",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_vertex_faces",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_vertex_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_vertex_normal",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_vertex_tangent",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Plane"
      },
      {
        "name": "get_vertex_uv",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_vertex_uv2",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_vertex_weights",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "set_edge_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_face_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_material",
        "parameters": [
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "vertex",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_bones",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "bones",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_color",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_meta",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_normal",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "normal",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_tangent",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tangent",
            "type": "Plane"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_uv",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "uv",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_uv2",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "uv2",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex_weights",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MeshDataTool",
    "parent": "RefCounted",
    "properties": []
  },
  "MeshInstance2D": {
    "methods": [],
    "name": "MeshInstance2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      }
    ]
  },
  "MeshInstance3D": {
    "methods": [
      {
        "name": "bake_mesh_from_current_blend_shape_mix",
        "parameters": [
          {
            "name": "existing",
            "type": "ArrayMesh"
          }
        ],
        "return_type": "ArrayMesh"
      },
      {
        "name": "bake_mesh_from_current_skeleton_pose",
        "parameters": [
          {
            "name": "existing",
            "type": "ArrayMesh"
          }
        ],
        "return_type": "ArrayMesh"
      },
      {
        "name": "create_convex_collision",
        "parameters": [
          {
            "name": "clean",
            "type": "bool"
          },
          {
            "name": "simplify",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_debug_tangents",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_multiple_convex_collisions",
        "parameters": [
          {
            "name": "settings",
            "type": "MeshConvexDecompositionSettings"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_trimesh_collision",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "find_blend_shape_by_name",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_active_material",
        "parameters": [
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "Material"
      },
      {
        "name": "get_blend_shape_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_blend_shape_value",
        "parameters": [
          {
            "name": "blend_shape_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_skin_reference",
        "parameters": [],
        "return_type": "SkinReference"
      },
      {
        "name": "get_surface_override_material",
        "parameters": [
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "Material"
      },
      {
        "name": "get_surface_override_material_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_blend_shape_value",
        "parameters": [
          {
            "name": "blend_shape_idx",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_surface_override_material",
        "parameters": [
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MeshInstance3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "skeleton",
        "type": "NodePath"
      },
      {
        "name": "skin",
        "type": "Skin"
      }
    ]
  },
  "MeshLibrary": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_item",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find_item_by_name",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_list",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_item_mesh",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Mesh"
      },
      {
        "name": "get_item_mesh_cast_shadow",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_mesh_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_item_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_navigation_layers",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_navigation_mesh",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "NavigationMesh"
      },
      {
        "name": "get_item_navigation_mesh_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_item_preview",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_item_shapes",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_last_unused_item_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "remove_item",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_mesh",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "mesh",
            "type": "Mesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_mesh_cast_shadow",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "shadow_casting_setting",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_mesh_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "mesh_transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_navigation_layers",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_navigation_mesh",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_navigation_mesh_transform",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "navigation_mesh",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_preview",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_shapes",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "shapes",
            "type": "Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MeshLibrary",
    "parent": "Resource",
    "properties": []
  },
  "MeshTexture": {
    "methods": [],
    "name": "MeshTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "base_texture",
        "type": "Texture2D"
      },
      {
        "name": "image_size",
        "type": "Vector2"
      },
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      }
    ]
  },
  "MethodTweener": {
    "methods": [
      {
        "name": "set_delay",
        "parameters": [
          {
            "name": "delay",
            "type": "float"
          }
        ],
        "return_type": "MethodTweener"
      },
      {
        "name": "set_ease",
        "parameters": [
          {
            "name": "ease",
            "type": "int"
          }
        ],
        "return_type": "MethodTweener"
      },
      {
        "name": "set_trans",
        "parameters": [
          {
            "name": "trans",
            "type": "int"
          }
        ],
        "return_type": "MethodTweener"
      }
    ],
    "name": "MethodTweener",
    "parent": "Tweener",
    "properties": []
  },
  "MissingNode": {
    "methods": [],
    "name": "MissingNode",
    "parent": "Node",
    "properties": [
      {
        "name": "original_class",
        "type": "String"
      },
      {
        "name": "original_scene",
        "type": "String"
      },
      {
        "name": "recording_properties",
        "type": "bool"
      }
    ]
  },
  "MissingResource": {
    "methods": [],
    "name": "MissingResource",
    "parent": "Resource",
    "properties": [
      {
        "name": "original_class",
        "type": "String"
      },
      {
        "name": "recording_properties",
        "type": "bool"
      }
    ]
  },
  "MovieWriter": {
    "methods": [
      {
        "name": "_get_audio_mix_rate",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_audio_speaker_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_handles_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_write_begin",
        "parameters": [
          {
            "name": "movie_size",
            "type": "Vector2i"
          },
          {
            "name": "fps",
            "type": "int"
          },
          {
            "name": "base_path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_write_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_write_frame",
        "parameters": [
          {
            "name": "frame_image",
            "type": "Image"
          },
          {
            "name": "audio_frame_block",
            "type": "const void*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_writer",
        "parameters": [
          {
            "name": "writer",
            "type": "MovieWriter"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MovieWriter",
    "parent": "Object",
    "properties": []
  },
  "MultiMesh": {
    "methods": [
      {
        "name": "get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_instance_color",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_instance_custom_data",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_instance_transform",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_instance_transform_2d",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "reset_instance_physics_interpolation",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_buffer_interpolated",
        "parameters": [
          {
            "name": "buffer_curr",
            "type": "PackedFloat32Array"
          },
          {
            "name": "buffer_prev",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_instance_color",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_instance_custom_data",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          },
          {
            "name": "custom_data",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_instance_transform",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_instance_transform_2d",
        "parameters": [
          {
            "name": "instance",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MultiMesh",
    "parent": "Resource",
    "properties": [
      {
        "name": "buffer",
        "type": "PackedFloat32Array"
      },
      {
        "name": "color_array",
        "type": "PackedColorArray"
      },
      {
        "name": "custom_aabb",
        "type": "AABB"
      },
      {
        "name": "custom_data_array",
        "type": "PackedColorArray"
      },
      {
        "name": "instance_count",
        "type": "int"
      },
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "physics_interpolation_quality",
        "type": "int"
      },
      {
        "name": "transform_2d_array",
        "type": "PackedVector2Array"
      },
      {
        "name": "transform_array",
        "type": "PackedVector3Array"
      },
      {
        "name": "transform_format",
        "type": "int"
      },
      {
        "name": "use_colors",
        "type": "bool"
      },
      {
        "name": "use_custom_data",
        "type": "bool"
      },
      {
        "name": "visible_instance_count",
        "type": "int"
      }
    ]
  },
  "MultiMeshInstance2D": {
    "methods": [],
    "name": "MultiMeshInstance2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "multimesh",
        "type": "MultiMesh"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      }
    ]
  },
  "MultiMeshInstance3D": {
    "methods": [],
    "name": "MultiMeshInstance3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "multimesh",
        "type": "MultiMesh"
      }
    ]
  },
  "MultiplayerAPI": {
    "methods": [
      {
        "name": "create_default_interface",
        "parameters": [],
        "return_type": "MultiplayerAPI"
      },
      {
        "name": "get_default_interface",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_peers",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_remote_sender_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_unique_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_multiplayer_peer",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_server",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "object_configuration_add",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "configuration",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "object_configuration_remove",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "configuration",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "rpc",
        "parameters": [
          {
            "name": "peer",
            "type": "int"
          },
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_default_interface",
        "parameters": [
          {
            "name": "interface_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MultiplayerAPI",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "multiplayer_peer",
        "type": "MultiplayerPeer"
      }
    ]
  },
  "MultiplayerAPIExtension": {
    "methods": [
      {
        "name": "_get_multiplayer_peer",
        "parameters": [],
        "return_type": "MultiplayerPeer"
      },
      {
        "name": "_get_peer_ids",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_get_remote_sender_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_unique_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_object_configuration_add",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "configuration",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_object_configuration_remove",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "configuration",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_poll",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_rpc",
        "parameters": [
          {
            "name": "peer",
            "type": "int"
          },
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "args",
            "type": "Array"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_set_multiplayer_peer",
        "parameters": [
          {
            "name": "multiplayer_peer",
            "type": "MultiplayerPeer"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MultiplayerAPIExtension",
    "parent": "MultiplayerAPI",
    "properties": []
  },
  "MultiplayerPeer": {
    "methods": [
      {
        "name": "close",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "disconnect_peer",
        "parameters": [
          {
            "name": "peer",
            "type": "int"
          },
          {
            "name": "force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "generate_unique_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_connection_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_packet_channel",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_packet_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_packet_peer",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_unique_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_server_relay_supported",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_target_peer",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MultiplayerPeer",
    "parent": "PacketPeer",
    "properties": [
      {
        "name": "refuse_new_connections",
        "type": "bool"
      },
      {
        "name": "transfer_channel",
        "type": "int"
      },
      {
        "name": "transfer_mode",
        "type": "int"
      }
    ]
  },
  "MultiplayerPeerExtension": {
    "methods": [
      {
        "name": "_close",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_disconnect_peer",
        "parameters": [
          {
            "name": "p_peer",
            "type": "int"
          },
          {
            "name": "p_force",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_available_packet_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_connection_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_max_packet_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_packet",
        "parameters": [
          {
            "name": "r_buffer",
            "type": "const uint8_t **"
          },
          {
            "name": "r_buffer_size",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_packet_channel",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_packet_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_packet_peer",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_packet_script",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "_get_transfer_channel",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_transfer_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_unique_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_is_refusing_new_connections",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_server",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_server_relay_supported",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_poll",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_put_packet",
        "parameters": [
          {
            "name": "p_buffer",
            "type": "const uint8_t*"
          },
          {
            "name": "p_buffer_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_put_packet_script",
        "parameters": [
          {
            "name": "p_buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_set_refuse_new_connections",
        "parameters": [
          {
            "name": "p_enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_target_peer",
        "parameters": [
          {
            "name": "p_peer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_transfer_channel",
        "parameters": [
          {
            "name": "p_channel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_transfer_mode",
        "parameters": [
          {
            "name": "p_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "MultiplayerPeerExtension",
    "parent": "MultiplayerPeer",
    "properties": []
  },
  "Mutex": {
    "methods": [
      {
        "name": "lock",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "try_lock",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "unlock",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Mutex",
    "parent": "RefCounted",
    "properties": []
  },
  "NativeMenu": {
    "methods": [
      {
        "name": "add_check_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_icon_check_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_icon_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_icon_radio_check_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_multistate_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "max_states",
            "type": "int"
          },
          {
            "name": "default_state",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_radio_check_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "accelerator",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_separator",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_submenu_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "submenu_rid",
            "type": "RID"
          },
          {
            "name": "tag",
            "type": "Variant"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_menu",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "find_item_index_with_submenu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "submenu_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find_item_index_with_tag",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "tag",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find_item_index_with_text",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "free_menu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_item_accelerator",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_item_count",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_icon",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_item_indentation_level",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_key_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_item_max_states",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_state",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_submenu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_item_tag",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_item_text",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_tooltip",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_minimum_width",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_popup_close_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_popup_open_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_size",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_system_menu",
        "parameters": [
          {
            "name": "menu_id",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_system_menu_name",
        "parameters": [
          {
            "name": "menu_id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_menu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_system_menu",
        "parameters": [
          {
            "name": "menu_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_checkable",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_checked",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_disabled",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_hidden",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_radio_checkable",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_opened",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_system_menu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "popup",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_item",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_interface_direction",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "is_rtl",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_accelerator",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "keycode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_checkable",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checkable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_checked",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checked",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_disabled",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_hidden",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_hover_callbacks",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_indentation_level",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_key_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "key_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_max_states",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "max_states",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_radio_checkable",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "checkable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_state",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_submenu",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "submenu_rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tag",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tag",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tooltip",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_minimum_width",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_popup_close_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_popup_open_callback",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NativeMenu",
    "parent": "Object",
    "properties": []
  },
  "NavigationAgent2D": {
    "methods": [
      {
        "name": "distance_to_target",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_avoidance_mask_value",
        "parameters": [
          {
            "name": "mask_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_current_navigation_path",
        "parameters": [],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_current_navigation_path_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_current_navigation_result",
        "parameters": [],
        "return_type": "NavigationPathQueryResult2D"
      },
      {
        "name": "get_final_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_next_path_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_navigation_finished",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_target_reachable",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_target_reached",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_avoidance_mask_value",
        "parameters": [
          {
            "name": "mask_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_velocity_forced",
        "parameters": [
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationAgent2D",
    "parent": "Node",
    "properties": [
      {
        "name": "avoidance_enabled",
        "type": "bool"
      },
      {
        "name": "avoidance_layers",
        "type": "int"
      },
      {
        "name": "avoidance_mask",
        "type": "int"
      },
      {
        "name": "avoidance_priority",
        "type": "float"
      },
      {
        "name": "debug_enabled",
        "type": "bool"
      },
      {
        "name": "debug_path_custom_color",
        "type": "Color"
      },
      {
        "name": "debug_path_custom_line_width",
        "type": "float"
      },
      {
        "name": "debug_path_custom_point_size",
        "type": "float"
      },
      {
        "name": "debug_use_custom",
        "type": "bool"
      },
      {
        "name": "max_neighbors",
        "type": "int"
      },
      {
        "name": "max_speed",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "neighbor_distance",
        "type": "float"
      },
      {
        "name": "path_desired_distance",
        "type": "float"
      },
      {
        "name": "path_max_distance",
        "type": "float"
      },
      {
        "name": "path_metadata_flags",
        "type": "int"
      },
      {
        "name": "path_postprocessing",
        "type": "int"
      },
      {
        "name": "pathfinding_algorithm",
        "type": "int"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "simplify_epsilon",
        "type": "float"
      },
      {
        "name": "simplify_path",
        "type": "bool"
      },
      {
        "name": "target_desired_distance",
        "type": "float"
      },
      {
        "name": "target_position",
        "type": "Vector2"
      },
      {
        "name": "time_horizon_agents",
        "type": "float"
      },
      {
        "name": "time_horizon_obstacles",
        "type": "float"
      },
      {
        "name": "velocity",
        "type": "Vector2"
      }
    ]
  },
  "NavigationAgent3D": {
    "methods": [
      {
        "name": "distance_to_target",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_avoidance_mask_value",
        "parameters": [
          {
            "name": "mask_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_current_navigation_path",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_current_navigation_path_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_current_navigation_result",
        "parameters": [],
        "return_type": "NavigationPathQueryResult3D"
      },
      {
        "name": "get_final_position",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_next_path_position",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_navigation_finished",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_target_reachable",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_target_reached",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_avoidance_mask_value",
        "parameters": [
          {
            "name": "mask_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_velocity_forced",
        "parameters": [
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationAgent3D",
    "parent": "Node",
    "properties": [
      {
        "name": "avoidance_enabled",
        "type": "bool"
      },
      {
        "name": "avoidance_layers",
        "type": "int"
      },
      {
        "name": "avoidance_mask",
        "type": "int"
      },
      {
        "name": "avoidance_priority",
        "type": "float"
      },
      {
        "name": "debug_enabled",
        "type": "bool"
      },
      {
        "name": "debug_path_custom_color",
        "type": "Color"
      },
      {
        "name": "debug_path_custom_point_size",
        "type": "float"
      },
      {
        "name": "debug_use_custom",
        "type": "bool"
      },
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "keep_y_velocity",
        "type": "bool"
      },
      {
        "name": "max_neighbors",
        "type": "int"
      },
      {
        "name": "max_speed",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "neighbor_distance",
        "type": "float"
      },
      {
        "name": "path_desired_distance",
        "type": "float"
      },
      {
        "name": "path_height_offset",
        "type": "float"
      },
      {
        "name": "path_max_distance",
        "type": "float"
      },
      {
        "name": "path_metadata_flags",
        "type": "int"
      },
      {
        "name": "path_postprocessing",
        "type": "int"
      },
      {
        "name": "pathfinding_algorithm",
        "type": "int"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "simplify_epsilon",
        "type": "float"
      },
      {
        "name": "simplify_path",
        "type": "bool"
      },
      {
        "name": "target_desired_distance",
        "type": "float"
      },
      {
        "name": "target_position",
        "type": "Vector3"
      },
      {
        "name": "time_horizon_agents",
        "type": "float"
      },
      {
        "name": "time_horizon_obstacles",
        "type": "float"
      },
      {
        "name": "use_3d_avoidance",
        "type": "bool"
      },
      {
        "name": "velocity",
        "type": "Vector3"
      }
    ]
  },
  "NavigationLink2D": {
    "methods": [
      {
        "name": "get_global_end_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_global_start_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_global_end_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_global_start_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationLink2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "bidirectional",
        "type": "bool"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "end_position",
        "type": "Vector2"
      },
      {
        "name": "enter_cost",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "start_position",
        "type": "Vector2"
      },
      {
        "name": "travel_cost",
        "type": "float"
      }
    ]
  },
  "NavigationLink3D": {
    "methods": [
      {
        "name": "get_global_end_position",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_global_start_position",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_global_end_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_global_start_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationLink3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "bidirectional",
        "type": "bool"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "end_position",
        "type": "Vector3"
      },
      {
        "name": "enter_cost",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "start_position",
        "type": "Vector3"
      },
      {
        "name": "travel_cost",
        "type": "float"
      }
    ]
  },
  "NavigationMesh": {
    "methods": [
      {
        "name": "add_polygon",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_polygons",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_from_mesh",
        "parameters": [
          {
            "name": "mesh",
            "type": "Mesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_polygon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_polygon_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_vertices",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertices",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationMesh",
    "parent": "Resource",
    "properties": [
      {
        "name": "agent_height",
        "type": "float"
      },
      {
        "name": "agent_max_climb",
        "type": "float"
      },
      {
        "name": "agent_max_slope",
        "type": "float"
      },
      {
        "name": "agent_radius",
        "type": "float"
      },
      {
        "name": "border_size",
        "type": "float"
      },
      {
        "name": "cell_height",
        "type": "float"
      },
      {
        "name": "cell_size",
        "type": "float"
      },
      {
        "name": "detail_sample_distance",
        "type": "float"
      },
      {
        "name": "detail_sample_max_error",
        "type": "float"
      },
      {
        "name": "edge_max_error",
        "type": "float"
      },
      {
        "name": "edge_max_length",
        "type": "float"
      },
      {
        "name": "filter_baking_aabb",
        "type": "AABB"
      },
      {
        "name": "filter_baking_aabb_offset",
        "type": "Vector3"
      },
      {
        "name": "filter_ledge_spans",
        "type": "bool"
      },
      {
        "name": "filter_low_hanging_obstacles",
        "type": "bool"
      },
      {
        "name": "filter_walkable_low_height_spans",
        "type": "bool"
      },
      {
        "name": "geometry_collision_mask",
        "type": "int"
      },
      {
        "name": "geometry_parsed_geometry_type",
        "type": "int"
      },
      {
        "name": "geometry_source_geometry_mode",
        "type": "int"
      },
      {
        "name": "geometry_source_group_name",
        "type": "StringName"
      },
      {
        "name": "region_merge_size",
        "type": "float"
      },
      {
        "name": "region_min_size",
        "type": "float"
      },
      {
        "name": "sample_partition_type",
        "type": "int"
      },
      {
        "name": "vertices_per_polygon",
        "type": "float"
      }
    ]
  },
  "NavigationMeshGenerator": {
    "methods": [
      {
        "name": "bake",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "root_node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bake_from_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData3D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "parse_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData3D"
          },
          {
            "name": "root_node",
            "type": "Node"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationMeshGenerator",
    "parent": "Object",
    "properties": []
  },
  "NavigationMeshSourceGeometryData2D": {
    "methods": [
      {
        "name": "add_obstruction_outline",
        "parameters": [
          {
            "name": "shape_outline",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_projected_obstruction",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector2Array"
          },
          {
            "name": "carve",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_traversable_outline",
        "parameters": [
          {
            "name": "shape_outline",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_obstruction_outlines",
        "parameters": [
          {
            "name": "obstruction_outlines",
            "type": "PackedVector2Array[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_traversable_outlines",
        "parameters": [
          {
            "name": "traversable_outlines",
            "type": "PackedVector2Array[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_projected_obstructions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_obstruction_outlines",
        "parameters": [],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "get_projected_obstructions",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_traversable_outlines",
        "parameters": [],
        "return_type": "PackedVector2Array[]"
      },
      {
        "name": "has_data",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "other_geometry",
            "type": "NavigationMeshSourceGeometryData2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_obstruction_outlines",
        "parameters": [
          {
            "name": "obstruction_outlines",
            "type": "PackedVector2Array[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_projected_obstructions",
        "parameters": [
          {
            "name": "projected_obstructions",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_traversable_outlines",
        "parameters": [
          {
            "name": "traversable_outlines",
            "type": "PackedVector2Array[]"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationMeshSourceGeometryData2D",
    "parent": "Resource",
    "properties": []
  },
  "NavigationMeshSourceGeometryData3D": {
    "methods": [
      {
        "name": "add_faces",
        "parameters": [
          {
            "name": "faces",
            "type": "PackedVector3Array"
          },
          {
            "name": "xform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_mesh",
        "parameters": [
          {
            "name": "mesh",
            "type": "Mesh"
          },
          {
            "name": "xform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_mesh_array",
        "parameters": [
          {
            "name": "mesh_array",
            "type": "Array"
          },
          {
            "name": "xform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_projected_obstruction",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          },
          {
            "name": "elevation",
            "type": "float"
          },
          {
            "name": "height",
            "type": "float"
          },
          {
            "name": "carve",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_arrays",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedFloat32Array"
          },
          {
            "name": "indices",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_projected_obstructions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_indices",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_projected_obstructions",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_vertices",
        "parameters": [],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "has_data",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "other_geometry",
            "type": "NavigationMeshSourceGeometryData3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_indices",
        "parameters": [
          {
            "name": "indices",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_projected_obstructions",
        "parameters": [
          {
            "name": "projected_obstructions",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertices",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationMeshSourceGeometryData3D",
    "parent": "Resource",
    "properties": []
  },
  "NavigationObstacle2D": {
    "methods": [
      {
        "name": "get_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationObstacle2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "affect_navigation_mesh",
        "type": "bool"
      },
      {
        "name": "avoidance_enabled",
        "type": "bool"
      },
      {
        "name": "avoidance_layers",
        "type": "int"
      },
      {
        "name": "carve_navigation_mesh",
        "type": "bool"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "velocity",
        "type": "Vector2"
      },
      {
        "name": "vertices",
        "type": "PackedVector2Array"
      }
    ]
  },
  "NavigationObstacle3D": {
    "methods": [
      {
        "name": "get_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_avoidance_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationObstacle3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "affect_navigation_mesh",
        "type": "bool"
      },
      {
        "name": "avoidance_enabled",
        "type": "bool"
      },
      {
        "name": "avoidance_layers",
        "type": "int"
      },
      {
        "name": "carve_navigation_mesh",
        "type": "bool"
      },
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "use_3d_avoidance",
        "type": "bool"
      },
      {
        "name": "velocity",
        "type": "Vector3"
      },
      {
        "name": "vertices",
        "type": "PackedVector3Array"
      }
    ]
  },
  "NavigationPathQueryParameters2D": {
    "methods": [],
    "name": "NavigationPathQueryParameters2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "map",
        "type": "RID"
      },
      {
        "name": "metadata_flags",
        "type": "int"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "path_postprocessing",
        "type": "int"
      },
      {
        "name": "pathfinding_algorithm",
        "type": "int"
      },
      {
        "name": "simplify_epsilon",
        "type": "float"
      },
      {
        "name": "simplify_path",
        "type": "bool"
      },
      {
        "name": "start_position",
        "type": "Vector2"
      },
      {
        "name": "target_position",
        "type": "Vector2"
      }
    ]
  },
  "NavigationPathQueryParameters3D": {
    "methods": [],
    "name": "NavigationPathQueryParameters3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "map",
        "type": "RID"
      },
      {
        "name": "metadata_flags",
        "type": "int"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "path_postprocessing",
        "type": "int"
      },
      {
        "name": "pathfinding_algorithm",
        "type": "int"
      },
      {
        "name": "simplify_epsilon",
        "type": "float"
      },
      {
        "name": "simplify_path",
        "type": "bool"
      },
      {
        "name": "start_position",
        "type": "Vector3"
      },
      {
        "name": "target_position",
        "type": "Vector3"
      }
    ]
  },
  "NavigationPathQueryResult2D": {
    "methods": [
      {
        "name": "reset",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "NavigationPathQueryResult2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "path",
        "type": "PackedVector2Array"
      },
      {
        "name": "path_owner_ids",
        "type": "PackedInt64Array"
      },
      {
        "name": "path_rids",
        "type": "RID[]"
      },
      {
        "name": "path_types",
        "type": "PackedInt32Array"
      }
    ]
  },
  "NavigationPathQueryResult3D": {
    "methods": [
      {
        "name": "reset",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "NavigationPathQueryResult3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "path",
        "type": "PackedVector3Array"
      },
      {
        "name": "path_owner_ids",
        "type": "PackedInt64Array"
      },
      {
        "name": "path_rids",
        "type": "RID[]"
      },
      {
        "name": "path_types",
        "type": "PackedInt32Array"
      }
    ]
  },
  "NavigationPolygon": {
    "methods": [
      {
        "name": "add_outline",
        "parameters": [
          {
            "name": "outline",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_outline_at_index",
        "parameters": [
          {
            "name": "outline",
            "type": "PackedVector2Array"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_polygon",
        "parameters": [
          {
            "name": "polygon",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_outlines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_polygons",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_navigation_mesh",
        "parameters": [],
        "return_type": "NavigationMesh"
      },
      {
        "name": "get_outline",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_outline_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_parsed_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_polygon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_polygon_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_vertices",
        "parameters": [],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "make_polygons_from_outlines",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_outline",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_outline",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "outline",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_parsed_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertices",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationPolygon",
    "parent": "Resource",
    "properties": [
      {
        "name": "agent_radius",
        "type": "float"
      },
      {
        "name": "baking_rect",
        "type": "Rect2"
      },
      {
        "name": "baking_rect_offset",
        "type": "Vector2"
      },
      {
        "name": "border_size",
        "type": "float"
      },
      {
        "name": "cell_size",
        "type": "float"
      },
      {
        "name": "parsed_collision_mask",
        "type": "int"
      },
      {
        "name": "parsed_geometry_type",
        "type": "int"
      },
      {
        "name": "sample_partition_type",
        "type": "int"
      },
      {
        "name": "source_geometry_group_name",
        "type": "StringName"
      },
      {
        "name": "source_geometry_mode",
        "type": "int"
      }
    ]
  },
  "NavigationRegion2D": {
    "methods": [
      {
        "name": "bake_navigation_polygon",
        "parameters": [
          {
            "name": "on_thread",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_region_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_baking",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationRegion2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "enter_cost",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "navigation_polygon",
        "type": "NavigationPolygon"
      },
      {
        "name": "travel_cost",
        "type": "float"
      },
      {
        "name": "use_edge_connections",
        "type": "bool"
      }
    ]
  },
  "NavigationRegion3D": {
    "methods": [
      {
        "name": "bake_navigation_mesh",
        "parameters": [
          {
            "name": "on_thread",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_region_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_baking",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_navigation_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "navigation_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationRegion3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "enter_cost",
        "type": "float"
      },
      {
        "name": "navigation_layers",
        "type": "int"
      },
      {
        "name": "navigation_mesh",
        "type": "NavigationMesh"
      },
      {
        "name": "travel_cost",
        "type": "float"
      },
      {
        "name": "use_edge_connections",
        "type": "bool"
      }
    ]
  },
  "NavigationServer2D": {
    "methods": [
      {
        "name": "agent_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "agent_get_avoidance_enabled",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_get_avoidance_layers",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_avoidance_mask",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_avoidance_priority",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_map",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "agent_get_max_neighbors",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_max_speed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_neighbor_distance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_paused",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_get_position",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "agent_get_radius",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_time_horizon_agents",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_time_horizon_obstacles",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_velocity",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "agent_has_avoidance_callback",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_is_map_changed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_set_avoidance_callback",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_enabled",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_layers",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_mask",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_priority",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_map",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_max_neighbors",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_max_speed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "max_speed",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_neighbor_distance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "distance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_paused",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "paused",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_position",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_radius",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_time_horizon_agents",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "time_horizon",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_time_horizon_obstacles",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "time_horizon",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_velocity",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_velocity_forced",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bake_from_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData2D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bake_from_source_geometry_data_async",
        "parameters": [
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData2D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_debug_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_maps",
        "parameters": [],
        "return_type": "RID[]"
      },
      {
        "name": "is_baking_navigation_polygon",
        "parameters": [
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "link_get_enabled",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_get_end_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "link_get_enter_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "link_get_map",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "link_get_navigation_layers",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "link_get_owner_id",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "link_get_start_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "link_get_travel_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "link_is_bidirectional",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_set_bidirectional",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_enabled",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_end_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_enter_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "enter_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_map",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_navigation_layers",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_owner_id",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_start_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_travel_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "travel_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "map_force_update",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_get_agents",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_cell_size",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_closest_point",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "map_get_closest_point_owner",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector2"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "map_get_edge_connection_margin",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_iteration_id",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "map_get_link_connection_radius",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_links",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_obstacles",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_path",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "origin",
            "type": "Vector2"
          },
          {
            "name": "destination",
            "type": "Vector2"
          },
          {
            "name": "optimize",
            "type": "bool"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "map_get_random_point",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          },
          {
            "name": "uniformly",
            "type": "bool"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "map_get_regions",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_use_async_iterations",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_get_use_edge_connections",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_is_active",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_set_active",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_cell_size",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "cell_size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_edge_connection_margin",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_link_connection_radius",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_use_async_iterations",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_use_edge_connections",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "obstacle_get_avoidance_enabled",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "obstacle_get_avoidance_layers",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "obstacle_get_map",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "obstacle_get_paused",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "obstacle_get_position",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "obstacle_get_radius",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "obstacle_get_velocity",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "obstacle_get_vertices",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "obstacle_set_avoidance_enabled",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_avoidance_layers",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_map",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_paused",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "paused",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_position",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_radius",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_velocity",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_vertices",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "vertices",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "parse_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData2D"
          },
          {
            "name": "root_node",
            "type": "Node"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "query_path",
        "parameters": [
          {
            "name": "parameters",
            "type": "NavigationPathQueryParameters2D"
          },
          {
            "name": "result",
            "type": "NavigationPathQueryResult2D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "region_get_bounds",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "region_get_closest_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "region_get_connection_pathway_end",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "connection",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "region_get_connection_pathway_start",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "connection",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "region_get_connections_count",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_enabled",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_get_enter_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "region_get_map",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "region_get_navigation_layers",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_owner_id",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_random_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          },
          {
            "name": "uniformly",
            "type": "bool"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "region_get_transform",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "region_get_travel_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "region_get_use_edge_connections",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_owns_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_set_enabled",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_enter_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enter_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_map",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_navigation_layers",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_navigation_polygon",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_owner_id",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_transform",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_travel_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "travel_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_use_edge_connections",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_debug_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "simplify_path",
        "parameters": [
          {
            "name": "path",
            "type": "PackedVector2Array"
          },
          {
            "name": "epsilon",
            "type": "float"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "source_geometry_parser_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "source_geometry_parser_set_callback",
        "parameters": [
          {
            "name": "parser",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationServer2D",
    "parent": "Object",
    "properties": []
  },
  "NavigationServer3D": {
    "methods": [
      {
        "name": "agent_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "agent_get_avoidance_enabled",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_get_avoidance_layers",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_avoidance_mask",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_avoidance_priority",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_height",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_map",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "agent_get_max_neighbors",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "agent_get_max_speed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_neighbor_distance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_paused",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_get_position",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "agent_get_radius",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_time_horizon_agents",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_time_horizon_obstacles",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "agent_get_use_3d_avoidance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_get_velocity",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "agent_has_avoidance_callback",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_is_map_changed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "agent_set_avoidance_callback",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_enabled",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_layers",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_mask",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_avoidance_priority",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_height",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "height",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_map",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_max_neighbors",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_max_speed",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "max_speed",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_neighbor_distance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "distance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_paused",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "paused",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_position",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_radius",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_time_horizon_agents",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "time_horizon",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_time_horizon_obstacles",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "time_horizon",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_use_3d_avoidance",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_velocity",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "agent_set_velocity_forced",
        "parameters": [
          {
            "name": "agent",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bake_from_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData3D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bake_from_source_geometry_data_async",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData3D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_debug_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_maps",
        "parameters": [],
        "return_type": "RID[]"
      },
      {
        "name": "get_process_info",
        "parameters": [
          {
            "name": "process_info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_baking_navigation_mesh",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "link_get_enabled",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_get_end_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "link_get_enter_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "link_get_map",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "link_get_navigation_layers",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "link_get_owner_id",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "link_get_start_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "link_get_travel_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "link_is_bidirectional",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "link_set_bidirectional",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "bidirectional",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_enabled",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_end_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_enter_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "enter_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_map",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_navigation_layers",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_owner_id",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_start_position",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "link_set_travel_cost",
        "parameters": [
          {
            "name": "link",
            "type": "RID"
          },
          {
            "name": "travel_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "map_force_update",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_get_agents",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_cell_height",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_cell_size",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_closest_point",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "map_get_closest_point_normal",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "map_get_closest_point_owner",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "map_get_closest_point_to_segment",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "Vector3"
          },
          {
            "name": "end",
            "type": "Vector3"
          },
          {
            "name": "use_collision",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "map_get_edge_connection_margin",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_iteration_id",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "map_get_link_connection_radius",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_links",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_merge_rasterizer_cell_scale",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "map_get_obstacles",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_path",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "origin",
            "type": "Vector3"
          },
          {
            "name": "destination",
            "type": "Vector3"
          },
          {
            "name": "optimize",
            "type": "bool"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "map_get_random_point",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          },
          {
            "name": "uniformly",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "map_get_regions",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "map_get_up",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "map_get_use_async_iterations",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_get_use_edge_connections",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_is_active",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_set_active",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_cell_height",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "cell_height",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_cell_size",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "cell_size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_edge_connection_margin",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_link_connection_radius",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_merge_rasterizer_cell_scale",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_up",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "up",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_use_async_iterations",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "map_set_use_edge_connections",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "obstacle_get_avoidance_enabled",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "obstacle_get_avoidance_layers",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "obstacle_get_height",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "obstacle_get_map",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "obstacle_get_paused",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "obstacle_get_position",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "obstacle_get_radius",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "obstacle_get_use_3d_avoidance",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "obstacle_get_velocity",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "obstacle_get_vertices",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "obstacle_set_avoidance_enabled",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_avoidance_layers",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_height",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "height",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_map",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_paused",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "paused",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_position",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_radius",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_use_3d_avoidance",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_velocity",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "obstacle_set_vertices",
        "parameters": [
          {
            "name": "obstacle",
            "type": "RID"
          },
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "parse_source_geometry_data",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "source_geometry_data",
            "type": "NavigationMeshSourceGeometryData3D"
          },
          {
            "name": "root_node",
            "type": "Node"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "query_path",
        "parameters": [
          {
            "name": "parameters",
            "type": "NavigationPathQueryParameters3D"
          },
          {
            "name": "result",
            "type": "NavigationPathQueryResult3D"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_bake_navigation_mesh",
        "parameters": [
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          },
          {
            "name": "root_node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "region_get_bounds",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "region_get_closest_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_closest_point_normal",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "to_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_closest_point_to_segment",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "Vector3"
          },
          {
            "name": "end",
            "type": "Vector3"
          },
          {
            "name": "use_collision",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_connection_pathway_end",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "connection",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_connection_pathway_start",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "connection",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_connections_count",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_enabled",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_get_enter_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "region_get_map",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "region_get_navigation_layers",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_owner_id",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "region_get_random_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          },
          {
            "name": "uniformly",
            "type": "bool"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "region_get_transform",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "region_get_travel_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "region_get_use_edge_connections",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_owns_point",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "region_set_enabled",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_enter_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enter_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_map",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_navigation_layers",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_navigation_mesh",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "navigation_mesh",
            "type": "NavigationMesh"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_owner_id",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "owner_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_transform",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_travel_cost",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "travel_cost",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "region_set_use_edge_connections",
        "parameters": [
          {
            "name": "region",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_debug_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "simplify_path",
        "parameters": [
          {
            "name": "path",
            "type": "PackedVector3Array"
          },
          {
            "name": "epsilon",
            "type": "float"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "source_geometry_parser_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "source_geometry_parser_set_callback",
        "parameters": [
          {
            "name": "parser",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NavigationServer3D",
    "parent": "Object",
    "properties": []
  },
  "NinePatchRect": {
    "methods": [
      {
        "name": "get_patch_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_patch_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "NinePatchRect",
    "parent": "Control",
    "properties": [
      {
        "name": "axis_stretch_horizontal",
        "type": "int"
      },
      {
        "name": "axis_stretch_vertical",
        "type": "int"
      },
      {
        "name": "draw_center",
        "type": "bool"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "patch_margin_bottom",
        "type": "int"
      },
      {
        "name": "patch_margin_left",
        "type": "int"
      },
      {
        "name": "patch_margin_right",
        "type": "int"
      },
      {
        "name": "patch_margin_top",
        "type": "int"
      },
      {
        "name": "region_rect",
        "type": "Rect2"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      }
    ]
  },
  "Node": {
    "methods": [
      {
        "name": "_enter_tree",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_exit_tree",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_get_configuration_warnings",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_physics_process",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_process",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_ready",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_shortcut_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_unhandled_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_unhandled_key_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_child",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "force_readable_name",
            "type": "bool"
          },
          {
            "name": "internal",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_sibling",
        "parameters": [
          {
            "name": "sibling",
            "type": "Node"
          },
          {
            "name": "force_readable_name",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_to_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "persistent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "atr",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "atr_n",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "plural_message",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "call_deferred_thread_group",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "call_thread_safe",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "can_process",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "create_tween",
        "parameters": [],
        "return_type": "Tween"
      },
      {
        "name": "duplicate",
        "parameters": [
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "find_child",
        "parameters": [
          {
            "name": "pattern",
            "type": "String"
          },
          {
            "name": "recursive",
            "type": "bool"
          },
          {
            "name": "owned",
            "type": "bool"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "find_children",
        "parameters": [
          {
            "name": "pattern",
            "type": "String"
          },
          {
            "name": "type",
            "type": "String"
          },
          {
            "name": "recursive",
            "type": "bool"
          },
          {
            "name": "owned",
            "type": "bool"
          }
        ],
        "return_type": "Node[]"
      },
      {
        "name": "find_parent",
        "parameters": [
          {
            "name": "pattern",
            "type": "String"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_child",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "include_internal",
            "type": "bool"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_child_count",
        "parameters": [
          {
            "name": "include_internal",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_children",
        "parameters": [
          {
            "name": "include_internal",
            "type": "bool"
          }
        ],
        "return_type": "Node[]"
      },
      {
        "name": "get_groups",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "get_index",
        "parameters": [
          {
            "name": "include_internal",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_last_exclusive_window",
        "parameters": [],
        "return_type": "Window"
      },
      {
        "name": "get_multiplayer_authority",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_node",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_node_and_resource",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_node_or_null",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_parent",
        "parameters": [],
        "return_type": "Node"
      },
      {
        "name": "get_path",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_path_to",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "use_unique_path",
            "type": "bool"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_physics_process_delta_time",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_process_delta_time",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_rpc_config",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "get_scene_instance_load_placeholder",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_tree",
        "parameters": [],
        "return_type": "SceneTree"
      },
      {
        "name": "get_tree_string",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_tree_string_pretty",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_viewport",
        "parameters": [],
        "return_type": "Viewport"
      },
      {
        "name": "get_window",
        "parameters": [],
        "return_type": "Window"
      },
      {
        "name": "has_node",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_node_and_resource",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_ancestor_of",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_displayed_folded",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_editable_instance",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_greater_than",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_in_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_inside_tree",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_multiplayer_authority",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_node_ready",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_part_of_edited_scene",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_physics_interpolated",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_physics_interpolated_and_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_physics_processing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_physics_processing_internal",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing_input",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing_internal",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing_shortcut_input",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing_unhandled_input",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_processing_unhandled_key_input",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_child",
        "parameters": [
          {
            "name": "child_node",
            "type": "Node"
          },
          {
            "name": "to_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "notify_deferred_thread_group",
        "parameters": [
          {
            "name": "what",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "notify_thread_safe",
        "parameters": [
          {
            "name": "what",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "print_orphan_nodes",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "print_tree",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "print_tree_pretty",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "propagate_call",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "args",
            "type": "Array"
          },
          {
            "name": "parent_first",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "propagate_notification",
        "parameters": [
          {
            "name": "what",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_free",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_child",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_from_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reparent",
        "parameters": [
          {
            "name": "new_parent",
            "type": "Node"
          },
          {
            "name": "keep_global_transform",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "replace_by",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "keep_groups",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "request_ready",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "reset_physics_interpolation",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rpc",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rpc_config",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "config",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rpc_id",
        "parameters": [
          {
            "name": "peer_id",
            "type": "int"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_deferred_thread_group",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_display_folded",
        "parameters": [
          {
            "name": "fold",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_editable_instance",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "is_editable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_multiplayer_authority",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "recursive",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_process",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_process_internal",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_input",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_internal",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_shortcut_input",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_unhandled_input",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_process_unhandled_key_input",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_scene_instance_load_placeholder",
        "parameters": [
          {
            "name": "load_placeholder",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_thread_safe",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_translation_domain_inherited",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "update_configuration_warnings",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Node",
    "parent": "Object",
    "properties": [
      {
        "name": "auto_translate_mode",
        "type": "int"
      },
      {
        "name": "editor_description",
        "type": "String"
      },
      {
        "name": "multiplayer",
        "type": "MultiplayerAPI"
      },
      {
        "name": "name",
        "type": "StringName"
      },
      {
        "name": "owner",
        "type": "Node"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "process_mode",
        "type": "int"
      },
      {
        "name": "process_physics_priority",
        "type": "int"
      },
      {
        "name": "process_priority",
        "type": "int"
      },
      {
        "name": "process_thread_group",
        "type": "int"
      },
      {
        "name": "process_thread_group_order",
        "type": "int"
      },
      {
        "name": "process_thread_messages",
        "type": "int"
      },
      {
        "name": "scene_file_path",
        "type": "String"
      },
      {
        "name": "unique_name_in_owner",
        "type": "bool"
      }
    ]
  },
  "Node2D": {
    "methods": [
      {
        "name": "apply_scale",
        "parameters": [
          {
            "name": "ratio",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_angle_to",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_relative_transform_to_parent",
        "parameters": [
          {
            "name": "parent",
            "type": "Node"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "global_translate",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "look_at",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_local_x",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "scaled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_local_y",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "scaled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate",
        "parameters": [
          {
            "name": "radians",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "to_global",
        "parameters": [
          {
            "name": "local_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "to_local",
        "parameters": [
          {
            "name": "global_point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "translate",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Node2D",
    "parent": "CanvasItem",
    "properties": [
      {
        "name": "global_position",
        "type": "Vector2"
      },
      {
        "name": "global_rotation",
        "type": "float"
      },
      {
        "name": "global_rotation_degrees",
        "type": "float"
      },
      {
        "name": "global_scale",
        "type": "Vector2"
      },
      {
        "name": "global_skew",
        "type": "float"
      },
      {
        "name": "global_transform",
        "type": "Transform2D"
      },
      {
        "name": "position",
        "type": "Vector2"
      },
      {
        "name": "rotation",
        "type": "float"
      },
      {
        "name": "rotation_degrees",
        "type": "float"
      },
      {
        "name": "scale",
        "type": "Vector2"
      },
      {
        "name": "skew",
        "type": "float"
      },
      {
        "name": "transform",
        "type": "Transform2D"
      }
    ]
  },
  "Node3D": {
    "methods": [
      {
        "name": "add_gizmo",
        "parameters": [
          {
            "name": "gizmo",
            "type": "Node3DGizmo"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_gizmos",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_subgizmo_selection",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_update_transform",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_gizmos",
        "parameters": [],
        "return_type": "Node3DGizmo[]"
      },
      {
        "name": "get_global_transform_interpolated",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "get_parent_node_3d",
        "parameters": [],
        "return_type": "Node3D"
      },
      {
        "name": "get_world_3d",
        "parameters": [],
        "return_type": "World3D"
      },
      {
        "name": "global_rotate",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_scale",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_translate",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "hide",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_local_transform_notification_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_scale_disabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_transform_notification_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_visible_in_tree",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "look_at",
        "parameters": [
          {
            "name": "target",
            "type": "Vector3"
          },
          {
            "name": "up",
            "type": "Vector3"
          },
          {
            "name": "use_model_front",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "look_at_from_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector3"
          },
          {
            "name": "target",
            "type": "Vector3"
          },
          {
            "name": "up",
            "type": "Vector3"
          },
          {
            "name": "use_model_front",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "orthonormalize",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rotate",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate_object_local",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate_x",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate_y",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rotate_z",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scale_object_local",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_disable_scale",
        "parameters": [
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_identity",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_ignore_transform_notification",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_notify_local_transform",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_notify_transform",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_subgizmo_selection",
        "parameters": [
          {
            "name": "gizmo",
            "type": "Node3DGizmo"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_global",
        "parameters": [
          {
            "name": "local_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "to_local",
        "parameters": [
          {
            "name": "global_point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "translate",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "translate_object_local",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_gizmos",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Node3D",
    "parent": "Node",
    "properties": [
      {
        "name": "basis",
        "type": "Basis"
      },
      {
        "name": "global_basis",
        "type": "Basis"
      },
      {
        "name": "global_position",
        "type": "Vector3"
      },
      {
        "name": "global_rotation",
        "type": "Vector3"
      },
      {
        "name": "global_rotation_degrees",
        "type": "Vector3"
      },
      {
        "name": "global_transform",
        "type": "Transform3D"
      },
      {
        "name": "position",
        "type": "Vector3"
      },
      {
        "name": "quaternion",
        "type": "Quaternion"
      },
      {
        "name": "rotation",
        "type": "Vector3"
      },
      {
        "name": "rotation_degrees",
        "type": "Vector3"
      },
      {
        "name": "rotation_edit_mode",
        "type": "int"
      },
      {
        "name": "rotation_order",
        "type": "int"
      },
      {
        "name": "scale",
        "type": "Vector3"
      },
      {
        "name": "top_level",
        "type": "bool"
      },
      {
        "name": "transform",
        "type": "Transform3D"
      },
      {
        "name": "visibility_parent",
        "type": "NodePath"
      },
      {
        "name": "visible",
        "type": "bool"
      }
    ]
  },
  "Node3DGizmo": {
    "methods": [],
    "name": "Node3DGizmo",
    "parent": "RefCounted",
    "properties": []
  },
  "NodePath": {
    "methods": [
      {
        "name": "get_as_property_path",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_concatenated_names",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_concatenated_subnames",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_name_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_subname",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_subname_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_absolute",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      }
    ],
    "name": "NodePath",
    "parent": null,
    "properties": []
  },
  "ORMMaterial3D": {
    "methods": [],
    "name": "ORMMaterial3D",
    "parent": "BaseMaterial3D",
    "properties": []
  },
  "OS": {
    "methods": [
      {
        "name": "alert",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "close_midi_inputs",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "crash",
        "parameters": [
          {
            "name": "message",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_instance",
        "parameters": [
          {
            "name": "arguments",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_process",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "arguments",
            "type": "PackedStringArray"
          },
          {
            "name": "open_console",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "delay_msec",
        "parameters": [
          {
            "name": "msec",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "delay_usec",
        "parameters": [
          {
            "name": "usec",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "execute",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "arguments",
            "type": "PackedStringArray"
          },
          {
            "name": "output",
            "type": "Array"
          },
          {
            "name": "read_stderr",
            "type": "bool"
          },
          {
            "name": "open_console",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "execute_with_pipe",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "arguments",
            "type": "PackedStringArray"
          },
          {
            "name": "blocking",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "find_keycode_from_string",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cache_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_cmdline_args",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_cmdline_user_args",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_config_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_connected_midi_inputs",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_data_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_distribution_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_entropy",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_environment",
        "parameters": [
          {
            "name": "variable",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_executable_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_granted_permissions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_keycode_string",
        "parameters": [
          {
            "name": "code",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_locale",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_locale_language",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_main_thread_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_memory_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_model_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_process_exit_code",
        "parameters": [
          {
            "name": "pid",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_process_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_processor_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_processor_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_restart_on_exit_arguments",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_static_memory_peak_usage",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_static_memory_usage",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_stderr_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_stdin_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_stdout_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_system_ca_certificates",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_system_dir",
        "parameters": [
          {
            "name": "dir",
            "type": "int"
          },
          {
            "name": "shared_storage",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_system_font_path",
        "parameters": [
          {
            "name": "font_name",
            "type": "String"
          },
          {
            "name": "weight",
            "type": "int"
          },
          {
            "name": "stretch",
            "type": "int"
          },
          {
            "name": "italic",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_system_font_path_for_text",
        "parameters": [
          {
            "name": "font_name",
            "type": "String"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "locale",
            "type": "String"
          },
          {
            "name": "script",
            "type": "String"
          },
          {
            "name": "weight",
            "type": "int"
          },
          {
            "name": "stretch",
            "type": "int"
          },
          {
            "name": "italic",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_system_fonts",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_temp_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_thread_caller_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_unique_id",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_user_data_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_version",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_version_alias",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_video_adapter_driver_info",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "has_environment",
        "parameters": [
          {
            "name": "variable",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "tag_name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_debug_build",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_keycode_unicode",
        "parameters": [
          {
            "name": "code",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_process_running",
        "parameters": [
          {
            "name": "pid",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_restart_on_exit_set",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_sandboxed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_stdout_verbose",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_userfs_persistent",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "kill",
        "parameters": [
          {
            "name": "pid",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "move_to_trash",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "open_midi_inputs",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "read_buffer_from_stdin",
        "parameters": [
          {
            "name": "buffer_size",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "read_string_from_stdin",
        "parameters": [
          {
            "name": "buffer_size",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "request_permission",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "request_permissions",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "revoke_granted_permissions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_environment",
        "parameters": [
          {
            "name": "variable",
            "type": "String"
          },
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_restart_on_exit",
        "parameters": [
          {
            "name": "restart",
            "type": "bool"
          },
          {
            "name": "arguments",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_thread_name",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_use_file_access_save_and_swap",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shell_open",
        "parameters": [
          {
            "name": "uri",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shell_show_in_file_manager",
        "parameters": [
          {
            "name": "file_or_dir_path",
            "type": "String"
          },
          {
            "name": "open_folder",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "unset_environment",
        "parameters": [
          {
            "name": "variable",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "OS",
    "parent": "Object",
    "properties": [
      {
        "name": "delta_smoothing",
        "type": "bool"
      },
      {
        "name": "low_processor_usage_mode",
        "type": "bool"
      },
      {
        "name": "low_processor_usage_mode_sleep_usec",
        "type": "int"
      }
    ]
  },
  "Object": {
    "methods": [
      {
        "name": "_get",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_property_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_init",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_iter_get",
        "parameters": [
          {
            "name": "iter",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_iter_init",
        "parameters": [
          {
            "name": "iter",
            "type": "Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_iter_next",
        "parameters": [
          {
            "name": "iter",
            "type": "Array"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_notification",
        "parameters": [
          {
            "name": "what",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_property_can_revert",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_property_get_revert",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_set",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_to_string",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_validate_property",
        "parameters": [
          {
            "name": "property",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_user_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "String"
          },
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "call",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "call_deferred",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "callv",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          },
          {
            "name": "arg_array",
            "type": "Array"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "can_translate_messages",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "cancel_free",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "disconnect",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "emit_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "free",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_class",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_incoming_connections",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_indexed",
        "parameters": [
          {
            "name": "property_path",
            "type": "NodePath"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_instance_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_meta",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "default",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_meta_list",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "get_method_argument_count",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_method_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_property_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_script",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "get_signal_connection_list",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_signal_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_translation_domain",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "has_connections",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_meta",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_method",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_user_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_blocking_signals",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_class",
        "parameters": [
          {
            "name": "class",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_connected",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_queued_for_deletion",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "notification",
        "parameters": [
          {
            "name": "what",
            "type": "int"
          },
          {
            "name": "reversed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "notify_property_list_changed",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "property_can_revert",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "property_get_revert",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "remove_meta",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_user_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_block_signals",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_deferred",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_indexed",
        "parameters": [
          {
            "name": "property_path",
            "type": "NodePath"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_message_translation",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_meta",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_script",
        "parameters": [
          {
            "name": "script",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_translation_domain",
        "parameters": [
          {
            "name": "domain",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "to_string",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "tr",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "tr_n",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "plural_message",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "Object",
    "parent": null,
    "properties": []
  },
  "Occluder3D": {
    "methods": [
      {
        "name": "get_indices",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_vertices",
        "parameters": [],
        "return_type": "PackedVector3Array"
      }
    ],
    "name": "Occluder3D",
    "parent": "Resource",
    "properties": []
  },
  "OccluderInstance3D": {
    "methods": [
      {
        "name": "get_bake_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_bake_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "OccluderInstance3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "bake_mask",
        "type": "int"
      },
      {
        "name": "bake_simplification_distance",
        "type": "float"
      },
      {
        "name": "occluder",
        "type": "Occluder3D"
      }
    ]
  },
  "OccluderPolygon2D": {
    "methods": [],
    "name": "OccluderPolygon2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "closed",
        "type": "bool"
      },
      {
        "name": "cull_mode",
        "type": "int"
      },
      {
        "name": "polygon",
        "type": "PackedVector2Array"
      }
    ]
  },
  "OmniLight3D": {
    "methods": [],
    "name": "OmniLight3D",
    "parent": "Light3D",
    "properties": [
      {
        "name": "light_specular",
        "type": "float"
      },
      {
        "name": "omni_attenuation",
        "type": "float"
      },
      {
        "name": "omni_range",
        "type": "float"
      },
      {
        "name": "omni_shadow_mode",
        "type": "int"
      },
      {
        "name": "shadow_normal_bias",
        "type": "float"
      }
    ]
  },
  "OptimizedTranslation": {
    "methods": [
      {
        "name": "generate",
        "parameters": [
          {
            "name": "from",
            "type": "Translation"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "OptimizedTranslation",
    "parent": "Translation",
    "properties": []
  },
  "OptionButton": {
    "methods": [
      {
        "name": "add_icon_item",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_separator",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_item_icon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_item_id",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_index",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_metadata",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_item_text",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_tooltip",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_popup",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_selectable_item",
        "parameters": [
          {
            "name": "from_last",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selected_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_selected_metadata",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "has_selectable_items",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_item_disabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_separator",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_item",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_disable_shortcuts",
        "parameters": [
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_disabled",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_id",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_metadata",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tooltip",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show_popup",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "OptionButton",
    "parent": "Button",
    "properties": [
      {
        "name": "action_mode",
        "type": "int"
      },
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "allow_reselect",
        "type": "bool"
      },
      {
        "name": "fit_to_longest_item",
        "type": "bool"
      },
      {
        "name": "item_count",
        "type": "int"
      },
      {
        "name": "selected",
        "type": "int"
      },
      {
        "name": "toggle_mode",
        "type": "bool"
      }
    ]
  },
  "PCKPacker": {
    "methods": [
      {
        "name": "add_file",
        "parameters": [
          {
            "name": "target_path",
            "type": "String"
          },
          {
            "name": "source_path",
            "type": "String"
          },
          {
            "name": "encrypt",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_file_removal",
        "parameters": [
          {
            "name": "target_path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "flush",
        "parameters": [
          {
            "name": "verbose",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "pck_start",
        "parameters": [
          {
            "name": "pck_path",
            "type": "String"
          },
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "key",
            "type": "String"
          },
          {
            "name": "encrypt_directory",
            "type": "bool"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "PCKPacker",
    "parent": "RefCounted",
    "properties": []
  },
  "PackedByteArray": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "compress",
        "parameters": [
          {
            "name": "compression_mode",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_double",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "decode_float",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "decode_half",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "decode_s8",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_s16",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_s32",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_s64",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_u8",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_u16",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_u32",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_u64",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decode_var",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "decode_var_size",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "decompress",
        "parameters": [
          {
            "name": "buffer_size",
            "type": "int"
          },
          {
            "name": "compression_mode",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "decompress_dynamic",
        "parameters": [
          {
            "name": "max_output_size",
            "type": "int"
          },
          {
            "name": "compression_mode",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "encode_double",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_float",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_half",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_s8",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_s16",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_s32",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_s64",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_u8",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_u16",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_u32",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_u64",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "encode_var",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_string_from_ascii",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_string_from_utf8",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_string_from_utf16",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_string_from_utf32",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_string_from_wchar",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_encoded_var",
        "parameters": [
          {
            "name": "byte_offset",
            "type": "int"
          },
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "hex_encode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_float32_array",
        "parameters": [],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "to_float64_array",
        "parameters": [],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "to_int32_array",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "to_int64_array",
        "parameters": [],
        "return_type": "PackedInt64Array"
      }
    ],
    "name": "PackedByteArray",
    "parent": null,
    "properties": []
  },
  "PackedColorArray": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedColorArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedColorArray"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "Color"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedColorArray"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedColorArray",
    "parent": null,
    "properties": []
  },
  "PackedDataContainer": {
    "methods": [
      {
        "name": "pack",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "PackedDataContainer",
    "parent": "Resource",
    "properties": []
  },
  "PackedDataContainerRef": {
    "methods": [
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "PackedDataContainerRef",
    "parent": "RefCounted",
    "properties": []
  },
  "PackedFloat32Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedFloat32Array",
    "parent": null,
    "properties": []
  },
  "PackedFloat64Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedFloat64Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedFloat64Array",
    "parent": null,
    "properties": []
  },
  "PackedInt32Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedInt32Array",
    "parent": null,
    "properties": []
  },
  "PackedInt64Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedInt64Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedInt64Array",
    "parent": null,
    "properties": []
  },
  "PackedScene": {
    "methods": [
      {
        "name": "can_instantiate",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_state",
        "parameters": [],
        "return_type": "SceneState"
      },
      {
        "name": "instantiate",
        "parameters": [
          {
            "name": "edit_state",
            "type": "int"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "pack",
        "parameters": [
          {
            "name": "path",
            "type": "Node"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "PackedScene",
    "parent": "Resource",
    "properties": []
  },
  "PackedStringArray": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedStringArray",
    "parent": null,
    "properties": []
  },
  "PackedVector2Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "Vector2"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedVector2Array",
    "parent": null,
    "properties": []
  },
  "PackedVector3Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedVector3Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "Vector3"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedVector3Array",
    "parent": null,
    "properties": []
  },
  "PackedVector4Array": {
    "methods": [
      {
        "name": "append",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "append_array",
        "parameters": [
          {
            "name": "array",
            "type": "PackedVector4Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "bsearch",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          },
          {
            "name": "before",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "PackedVector4Array"
      },
      {
        "name": "fill",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "at_index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "push_back",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_at",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "new_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "value",
            "type": "Vector4"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector4"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "slice",
        "parameters": [
          {
            "name": "begin",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedVector4Array"
      },
      {
        "name": "sort",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "to_byte_array",
        "parameters": [],
        "return_type": "PackedByteArray"
      }
    ],
    "name": "PackedVector4Array",
    "parent": null,
    "properties": []
  },
  "PacketPeer": {
    "methods": [
      {
        "name": "get_available_packet_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_packet",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_packet_error",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_var",
        "parameters": [
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "put_packet",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "put_var",
        "parameters": [
          {
            "name": "var",
            "type": "Variant"
          },
          {
            "name": "full_objects",
            "type": "bool"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "PacketPeer",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "encode_buffer_max_size",
        "type": "int"
      }
    ]
  },
  "PacketPeerDTLS": {
    "methods": [
      {
        "name": "connect_to_peer",
        "parameters": [
          {
            "name": "packet_peer",
            "type": "PacketPeerUDP"
          },
          {
            "name": "hostname",
            "type": "String"
          },
          {
            "name": "client_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "disconnect_from_peer",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "PacketPeerDTLS",
    "parent": "PacketPeer",
    "properties": []
  },
  "PacketPeerExtension": {
    "methods": [
      {
        "name": "_get_available_packet_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_max_packet_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_packet",
        "parameters": [
          {
            "name": "r_buffer",
            "type": "const uint8_t **"
          },
          {
            "name": "r_buffer_size",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_put_packet",
        "parameters": [
          {
            "name": "p_buffer",
            "type": "const uint8_t*"
          },
          {
            "name": "p_buffer_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "PacketPeerExtension",
    "parent": "PacketPeer",
    "properties": []
  },
  "PacketPeerStream": {
    "methods": [],
    "name": "PacketPeerStream",
    "parent": "PacketPeer",
    "properties": [
      {
        "name": "input_buffer_max_size",
        "type": "int"
      },
      {
        "name": "output_buffer_max_size",
        "type": "int"
      },
      {
        "name": "stream_peer",
        "type": "StreamPeer"
      }
    ]
  },
  "PacketPeerUDP": {
    "methods": [
      {
        "name": "bind",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "bind_address",
            "type": "String"
          },
          {
            "name": "recv_buf_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "close",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "connect_to_host",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_local_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_packet_ip",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_packet_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_bound",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_socket_connected",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "join_multicast_group",
        "parameters": [
          {
            "name": "multicast_address",
            "type": "String"
          },
          {
            "name": "interface_name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "leave_multicast_group",
        "parameters": [
          {
            "name": "multicast_address",
            "type": "String"
          },
          {
            "name": "interface_name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_broadcast_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_dest_address",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "wait",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "PacketPeerUDP",
    "parent": "PacketPeer",
    "properties": []
  },
  "Panel": {
    "methods": [],
    "name": "Panel",
    "parent": "Control",
    "properties": []
  },
  "PanelContainer": {
    "methods": [],
    "name": "PanelContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "mouse_filter",
        "type": "int"
      }
    ]
  },
  "PanoramaSkyMaterial": {
    "methods": [],
    "name": "PanoramaSkyMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "energy_multiplier",
        "type": "float"
      },
      {
        "name": "filter",
        "type": "bool"
      },
      {
        "name": "panorama",
        "type": "Texture2D"
      }
    ]
  },
  "Parallax2D": {
    "methods": [],
    "name": "Parallax2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "autoscroll",
        "type": "Vector2"
      },
      {
        "name": "follow_viewport",
        "type": "bool"
      },
      {
        "name": "ignore_camera_scroll",
        "type": "bool"
      },
      {
        "name": "limit_begin",
        "type": "Vector2"
      },
      {
        "name": "limit_end",
        "type": "Vector2"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "repeat_size",
        "type": "Vector2"
      },
      {
        "name": "repeat_times",
        "type": "int"
      },
      {
        "name": "screen_offset",
        "type": "Vector2"
      },
      {
        "name": "scroll_offset",
        "type": "Vector2"
      },
      {
        "name": "scroll_scale",
        "type": "Vector2"
      }
    ]
  },
  "ParallaxBackground": {
    "methods": [],
    "name": "ParallaxBackground",
    "parent": "CanvasLayer",
    "properties": [
      {
        "name": "layer",
        "type": "int"
      },
      {
        "name": "scroll_base_offset",
        "type": "Vector2"
      },
      {
        "name": "scroll_base_scale",
        "type": "Vector2"
      },
      {
        "name": "scroll_ignore_camera_zoom",
        "type": "bool"
      },
      {
        "name": "scroll_limit_begin",
        "type": "Vector2"
      },
      {
        "name": "scroll_limit_end",
        "type": "Vector2"
      },
      {
        "name": "scroll_offset",
        "type": "Vector2"
      }
    ]
  },
  "ParallaxLayer": {
    "methods": [],
    "name": "ParallaxLayer",
    "parent": "Node2D",
    "properties": [
      {
        "name": "motion_mirroring",
        "type": "Vector2"
      },
      {
        "name": "motion_offset",
        "type": "Vector2"
      },
      {
        "name": "motion_scale",
        "type": "Vector2"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      }
    ]
  },
  "ParticleProcessMaterial": {
    "methods": [
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_param_texture",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_max",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_min",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_param_texture",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_particle_flag",
        "parameters": [
          {
            "name": "particle_flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ParticleProcessMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "alpha_curve",
        "type": "Texture2D"
      },
      {
        "name": "angle_curve",
        "type": "Texture2D"
      },
      {
        "name": "angle_max",
        "type": "float"
      },
      {
        "name": "angle_min",
        "type": "float"
      },
      {
        "name": "angular_velocity_curve",
        "type": "Texture2D"
      },
      {
        "name": "angular_velocity_max",
        "type": "float"
      },
      {
        "name": "angular_velocity_min",
        "type": "float"
      },
      {
        "name": "anim_offset_curve",
        "type": "Texture2D"
      },
      {
        "name": "anim_offset_max",
        "type": "float"
      },
      {
        "name": "anim_offset_min",
        "type": "float"
      },
      {
        "name": "anim_speed_curve",
        "type": "Texture2D"
      },
      {
        "name": "anim_speed_max",
        "type": "float"
      },
      {
        "name": "anim_speed_min",
        "type": "float"
      },
      {
        "name": "attractor_interaction_enabled",
        "type": "bool"
      },
      {
        "name": "collision_bounce",
        "type": "float"
      },
      {
        "name": "collision_friction",
        "type": "float"
      },
      {
        "name": "collision_mode",
        "type": "int"
      },
      {
        "name": "collision_use_scale",
        "type": "bool"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "color_initial_ramp",
        "type": "Texture2D"
      },
      {
        "name": "color_ramp",
        "type": "Texture2D"
      },
      {
        "name": "damping_curve",
        "type": "Texture2D"
      },
      {
        "name": "damping_max",
        "type": "float"
      },
      {
        "name": "damping_min",
        "type": "float"
      },
      {
        "name": "direction",
        "type": "Vector3"
      },
      {
        "name": "directional_velocity_curve",
        "type": "Texture2D"
      },
      {
        "name": "directional_velocity_max",
        "type": "float"
      },
      {
        "name": "directional_velocity_min",
        "type": "float"
      },
      {
        "name": "emission_box_extents",
        "type": "Vector3"
      },
      {
        "name": "emission_color_texture",
        "type": "Texture2D"
      },
      {
        "name": "emission_curve",
        "type": "Texture2D"
      },
      {
        "name": "emission_normal_texture",
        "type": "Texture2D"
      },
      {
        "name": "emission_point_count",
        "type": "int"
      },
      {
        "name": "emission_point_texture",
        "type": "Texture2D"
      },
      {
        "name": "emission_ring_axis",
        "type": "Vector3"
      },
      {
        "name": "emission_ring_cone_angle",
        "type": "float"
      },
      {
        "name": "emission_ring_height",
        "type": "float"
      },
      {
        "name": "emission_ring_inner_radius",
        "type": "float"
      },
      {
        "name": "emission_ring_radius",
        "type": "float"
      },
      {
        "name": "emission_shape",
        "type": "int"
      },
      {
        "name": "emission_shape_offset",
        "type": "Vector3"
      },
      {
        "name": "emission_shape_scale",
        "type": "Vector3"
      },
      {
        "name": "emission_sphere_radius",
        "type": "float"
      },
      {
        "name": "flatness",
        "type": "float"
      },
      {
        "name": "gravity",
        "type": "Vector3"
      },
      {
        "name": "hue_variation_curve",
        "type": "Texture2D"
      },
      {
        "name": "hue_variation_max",
        "type": "float"
      },
      {
        "name": "hue_variation_min",
        "type": "float"
      },
      {
        "name": "inherit_velocity_ratio",
        "type": "float"
      },
      {
        "name": "initial_velocity_max",
        "type": "float"
      },
      {
        "name": "initial_velocity_min",
        "type": "float"
      },
      {
        "name": "lifetime_randomness",
        "type": "float"
      },
      {
        "name": "linear_accel_curve",
        "type": "Texture2D"
      },
      {
        "name": "linear_accel_max",
        "type": "float"
      },
      {
        "name": "linear_accel_min",
        "type": "float"
      },
      {
        "name": "orbit_velocity_curve",
        "type": "Texture2D"
      },
      {
        "name": "orbit_velocity_max",
        "type": "float"
      },
      {
        "name": "orbit_velocity_min",
        "type": "float"
      },
      {
        "name": "particle_flag_align_y",
        "type": "bool"
      },
      {
        "name": "particle_flag_damping_as_friction",
        "type": "bool"
      },
      {
        "name": "particle_flag_disable_z",
        "type": "bool"
      },
      {
        "name": "particle_flag_rotate_y",
        "type": "bool"
      },
      {
        "name": "radial_accel_curve",
        "type": "Texture2D"
      },
      {
        "name": "radial_accel_max",
        "type": "float"
      },
      {
        "name": "radial_accel_min",
        "type": "float"
      },
      {
        "name": "radial_velocity_curve",
        "type": "Texture2D"
      },
      {
        "name": "radial_velocity_max",
        "type": "float"
      },
      {
        "name": "radial_velocity_min",
        "type": "float"
      },
      {
        "name": "scale_curve",
        "type": "Texture2D"
      },
      {
        "name": "scale_max",
        "type": "float"
      },
      {
        "name": "scale_min",
        "type": "float"
      },
      {
        "name": "scale_over_velocity_curve",
        "type": "Texture2D"
      },
      {
        "name": "scale_over_velocity_max",
        "type": "float"
      },
      {
        "name": "scale_over_velocity_min",
        "type": "float"
      },
      {
        "name": "spread",
        "type": "float"
      },
      {
        "name": "sub_emitter_amount_at_collision",
        "type": "int"
      },
      {
        "name": "sub_emitter_amount_at_end",
        "type": "int"
      },
      {
        "name": "sub_emitter_amount_at_start",
        "type": "int"
      },
      {
        "name": "sub_emitter_frequency",
        "type": "float"
      },
      {
        "name": "sub_emitter_keep_velocity",
        "type": "bool"
      },
      {
        "name": "sub_emitter_mode",
        "type": "int"
      },
      {
        "name": "tangential_accel_curve",
        "type": "Texture2D"
      },
      {
        "name": "tangential_accel_max",
        "type": "float"
      },
      {
        "name": "tangential_accel_min",
        "type": "float"
      },
      {
        "name": "turbulence_enabled",
        "type": "bool"
      },
      {
        "name": "turbulence_influence_max",
        "type": "float"
      },
      {
        "name": "turbulence_influence_min",
        "type": "float"
      },
      {
        "name": "turbulence_influence_over_life",
        "type": "Texture2D"
      },
      {
        "name": "turbulence_initial_displacement_max",
        "type": "float"
      },
      {
        "name": "turbulence_initial_displacement_min",
        "type": "float"
      },
      {
        "name": "turbulence_noise_scale",
        "type": "float"
      },
      {
        "name": "turbulence_noise_speed",
        "type": "Vector3"
      },
      {
        "name": "turbulence_noise_speed_random",
        "type": "float"
      },
      {
        "name": "turbulence_noise_strength",
        "type": "float"
      },
      {
        "name": "velocity_limit_curve",
        "type": "Texture2D"
      },
      {
        "name": "velocity_pivot",
        "type": "Vector3"
      }
    ]
  },
  "Path2D": {
    "methods": [],
    "name": "Path2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "curve",
        "type": "Curve2D"
      }
    ]
  },
  "Path3D": {
    "methods": [],
    "name": "Path3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "curve",
        "type": "Curve3D"
      }
    ]
  },
  "PathFollow2D": {
    "methods": [],
    "name": "PathFollow2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "cubic_interp",
        "type": "bool"
      },
      {
        "name": "h_offset",
        "type": "float"
      },
      {
        "name": "loop",
        "type": "bool"
      },
      {
        "name": "progress",
        "type": "float"
      },
      {
        "name": "progress_ratio",
        "type": "float"
      },
      {
        "name": "rotates",
        "type": "bool"
      },
      {
        "name": "v_offset",
        "type": "float"
      }
    ]
  },
  "PathFollow3D": {
    "methods": [
      {
        "name": "correct_posture",
        "parameters": [
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "rotation_mode",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      }
    ],
    "name": "PathFollow3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "cubic_interp",
        "type": "bool"
      },
      {
        "name": "h_offset",
        "type": "float"
      },
      {
        "name": "loop",
        "type": "bool"
      },
      {
        "name": "progress",
        "type": "float"
      },
      {
        "name": "progress_ratio",
        "type": "float"
      },
      {
        "name": "rotation_mode",
        "type": "int"
      },
      {
        "name": "tilt_enabled",
        "type": "bool"
      },
      {
        "name": "use_model_front",
        "type": "bool"
      },
      {
        "name": "v_offset",
        "type": "float"
      }
    ]
  },
  "Performance": {
    "methods": [
      {
        "name": "add_custom_monitor",
        "parameters": [
          {
            "name": "id",
            "type": "StringName"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "arguments",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_custom_monitor",
        "parameters": [
          {
            "name": "id",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_custom_monitor_names",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "get_monitor",
        "parameters": [
          {
            "name": "monitor",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_monitor_modification_time",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_custom_monitor",
        "parameters": [
          {
            "name": "id",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_custom_monitor",
        "parameters": [
          {
            "name": "id",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Performance",
    "parent": "Object",
    "properties": []
  },
  "PhysicalBone2D": {
    "methods": [
      {
        "name": "get_joint",
        "parameters": [],
        "return_type": "Joint2D"
      },
      {
        "name": "is_simulating_physics",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "PhysicalBone2D",
    "parent": "RigidBody2D",
    "properties": [
      {
        "name": "auto_configure_joint",
        "type": "bool"
      },
      {
        "name": "bone2d_index",
        "type": "int"
      },
      {
        "name": "bone2d_nodepath",
        "type": "NodePath"
      },
      {
        "name": "follow_bone_when_simulating",
        "type": "bool"
      },
      {
        "name": "simulate_physics",
        "type": "bool"
      }
    ]
  },
  "PhysicalBone3D": {
    "methods": [
      {
        "name": "_integrate_forces",
        "parameters": [
          {
            "name": "state",
            "type": "PhysicsDirectBodyState3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bone_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_simulate_physics",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_simulating_physics",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "PhysicalBone3D",
    "parent": "PhysicsBody3D",
    "properties": [
      {
        "name": "angular_damp",
        "type": "float"
      },
      {
        "name": "angular_damp_mode",
        "type": "int"
      },
      {
        "name": "angular_velocity",
        "type": "Vector3"
      },
      {
        "name": "body_offset",
        "type": "Transform3D"
      },
      {
        "name": "bounce",
        "type": "float"
      },
      {
        "name": "can_sleep",
        "type": "bool"
      },
      {
        "name": "custom_integrator",
        "type": "bool"
      },
      {
        "name": "friction",
        "type": "float"
      },
      {
        "name": "gravity_scale",
        "type": "float"
      },
      {
        "name": "joint_offset",
        "type": "Transform3D"
      },
      {
        "name": "joint_rotation",
        "type": "Vector3"
      },
      {
        "name": "joint_type",
        "type": "int"
      },
      {
        "name": "linear_damp",
        "type": "float"
      },
      {
        "name": "linear_damp_mode",
        "type": "int"
      },
      {
        "name": "linear_velocity",
        "type": "Vector3"
      },
      {
        "name": "mass",
        "type": "float"
      }
    ]
  },
  "PhysicalBoneSimulator3D": {
    "methods": [
      {
        "name": "is_simulating_physics",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "physical_bones_add_collision_exception",
        "parameters": [
          {
            "name": "exception",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_remove_collision_exception",
        "parameters": [
          {
            "name": "exception",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_start_simulation",
        "parameters": [
          {
            "name": "bones",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_stop_simulation",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "PhysicalBoneSimulator3D",
    "parent": "SkeletonModifier3D",
    "properties": []
  },
  "PhysicalSkyMaterial": {
    "methods": [],
    "name": "PhysicalSkyMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "energy_multiplier",
        "type": "float"
      },
      {
        "name": "ground_color",
        "type": "Color"
      },
      {
        "name": "mie_coefficient",
        "type": "float"
      },
      {
        "name": "mie_color",
        "type": "Color"
      },
      {
        "name": "mie_eccentricity",
        "type": "float"
      },
      {
        "name": "night_sky",
        "type": "Texture2D"
      },
      {
        "name": "rayleigh_coefficient",
        "type": "float"
      },
      {
        "name": "rayleigh_color",
        "type": "Color"
      },
      {
        "name": "sun_disk_scale",
        "type": "float"
      },
      {
        "name": "turbidity",
        "type": "float"
      },
      {
        "name": "use_debanding",
        "type": "bool"
      }
    ]
  },
  "PhysicsBody2D": {
    "methods": [
      {
        "name": "add_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_collision_exceptions",
        "parameters": [],
        "return_type": "PhysicsBody2D[]"
      },
      {
        "name": "get_gravity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "move_and_collide",
        "parameters": [
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "test_only",
            "type": "bool"
          },
          {
            "name": "safe_margin",
            "type": "float"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          }
        ],
        "return_type": "KinematicCollision2D"
      },
      {
        "name": "remove_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "test_move",
        "parameters": [
          {
            "name": "from",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "collision",
            "type": "KinematicCollision2D"
          },
          {
            "name": "safe_margin",
            "type": "float"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsBody2D",
    "parent": "CollisionObject2D",
    "properties": [
      {
        "name": "input_pickable",
        "type": "bool"
      }
    ]
  },
  "PhysicsBody3D": {
    "methods": [
      {
        "name": "add_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_axis_lock",
        "parameters": [
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_exceptions",
        "parameters": [],
        "return_type": "PhysicsBody3D[]"
      },
      {
        "name": "get_gravity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "move_and_collide",
        "parameters": [
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "test_only",
            "type": "bool"
          },
          {
            "name": "safe_margin",
            "type": "float"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          },
          {
            "name": "max_collisions",
            "type": "int"
          }
        ],
        "return_type": "KinematicCollision3D"
      },
      {
        "name": "remove_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_axis_lock",
        "parameters": [
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "lock",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "test_move",
        "parameters": [
          {
            "name": "from",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "collision",
            "type": "KinematicCollision3D"
          },
          {
            "name": "safe_margin",
            "type": "float"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          },
          {
            "name": "max_collisions",
            "type": "int"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsBody3D",
    "parent": "CollisionObject3D",
    "properties": [
      {
        "name": "axis_lock_angular_x",
        "type": "bool"
      },
      {
        "name": "axis_lock_angular_y",
        "type": "bool"
      },
      {
        "name": "axis_lock_angular_z",
        "type": "bool"
      },
      {
        "name": "axis_lock_linear_x",
        "type": "bool"
      },
      {
        "name": "axis_lock_linear_y",
        "type": "bool"
      },
      {
        "name": "axis_lock_linear_z",
        "type": "bool"
      }
    ]
  },
  "PhysicsDirectBodyState2D": {
    "methods": [
      {
        "name": "add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_constant_force",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_constant_torque",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_contact_collider",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_contact_collider_id",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_collider_object",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_contact_collider_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_contact_collider_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_collider_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_contact_impulse",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_contact_local_normal",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_contact_local_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_contact_local_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_local_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_space_state",
        "parameters": [],
        "return_type": "PhysicsDirectSpaceState2D"
      },
      {
        "name": "get_velocity_at_local_position",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "integrate_forces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsDirectBodyState2D",
    "parent": "Object",
    "properties": [
      {
        "name": "angular_velocity",
        "type": "float"
      },
      {
        "name": "center_of_mass",
        "type": "Vector2"
      },
      {
        "name": "center_of_mass_local",
        "type": "Vector2"
      },
      {
        "name": "inverse_inertia",
        "type": "float"
      },
      {
        "name": "inverse_mass",
        "type": "float"
      },
      {
        "name": "linear_velocity",
        "type": "Vector2"
      },
      {
        "name": "sleeping",
        "type": "bool"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "total_angular_damp",
        "type": "float"
      },
      {
        "name": "total_gravity",
        "type": "Vector2"
      },
      {
        "name": "total_linear_damp",
        "type": "float"
      },
      {
        "name": "transform",
        "type": "Transform2D"
      }
    ]
  },
  "PhysicsDirectBodyState2DExtension": {
    "methods": [
      {
        "name": "_add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_torque_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_angular_velocity",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_center_of_mass",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_center_of_mass_local",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_constant_force",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_constant_torque",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_contact_collider",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_get_contact_collider_id",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_collider_object",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "_get_contact_collider_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_contact_collider_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_collider_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_contact_impulse",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_contact_local_normal",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_contact_local_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_contact_local_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_local_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_inverse_inertia",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_inverse_mass",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_linear_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_space_state",
        "parameters": [],
        "return_type": "PhysicsDirectSpaceState2D"
      },
      {
        "name": "_get_step",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_total_angular_damp",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_total_gravity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_total_linear_damp",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "_get_velocity_at_local_position",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_integrate_forces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_is_sleeping",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_set_angular_velocity",
        "parameters": [
          {
            "name": "velocity",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_linear_velocity",
        "parameters": [
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_sleep_state",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_transform",
        "parameters": [
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsDirectBodyState2DExtension",
    "parent": "PhysicsDirectBodyState2D",
    "properties": []
  },
  "PhysicsDirectBodyState3D": {
    "methods": [
      {
        "name": "add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_constant_force",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_constant_torque",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_collider",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_contact_collider_id",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_collider_object",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_contact_collider_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_collider_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_collider_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_contact_impulse",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_local_normal",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_local_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_local_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_contact_local_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_space_state",
        "parameters": [],
        "return_type": "PhysicsDirectSpaceState3D"
      },
      {
        "name": "get_velocity_at_local_position",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "integrate_forces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsDirectBodyState3D",
    "parent": "Object",
    "properties": [
      {
        "name": "angular_velocity",
        "type": "Vector3"
      },
      {
        "name": "center_of_mass",
        "type": "Vector3"
      },
      {
        "name": "center_of_mass_local",
        "type": "Vector3"
      },
      {
        "name": "inverse_inertia",
        "type": "Vector3"
      },
      {
        "name": "inverse_inertia_tensor",
        "type": "Basis"
      },
      {
        "name": "inverse_mass",
        "type": "float"
      },
      {
        "name": "linear_velocity",
        "type": "Vector3"
      },
      {
        "name": "principal_inertia_axes",
        "type": "Basis"
      },
      {
        "name": "sleeping",
        "type": "bool"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "total_angular_damp",
        "type": "float"
      },
      {
        "name": "total_gravity",
        "type": "Vector3"
      },
      {
        "name": "total_linear_damp",
        "type": "float"
      },
      {
        "name": "transform",
        "type": "Transform3D"
      }
    ]
  },
  "PhysicsDirectBodyState3DExtension": {
    "methods": [
      {
        "name": "_add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_apply_torque_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_angular_velocity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_center_of_mass",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_center_of_mass_local",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_constant_force",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_constant_torque",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_collider",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_get_contact_collider_id",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_collider_object",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "_get_contact_collider_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_collider_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_collider_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_contact_impulse",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_local_normal",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_local_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_contact_local_shape",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_contact_local_velocity_at_position",
        "parameters": [
          {
            "name": "contact_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_inverse_inertia",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_inverse_inertia_tensor",
        "parameters": [],
        "return_type": "Basis"
      },
      {
        "name": "_get_inverse_mass",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_linear_velocity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_principal_inertia_axes",
        "parameters": [],
        "return_type": "Basis"
      },
      {
        "name": "_get_space_state",
        "parameters": [],
        "return_type": "PhysicsDirectSpaceState3D"
      },
      {
        "name": "_get_step",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_total_angular_damp",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_total_gravity",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "_get_total_linear_damp",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "_get_velocity_at_local_position",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_integrate_forces",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_is_sleeping",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_set_angular_velocity",
        "parameters": [
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_linear_velocity",
        "parameters": [
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_sleep_state",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_transform",
        "parameters": [
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsDirectBodyState3DExtension",
    "parent": "PhysicsDirectBodyState3D",
    "properties": []
  },
  "PhysicsDirectSpaceState2D": {
    "methods": [
      {
        "name": "cast_motion",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters2D"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "collide_shape",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters2D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Vector2[]"
      },
      {
        "name": "get_rest_info",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters2D"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "intersect_point",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsPointQueryParameters2D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "intersect_ray",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsRayQueryParameters2D"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "intersect_shape",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters2D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      }
    ],
    "name": "PhysicsDirectSpaceState2D",
    "parent": "Object",
    "properties": []
  },
  "PhysicsDirectSpaceState2DExtension": {
    "methods": [
      {
        "name": "_cast_motion",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "closest_safe",
            "type": "float*"
          },
          {
            "name": "closest_unsafe",
            "type": "float*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_collide_shape",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "results",
            "type": "void*"
          },
          {
            "name": "max_results",
            "type": "int"
          },
          {
            "name": "result_count",
            "type": "int32_t*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_intersect_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "canvas_instance_id",
            "type": "int"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "results",
            "type": "PhysicsServer2DExtensionShapeResult*"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_intersect_ray",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "hit_from_inside",
            "type": "bool"
          },
          {
            "name": "result",
            "type": "PhysicsServer2DExtensionRayResult*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_intersect_shape",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "result",
            "type": "PhysicsServer2DExtensionShapeResult*"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_rest_info",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "rest_info",
            "type": "PhysicsServer2DExtensionShapeRestInfo*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_body_excluded_from_query",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsDirectSpaceState2DExtension",
    "parent": "PhysicsDirectSpaceState2D",
    "properties": []
  },
  "PhysicsDirectSpaceState3D": {
    "methods": [
      {
        "name": "cast_motion",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters3D"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "collide_shape",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters3D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Vector3[]"
      },
      {
        "name": "get_rest_info",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters3D"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "intersect_point",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsPointQueryParameters3D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "intersect_ray",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsRayQueryParameters3D"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "intersect_shape",
        "parameters": [
          {
            "name": "parameters",
            "type": "PhysicsShapeQueryParameters3D"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      }
    ],
    "name": "PhysicsDirectSpaceState3D",
    "parent": "Object",
    "properties": []
  },
  "PhysicsDirectSpaceState3DExtension": {
    "methods": [
      {
        "name": "_cast_motion",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "closest_safe",
            "type": "float*"
          },
          {
            "name": "closest_unsafe",
            "type": "float*"
          },
          {
            "name": "info",
            "type": "PhysicsServer3DExtensionShapeRestInfo*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_collide_shape",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "results",
            "type": "void*"
          },
          {
            "name": "max_results",
            "type": "int"
          },
          {
            "name": "result_count",
            "type": "int32_t*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_closest_point_to_object_volume",
        "parameters": [
          {
            "name": "object",
            "type": "RID"
          },
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_intersect_point",
        "parameters": [
          {
            "name": "position",
            "type": "Vector3"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "results",
            "type": "PhysicsServer3DExtensionShapeResult*"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_intersect_ray",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "hit_from_inside",
            "type": "bool"
          },
          {
            "name": "hit_back_faces",
            "type": "bool"
          },
          {
            "name": "pick_ray",
            "type": "bool"
          },
          {
            "name": "result",
            "type": "PhysicsServer3DExtensionRayResult*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_intersect_shape",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "result_count",
            "type": "PhysicsServer3DExtensionShapeResult*"
          },
          {
            "name": "max_results",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_rest_info",
        "parameters": [
          {
            "name": "shape_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "collide_with_bodies",
            "type": "bool"
          },
          {
            "name": "collide_with_areas",
            "type": "bool"
          },
          {
            "name": "rest_info",
            "type": "PhysicsServer3DExtensionShapeRestInfo*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_body_excluded_from_query",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsDirectSpaceState3DExtension",
    "parent": "PhysicsDirectSpaceState3D",
    "properties": []
  },
  "PhysicsMaterial": {
    "methods": [],
    "name": "PhysicsMaterial",
    "parent": "Resource",
    "properties": [
      {
        "name": "absorbent",
        "type": "bool"
      },
      {
        "name": "bounce",
        "type": "float"
      },
      {
        "name": "friction",
        "type": "float"
      },
      {
        "name": "rough",
        "type": "bool"
      }
    ]
  },
  "PhysicsPointQueryParameters2D": {
    "methods": [],
    "name": "PhysicsPointQueryParameters2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "canvas_instance_id",
        "type": "int"
      },
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "position",
        "type": "Vector2"
      }
    ]
  },
  "PhysicsPointQueryParameters3D": {
    "methods": [],
    "name": "PhysicsPointQueryParameters3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "position",
        "type": "Vector3"
      }
    ]
  },
  "PhysicsRayQueryParameters2D": {
    "methods": [
      {
        "name": "create",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "exclude",
            "type": "RID[]"
          }
        ],
        "return_type": "PhysicsRayQueryParameters2D"
      }
    ],
    "name": "PhysicsRayQueryParameters2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "from",
        "type": "Vector2"
      },
      {
        "name": "hit_from_inside",
        "type": "bool"
      },
      {
        "name": "to",
        "type": "Vector2"
      }
    ]
  },
  "PhysicsRayQueryParameters3D": {
    "methods": [
      {
        "name": "create",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "collision_mask",
            "type": "int"
          },
          {
            "name": "exclude",
            "type": "RID[]"
          }
        ],
        "return_type": "PhysicsRayQueryParameters3D"
      }
    ],
    "name": "PhysicsRayQueryParameters3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "from",
        "type": "Vector3"
      },
      {
        "name": "hit_back_faces",
        "type": "bool"
      },
      {
        "name": "hit_from_inside",
        "type": "bool"
      },
      {
        "name": "to",
        "type": "Vector3"
      }
    ]
  },
  "PhysicsServer2D": {
    "methods": [
      {
        "name": "area_add_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_attach_canvas_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_attach_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_clear_shapes",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "area_get_canvas_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "area_get_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "area_get_shape_count",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "area_get_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "area_get_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "area_remove_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_area_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_monitorable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "monitorable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape_disabled",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_central_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_torque_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_attach_canvas_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_attach_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_clear_shapes",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "body_get_canvas_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "body_get_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "body_get_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "body_get_continuous_collision_detection_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_direct_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectBodyState2D"
      },
      {
        "name": "body_get_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "body_get_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "body_get_shape_count",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "body_is_omitting_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_remove_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_reset_mass_properties",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_axis_velocity",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis_velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_continuous_collision_detection_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_force_integration_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_omit_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape_as_one_way_collision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape_disabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_state_sync_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_test_motion",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "parameters",
            "type": "PhysicsTestMotionParameters2D"
          },
          {
            "name": "result",
            "type": "PhysicsTestMotionResult2D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "capsule_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "circle_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "concave_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "convex_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "damped_spring_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "damped_spring_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_process_info",
        "parameters": [
          {
            "name": "process_info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "joint_clear",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "joint_disable_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "joint_get_type",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "joint_is_disabled_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "joint_make_damped_spring",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "anchor_a",
            "type": "Vector2"
          },
          {
            "name": "anchor_b",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_groove",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "groove1_a",
            "type": "Vector2"
          },
          {
            "name": "groove2_a",
            "type": "Vector2"
          },
          {
            "name": "anchor_b",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_pin",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "anchor",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "pin_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "pin_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "pin_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "pin_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rectangle_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "segment_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "separation_ray_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_get_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "shape_get_type",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_set_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "space_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "space_get_direct_state",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectSpaceState2D"
      },
      {
        "name": "space_get_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "space_is_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "space_set_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "space_set_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "world_boundary_shape_create",
        "parameters": [],
        "return_type": "RID"
      }
    ],
    "name": "PhysicsServer2D",
    "parent": "Object",
    "properties": []
  },
  "PhysicsServer2DExtension": {
    "methods": [
      {
        "name": "_area_add_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_attach_canvas_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_attach_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_clear_shapes",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_area_get_canvas_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_area_get_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_area_get_shape_count",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "_area_get_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_area_get_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "_area_remove_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_area_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_monitorable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "monitorable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_pickable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "pickable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape_disabled",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_central_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_torque_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_attach_canvas_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_attach_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_clear_shapes",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_collide_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "body_shape",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "shape_xform",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "results",
            "type": "void*"
          },
          {
            "name": "result_max",
            "type": "int"
          },
          {
            "name": "result_count",
            "type": "int32_t*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_body_get_canvas_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_collision_exceptions",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "_body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_body_get_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_body_get_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_body_get_contacts_reported_depth_threshold",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_body_get_continuous_collision_detection_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_direct_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectBodyState2D"
      },
      {
        "name": "_body_get_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_body_get_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_body_get_shape_count",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "_body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_body_is_omitting_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_remove_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_reset_mass_properties",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_axis_velocity",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis_velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_contacts_reported_depth_threshold",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "threshold",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_continuous_collision_detection_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_force_integration_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_omit_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_pickable",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "pickable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape_as_one_way_collision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape_disabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_state_sync_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_test_motion",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "from",
            "type": "Transform2D"
          },
          {
            "name": "motion",
            "type": "Vector2"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "collide_separation_ray",
            "type": "bool"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          },
          {
            "name": "result",
            "type": "PhysicsServer2DExtensionMotionResult*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_capsule_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_circle_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_concave_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_convex_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_damped_spring_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_damped_spring_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_end_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_finish",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_flush_queries",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_process_info",
        "parameters": [
          {
            "name": "process_info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_init",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_is_flushing_queries",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_joint_clear",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_joint_disable_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_joint_get_type",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_joint_is_disabled_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_joint_make_damped_spring",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "anchor_a",
            "type": "Vector2"
          },
          {
            "name": "anchor_b",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_groove",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "a_groove1",
            "type": "Vector2"
          },
          {
            "name": "a_groove2",
            "type": "Vector2"
          },
          {
            "name": "b_anchor",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_pin",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "anchor",
            "type": "Vector2"
          },
          {
            "name": "body_a",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pin_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_pin_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_pin_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pin_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_rectangle_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_segment_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_separation_ray_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_set_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shape_collide",
        "parameters": [
          {
            "name": "shape_A",
            "type": "RID"
          },
          {
            "name": "xform_A",
            "type": "Transform2D"
          },
          {
            "name": "motion_A",
            "type": "Vector2"
          },
          {
            "name": "shape_B",
            "type": "RID"
          },
          {
            "name": "xform_B",
            "type": "Transform2D"
          },
          {
            "name": "motion_B",
            "type": "Vector2"
          },
          {
            "name": "results",
            "type": "void*"
          },
          {
            "name": "result_max",
            "type": "int"
          },
          {
            "name": "result_count",
            "type": "int32_t*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shape_get_custom_solver_bias",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shape_get_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_shape_get_type",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shape_set_custom_solver_bias",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shape_set_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_space_get_contact_count",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_space_get_contacts",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "_space_get_direct_state",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectSpaceState2D"
      },
      {
        "name": "_space_get_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_space_is_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_space_set_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_set_debug_contacts",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "max_contacts",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_set_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_step",
        "parameters": [
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_world_boundary_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "body_test_motion_is_excluding_body",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_test_motion_is_excluding_object",
        "parameters": [
          {
            "name": "object",
            "type": "int"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsServer2DExtension",
    "parent": "PhysicsServer2D",
    "properties": []
  },
  "PhysicsServer2DManager": {
    "methods": [
      {
        "name": "register_server",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "create_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_default_server",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsServer2DManager",
    "parent": "Object",
    "properties": []
  },
  "PhysicsServer3D": {
    "methods": [
      {
        "name": "area_add_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_attach_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_clear_shapes",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "area_get_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "area_get_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "area_get_shape_count",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "area_get_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "area_get_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "area_get_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "area_remove_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_area_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_monitorable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "monitorable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_ray_pickable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape_disabled",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "area_set_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_add_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_central_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_apply_torque_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_attach_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_clear_shapes",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "body_get_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "body_get_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "body_get_direct_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectBodyState3D"
      },
      {
        "name": "body_get_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "body_get_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "body_get_shape_count",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "body_get_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "body_is_axis_locked",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_is_continuous_collision_detection_enabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_is_omitting_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_remove_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_reset_mass_properties",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_axis_lock",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "lock",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_axis_velocity",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis_velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_enable_continuous_collision_detection",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_force_integration_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_omit_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_ray_pickable",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape_disabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_set_state_sync_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "body_test_motion",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "parameters",
            "type": "PhysicsTestMotionParameters3D"
          },
          {
            "name": "result",
            "type": "PhysicsTestMotionResult3D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "box_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "capsule_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "concave_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "cone_twist_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cone_twist_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "convex_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "custom_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "cylinder_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "generic_6dof_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "generic_6dof_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "generic_6dof_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "generic_6dof_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_process_info",
        "parameters": [
          {
            "name": "process_info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "heightmap_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "hinge_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "hinge_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "hinge_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "hinge_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_clear",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "joint_disable_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_get_solver_priority",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "joint_get_type",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "joint_is_disabled_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "joint_make_cone_twist",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_generic_6dof",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_hinge",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "hinge_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "hinge_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_pin",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_A",
            "type": "Vector3"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_B",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_make_slider",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "joint_set_solver_priority",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "pin_joint_get_local_a",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "pin_joint_get_local_b",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "pin_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "pin_joint_set_local_a",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "local_A",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "pin_joint_set_local_b",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "local_B",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "pin_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "separation_ray_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_get_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "shape_get_margin",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shape_get_type",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shape_set_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shape_set_margin",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "slider_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "slider_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "soft_body_get_bounds",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "soft_body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "soft_body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "soft_body_get_damping_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "soft_body_get_drag_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "soft_body_get_linear_stiffness",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "soft_body_get_point_global_position",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "soft_body_get_pressure_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "soft_body_get_simulation_precision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "soft_body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "soft_body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "soft_body_get_total_mass",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "soft_body_is_point_pinned",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "soft_body_move_point",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          },
          {
            "name": "global_position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_pin_point",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          },
          {
            "name": "pin",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_remove_all_pinned_points",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_damping_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "damping_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_drag_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "drag_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_linear_stiffness",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "stiffness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_mesh",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_pressure_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "pressure_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_ray_pickable",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_simulation_precision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "simulation_precision",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "variant",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_total_mass",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "total_mass",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_set_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "soft_body_update_rendering_server",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "rendering_server_handler",
            "type": "PhysicsServer3DRenderingServerHandler"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "space_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "space_get_direct_state",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectSpaceState3D"
      },
      {
        "name": "space_get_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "space_is_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "space_set_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "space_set_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sphere_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "world_boundary_shape_create",
        "parameters": [],
        "return_type": "RID"
      }
    ],
    "name": "PhysicsServer3D",
    "parent": "Object",
    "properties": []
  },
  "PhysicsServer3DExtension": {
    "methods": [
      {
        "name": "_area_add_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_attach_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_clear_shapes",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_area_get_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_object_instance_id",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_area_get_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_area_get_shape_count",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_area_get_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_area_get_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_area_get_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_area_remove_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_area_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_collision_layer",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_collision_mask",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_monitor_callback",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_monitorable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "monitorable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_param",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_ray_pickable",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape_disabled",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_shape_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_space",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_area_set_transform",
        "parameters": [
          {
            "name": "area",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_add_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_central_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_central_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_apply_torque_impulse",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_attach_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_clear_shapes",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_body_get_collision_exceptions",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "_body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_body_get_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_body_get_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_body_get_contacts_reported_depth_threshold",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_body_get_direct_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectBodyState3D"
      },
      {
        "name": "_body_get_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_object_instance_id",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_body_get_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_body_get_shape_count",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_get_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_body_get_user_flags",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_body_is_axis_locked",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_body_is_continuous_collision_detection_enabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_body_is_omitting_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "excepted_body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_remove_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_reset_mass_properties",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_axis_lock",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "lock",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_axis_velocity",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "axis_velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_collision_priority",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_constant_force",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_constant_torque",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_contacts_reported_depth_threshold",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "threshold",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_enable_continuous_collision_detection",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_force_integration_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "userdata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_max_contacts_reported",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_mode",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_omit_force_integration",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_param",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_ray_pickable",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape_disabled",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_shape_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "shape_idx",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_state_sync_callback",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_set_user_flags",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_body_test_motion",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "from",
            "type": "Transform3D"
          },
          {
            "name": "motion",
            "type": "Vector3"
          },
          {
            "name": "margin",
            "type": "float"
          },
          {
            "name": "max_collisions",
            "type": "int"
          },
          {
            "name": "collide_separation_ray",
            "type": "bool"
          },
          {
            "name": "recovery_as_collision",
            "type": "bool"
          },
          {
            "name": "result",
            "type": "PhysicsServer3DExtensionMotionResult*"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_box_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_capsule_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_concave_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_cone_twist_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_cone_twist_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_convex_polygon_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_custom_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_cylinder_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_end_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_finish",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_flush_queries",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_generic_6dof_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_generic_6dof_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_generic_6dof_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_generic_6dof_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "axis",
            "type": "int"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_process_info",
        "parameters": [
          {
            "name": "process_info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_heightmap_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_hinge_joint_get_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_hinge_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_hinge_joint_set_flag",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_hinge_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_init",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_is_flushing_queries",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_joint_clear",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_joint_disable_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_get_solver_priority",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_joint_get_type",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_joint_is_disabled_collisions_between_bodies",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_joint_make_cone_twist",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_generic_6dof",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_hinge",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "hinge_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "hinge_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_hinge_simple",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "pivot_A",
            "type": "Vector3"
          },
          {
            "name": "axis_A",
            "type": "Vector3"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "pivot_B",
            "type": "Vector3"
          },
          {
            "name": "axis_B",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_pin",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_A",
            "type": "Vector3"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_B",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_make_slider",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "body_A",
            "type": "RID"
          },
          {
            "name": "local_ref_A",
            "type": "Transform3D"
          },
          {
            "name": "body_B",
            "type": "RID"
          },
          {
            "name": "local_ref_B",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_joint_set_solver_priority",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pin_joint_get_local_a",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_pin_joint_get_local_b",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_pin_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_pin_joint_set_local_a",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "local_A",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pin_joint_set_local_b",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "local_B",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pin_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_separation_ray_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_set_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shape_get_custom_solver_bias",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shape_get_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_shape_get_margin",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shape_get_type",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shape_set_custom_solver_bias",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shape_set_data",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shape_set_margin",
        "parameters": [
          {
            "name": "shape",
            "type": "RID"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_slider_joint_get_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_slider_joint_set_param",
        "parameters": [
          {
            "name": "joint",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_add_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_soft_body_get_bounds",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "_soft_body_get_collision_exceptions",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID[]"
      },
      {
        "name": "_soft_body_get_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_soft_body_get_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_soft_body_get_damping_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_soft_body_get_drag_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_soft_body_get_linear_stiffness",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_soft_body_get_point_global_position",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_soft_body_get_pressure_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_soft_body_get_simulation_precision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_soft_body_get_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_soft_body_get_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_soft_body_get_total_mass",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_soft_body_is_point_pinned",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_soft_body_move_point",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          },
          {
            "name": "global_position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_pin_point",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "point_index",
            "type": "int"
          },
          {
            "name": "pin",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_remove_all_pinned_points",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_remove_collision_exception",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "body_b",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_collision_layer",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_collision_mask",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_damping_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "damping_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_drag_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "drag_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_linear_stiffness",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "linear_stiffness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_mesh",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_pressure_coefficient",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "pressure_coefficient",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_ray_pickable",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_simulation_precision",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "simulation_precision",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_space",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_state",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "state",
            "type": "int"
          },
          {
            "name": "variant",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_total_mass",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "total_mass",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_set_transform",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_soft_body_update_rendering_server",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          },
          {
            "name": "rendering_server_handler",
            "type": "PhysicsServer3DRenderingServerHandler"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_space_get_contact_count",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_space_get_contacts",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "_space_get_direct_state",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "PhysicsDirectSpaceState3D"
      },
      {
        "name": "_space_get_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_space_is_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_space_set_active",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_set_debug_contacts",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "max_contacts",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_space_set_param",
        "parameters": [
          {
            "name": "space",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_sphere_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_step",
        "parameters": [
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_world_boundary_shape_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "body_test_motion_is_excluding_body",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "body_test_motion_is_excluding_object",
        "parameters": [
          {
            "name": "object",
            "type": "int"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "PhysicsServer3DExtension",
    "parent": "PhysicsServer3D",
    "properties": []
  },
  "PhysicsServer3DManager": {
    "methods": [
      {
        "name": "register_server",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "create_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_default_server",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsServer3DManager",
    "parent": "Object",
    "properties": []
  },
  "PhysicsServer3DRenderingServerHandler": {
    "methods": [
      {
        "name": "_set_aabb",
        "parameters": [
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_normal",
        "parameters": [
          {
            "name": "vertex_id",
            "type": "int"
          },
          {
            "name": "normal",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_vertex",
        "parameters": [
          {
            "name": "vertex_id",
            "type": "int"
          },
          {
            "name": "vertex",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_aabb",
        "parameters": [
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_normal",
        "parameters": [
          {
            "name": "vertex_id",
            "type": "int"
          },
          {
            "name": "normal",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_vertex",
        "parameters": [
          {
            "name": "vertex_id",
            "type": "int"
          },
          {
            "name": "vertex",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PhysicsServer3DRenderingServerHandler",
    "parent": "Object",
    "properties": []
  },
  "PhysicsShapeQueryParameters2D": {
    "methods": [],
    "name": "PhysicsShapeQueryParameters2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "motion",
        "type": "Vector2"
      },
      {
        "name": "shape",
        "type": "Resource"
      },
      {
        "name": "shape_rid",
        "type": "RID"
      },
      {
        "name": "transform",
        "type": "Transform2D"
      }
    ]
  },
  "PhysicsShapeQueryParameters3D": {
    "methods": [],
    "name": "PhysicsShapeQueryParameters3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "exclude",
        "type": "RID[]"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "motion",
        "type": "Vector3"
      },
      {
        "name": "shape",
        "type": "Resource"
      },
      {
        "name": "shape_rid",
        "type": "RID"
      },
      {
        "name": "transform",
        "type": "Transform3D"
      }
    ]
  },
  "PhysicsTestMotionParameters2D": {
    "methods": [],
    "name": "PhysicsTestMotionParameters2D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_separation_ray",
        "type": "bool"
      },
      {
        "name": "exclude_bodies",
        "type": "RID[]"
      },
      {
        "name": "exclude_objects",
        "type": "int[]"
      },
      {
        "name": "from",
        "type": "Transform2D"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "motion",
        "type": "Vector2"
      },
      {
        "name": "recovery_as_collision",
        "type": "bool"
      }
    ]
  },
  "PhysicsTestMotionParameters3D": {
    "methods": [],
    "name": "PhysicsTestMotionParameters3D",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "collide_separation_ray",
        "type": "bool"
      },
      {
        "name": "exclude_bodies",
        "type": "RID[]"
      },
      {
        "name": "exclude_objects",
        "type": "int[]"
      },
      {
        "name": "from",
        "type": "Transform3D"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "max_collisions",
        "type": "int"
      },
      {
        "name": "motion",
        "type": "Vector3"
      },
      {
        "name": "recovery_as_collision",
        "type": "bool"
      }
    ]
  },
  "PhysicsTestMotionResult2D": {
    "methods": [
      {
        "name": "get_collider",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_collider_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collider_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collider_velocity",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_collision_depth",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_collision_local_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_normal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_collision_point",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_collision_safe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_collision_unsafe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_remainder",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_travel",
        "parameters": [],
        "return_type": "Vector2"
      }
    ],
    "name": "PhysicsTestMotionResult2D",
    "parent": "RefCounted",
    "properties": []
  },
  "PhysicsTestMotionResult3D": {
    "methods": [
      {
        "name": "get_collider",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_collider_id",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collider_rid",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collider_velocity",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_depth",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_collision_local_shape",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_normal",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_point",
        "parameters": [
          {
            "name": "collision_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_safe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_collision_unsafe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_remainder",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_travel",
        "parameters": [],
        "return_type": "Vector3"
      }
    ],
    "name": "PhysicsTestMotionResult3D",
    "parent": "RefCounted",
    "properties": []
  },
  "PinJoint2D": {
    "methods": [],
    "name": "PinJoint2D",
    "parent": "Joint2D",
    "properties": [
      {
        "name": "angular_limit_enabled",
        "type": "bool"
      },
      {
        "name": "angular_limit_lower",
        "type": "float"
      },
      {
        "name": "angular_limit_upper",
        "type": "float"
      },
      {
        "name": "motor_enabled",
        "type": "bool"
      },
      {
        "name": "motor_target_velocity",
        "type": "float"
      },
      {
        "name": "softness",
        "type": "float"
      }
    ]
  },
  "PinJoint3D": {
    "methods": [
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PinJoint3D",
    "parent": "Joint3D",
    "properties": [
      {
        "name": "params/bias",
        "type": "float"
      },
      {
        "name": "params/damping",
        "type": "float"
      },
      {
        "name": "params/impulse_clamp",
        "type": "float"
      }
    ]
  },
  "PlaceholderCubemap": {
    "methods": [],
    "name": "PlaceholderCubemap",
    "parent": "PlaceholderTextureLayered",
    "properties": []
  },
  "PlaceholderCubemapArray": {
    "methods": [],
    "name": "PlaceholderCubemapArray",
    "parent": "PlaceholderTextureLayered",
    "properties": []
  },
  "PlaceholderMaterial": {
    "methods": [],
    "name": "PlaceholderMaterial",
    "parent": "Material",
    "properties": []
  },
  "PlaceholderMesh": {
    "methods": [],
    "name": "PlaceholderMesh",
    "parent": "Mesh",
    "properties": [
      {
        "name": "aabb",
        "type": "AABB"
      }
    ]
  },
  "PlaceholderTexture2D": {
    "methods": [],
    "name": "PlaceholderTexture2D",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "PlaceholderTexture2DArray": {
    "methods": [],
    "name": "PlaceholderTexture2DArray",
    "parent": "PlaceholderTextureLayered",
    "properties": []
  },
  "PlaceholderTexture3D": {
    "methods": [],
    "name": "PlaceholderTexture3D",
    "parent": "Texture3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector3i"
      }
    ]
  },
  "PlaceholderTextureLayered": {
    "methods": [],
    "name": "PlaceholderTextureLayered",
    "parent": "TextureLayered",
    "properties": [
      {
        "name": "layers",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector2i"
      }
    ]
  },
  "Plane": {
    "methods": [
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_center",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          },
          {
            "name": "tolerance",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "intersect_3",
        "parameters": [
          {
            "name": "b",
            "type": "Plane"
          },
          {
            "name": "c",
            "type": "Plane"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "intersects_ray",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "dir",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "intersects_segment",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to_plane",
            "type": "Plane"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_point_over",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "normalized",
        "parameters": [],
        "return_type": "Plane"
      },
      {
        "name": "project",
        "parameters": [
          {
            "name": "point",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      }
    ],
    "name": "Plane",
    "parent": null,
    "properties": [
      {
        "name": "d",
        "type": "float"
      },
      {
        "name": "normal",
        "type": "Vector3"
      },
      {
        "name": "x",
        "type": "float"
      },
      {
        "name": "y",
        "type": "float"
      },
      {
        "name": "z",
        "type": "float"
      }
    ]
  },
  "PlaneMesh": {
    "methods": [],
    "name": "PlaneMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "center_offset",
        "type": "Vector3"
      },
      {
        "name": "orientation",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector2"
      },
      {
        "name": "subdivide_depth",
        "type": "int"
      },
      {
        "name": "subdivide_width",
        "type": "int"
      }
    ]
  },
  "PointLight2D": {
    "methods": [],
    "name": "PointLight2D",
    "parent": "Light2D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_scale",
        "type": "float"
      }
    ]
  },
  "PointMesh": {
    "methods": [],
    "name": "PointMesh",
    "parent": "PrimitiveMesh",
    "properties": []
  },
  "Polygon2D": {
    "methods": [
      {
        "name": "add_bone",
        "parameters": [
          {
            "name": "path",
            "type": "NodePath"
          },
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_bones",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "erase_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bone_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_bone_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_bone_weights",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "set_bone_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_weights",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Polygon2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "antialiased",
        "type": "bool"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "internal_vertex_count",
        "type": "int"
      },
      {
        "name": "invert_border",
        "type": "float"
      },
      {
        "name": "invert_enabled",
        "type": "bool"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "polygon",
        "type": "PackedVector2Array"
      },
      {
        "name": "polygons",
        "type": "Array"
      },
      {
        "name": "skeleton",
        "type": "NodePath"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_offset",
        "type": "Vector2"
      },
      {
        "name": "texture_rotation",
        "type": "float"
      },
      {
        "name": "texture_scale",
        "type": "Vector2"
      },
      {
        "name": "uv",
        "type": "PackedVector2Array"
      },
      {
        "name": "vertex_colors",
        "type": "PackedColorArray"
      }
    ]
  },
  "PolygonOccluder3D": {
    "methods": [],
    "name": "PolygonOccluder3D",
    "parent": "Occluder3D",
    "properties": [
      {
        "name": "polygon",
        "type": "PackedVector2Array"
      }
    ]
  },
  "PolygonPathFinder": {
    "methods": [
      {
        "name": "find_path",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_closest_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_intersections",
        "parameters": [
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_point_penalty",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "is_point_inside",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_point_penalty",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "penalty",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "setup",
        "parameters": [
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "connections",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PolygonPathFinder",
    "parent": "Resource",
    "properties": []
  },
  "Popup": {
    "methods": [],
    "name": "Popup",
    "parent": "Window",
    "properties": [
      {
        "name": "borderless",
        "type": "bool"
      },
      {
        "name": "popup_window",
        "type": "bool"
      },
      {
        "name": "transient",
        "type": "bool"
      },
      {
        "name": "unresizable",
        "type": "bool"
      },
      {
        "name": "visible",
        "type": "bool"
      },
      {
        "name": "wrap_controls",
        "type": "bool"
      }
    ]
  },
  "PopupMenu": {
    "methods": [
      {
        "name": "activate_item_by_event",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "for_global_only",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_check_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_check_shortcut",
        "parameters": [
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_check_item",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_check_shortcut",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_item",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_radio_check_item",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_radio_check_shortcut",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_icon_shortcut",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          },
          {
            "name": "allow_echo",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_multistate_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "max_states",
            "type": "int"
          },
          {
            "name": "default_state",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_radio_check_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_radio_check_shortcut",
        "parameters": [
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_separator",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_shortcut",
        "parameters": [
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "global",
            "type": "bool"
          },
          {
            "name": "allow_echo",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_submenu_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "submenu",
            "type": "String"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_submenu_node_item",
        "parameters": [
          {
            "name": "label",
            "type": "String"
          },
          {
            "name": "submenu",
            "type": "PopupMenu"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [
          {
            "name": "free_submenus",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_focused_item",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_item_accelerator",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_icon",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_item_icon_max_width",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_icon_modulate",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_item_id",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_indent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_index",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_language",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_metadata",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_item_multistate",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_multistate_max",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_shortcut",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Shortcut"
      },
      {
        "name": "get_item_submenu",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_submenu_node",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_item_text",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_item_text_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_item_tooltip",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_item_checkable",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_checked",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_disabled",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_radio_checkable",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_separator",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_item_shortcut_disabled",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_native_menu",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_system_menu",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_item",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scroll_to_item",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_focused_item",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_accelerator",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "accel",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_as_checkable",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_as_radio_checkable",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_as_separator",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_checked",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "checked",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_disabled",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon_max_width",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_icon_modulate",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_id",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_indent",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "indent",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_language",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_metadata",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_multistate",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "state",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_multistate_max",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "max_states",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_shortcut",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "shortcut",
            "type": "Shortcut"
          },
          {
            "name": "global",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_shortcut_disabled",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_submenu",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "submenu",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_submenu_node",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "submenu",
            "type": "PopupMenu"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_text_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_item_tooltip",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "toggle_item_checked",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "toggle_item_multistate",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PopupMenu",
    "parent": "Popup",
    "properties": [
      {
        "name": "allow_search",
        "type": "bool"
      },
      {
        "name": "hide_on_checkable_item_selection",
        "type": "bool"
      },
      {
        "name": "hide_on_item_selection",
        "type": "bool"
      },
      {
        "name": "hide_on_state_item_selection",
        "type": "bool"
      },
      {
        "name": "item_count",
        "type": "int"
      },
      {
        "name": "prefer_native_menu",
        "type": "bool"
      },
      {
        "name": "submenu_popup_delay",
        "type": "float"
      },
      {
        "name": "system_menu_id",
        "type": "int"
      },
      {
        "name": "transparent",
        "type": "bool"
      },
      {
        "name": "transparent_bg",
        "type": "bool"
      }
    ]
  },
  "PopupPanel": {
    "methods": [],
    "name": "PopupPanel",
    "parent": "Popup",
    "properties": [
      {
        "name": "transparent",
        "type": "bool"
      },
      {
        "name": "transparent_bg",
        "type": "bool"
      }
    ]
  },
  "PortableCompressedTexture2D": {
    "methods": [
      {
        "name": "create_from_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "compression_mode",
            "type": "int"
          },
          {
            "name": "normal_map",
            "type": "bool"
          },
          {
            "name": "lossy_quality",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_compression_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_keeping_all_compressed_buffers",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_keep_all_compressed_buffers",
        "parameters": [
          {
            "name": "keep",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "PortableCompressedTexture2D",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "keep_compressed_buffer",
        "type": "bool"
      },
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "size_override",
        "type": "Vector2"
      }
    ]
  },
  "PrimitiveMesh": {
    "methods": [
      {
        "name": "_create_mesh_array",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_mesh_arrays",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "request_update",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "PrimitiveMesh",
    "parent": "Mesh",
    "properties": [
      {
        "name": "add_uv2",
        "type": "bool"
      },
      {
        "name": "custom_aabb",
        "type": "AABB"
      },
      {
        "name": "flip_faces",
        "type": "bool"
      },
      {
        "name": "material",
        "type": "Material"
      },
      {
        "name": "uv2_padding",
        "type": "float"
      }
    ]
  },
  "PrismMesh": {
    "methods": [],
    "name": "PrismMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "left_to_right",
        "type": "float"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "subdivide_depth",
        "type": "int"
      },
      {
        "name": "subdivide_height",
        "type": "int"
      },
      {
        "name": "subdivide_width",
        "type": "int"
      }
    ]
  },
  "ProceduralSkyMaterial": {
    "methods": [],
    "name": "ProceduralSkyMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "energy_multiplier",
        "type": "float"
      },
      {
        "name": "ground_bottom_color",
        "type": "Color"
      },
      {
        "name": "ground_curve",
        "type": "float"
      },
      {
        "name": "ground_energy_multiplier",
        "type": "float"
      },
      {
        "name": "ground_horizon_color",
        "type": "Color"
      },
      {
        "name": "sky_cover",
        "type": "Texture2D"
      },
      {
        "name": "sky_cover_modulate",
        "type": "Color"
      },
      {
        "name": "sky_curve",
        "type": "float"
      },
      {
        "name": "sky_energy_multiplier",
        "type": "float"
      },
      {
        "name": "sky_horizon_color",
        "type": "Color"
      },
      {
        "name": "sky_top_color",
        "type": "Color"
      },
      {
        "name": "sun_angle_max",
        "type": "float"
      },
      {
        "name": "sun_curve",
        "type": "float"
      },
      {
        "name": "use_debanding",
        "type": "bool"
      }
    ]
  },
  "ProgressBar": {
    "methods": [],
    "name": "ProgressBar",
    "parent": "Range",
    "properties": [
      {
        "name": "editor_preview_indeterminate",
        "type": "bool"
      },
      {
        "name": "fill_mode",
        "type": "int"
      },
      {
        "name": "indeterminate",
        "type": "bool"
      },
      {
        "name": "show_percentage",
        "type": "bool"
      }
    ]
  },
  "ProjectSettings": {
    "methods": [
      {
        "name": "add_property_info",
        "parameters": [
          {
            "name": "hint",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_global_class_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_order",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "default_value",
            "type": "Variant"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_setting_with_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "globalize_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load_resource_pack",
        "parameters": [
          {
            "name": "pack",
            "type": "String"
          },
          {
            "name": "replace_files",
            "type": "bool"
          },
          {
            "name": "offset",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "localize_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "save",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "save_custom",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_as_basic",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "basic",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_as_internal",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "internal",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_initial_value",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_order",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_restart_if_changed",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "restart",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_setting",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ProjectSettings",
    "parent": "Object",
    "properties": [
      {
        "name": "animation/warnings/check_angle_interpolation_type_conflicting",
        "type": "bool"
      },
      {
        "name": "animation/warnings/check_invalid_track_paths",
        "type": "bool"
      },
      {
        "name": "application/boot_splash/bg_color",
        "type": "Color"
      },
      {
        "name": "application/boot_splash/fullsize",
        "type": "bool"
      },
      {
        "name": "application/boot_splash/image",
        "type": "String"
      },
      {
        "name": "application/boot_splash/minimum_display_time",
        "type": "int"
      },
      {
        "name": "application/boot_splash/show_image",
        "type": "bool"
      },
      {
        "name": "application/boot_splash/use_filter",
        "type": "bool"
      },
      {
        "name": "application/config/auto_accept_quit",
        "type": "bool"
      },
      {
        "name": "application/config/custom_user_dir_name",
        "type": "String"
      },
      {
        "name": "application/config/description",
        "type": "String"
      },
      {
        "name": "application/config/icon",
        "type": "String"
      },
      {
        "name": "application/config/macos_native_icon",
        "type": "String"
      },
      {
        "name": "application/config/name",
        "type": "String"
      },
      {
        "name": "application/config/name_localized",
        "type": "Dictionary"
      },
      {
        "name": "application/config/project_settings_override",
        "type": "String"
      },
      {
        "name": "application/config/quit_on_go_back",
        "type": "bool"
      },
      {
        "name": "application/config/use_custom_user_dir",
        "type": "bool"
      },
      {
        "name": "application/config/use_hidden_project_data_directory",
        "type": "bool"
      },
      {
        "name": "application/config/version",
        "type": "String"
      },
      {
        "name": "application/config/windows_native_icon",
        "type": "String"
      },
      {
        "name": "application/run/delta_smoothing",
        "type": "bool"
      },
      {
        "name": "application/run/disable_stderr",
        "type": "bool"
      },
      {
        "name": "application/run/disable_stdout",
        "type": "bool"
      },
      {
        "name": "application/run/enable_alt_space_menu",
        "type": "bool"
      },
      {
        "name": "application/run/flush_stdout_on_print",
        "type": "bool"
      },
      {
        "name": "application/run/flush_stdout_on_print.debug",
        "type": "bool"
      },
      {
        "name": "application/run/frame_delay_msec",
        "type": "int"
      },
      {
        "name": "application/run/low_processor_mode",
        "type": "bool"
      },
      {
        "name": "application/run/low_processor_mode_sleep_usec",
        "type": "int"
      },
      {
        "name": "application/run/main_loop_type",
        "type": "String"
      },
      {
        "name": "application/run/main_scene",
        "type": "String"
      },
      {
        "name": "application/run/max_fps",
        "type": "int"
      },
      {
        "name": "application/run/print_header",
        "type": "bool"
      },
      {
        "name": "audio/buses/channel_disable_threshold_db",
        "type": "float"
      },
      {
        "name": "audio/buses/channel_disable_time",
        "type": "float"
      },
      {
        "name": "audio/buses/default_bus_layout",
        "type": "String"
      },
      {
        "name": "audio/driver/driver",
        "type": "String"
      },
      {
        "name": "audio/driver/enable_input",
        "type": "bool"
      },
      {
        "name": "audio/driver/mix_rate",
        "type": "int"
      },
      {
        "name": "audio/driver/mix_rate.web",
        "type": "int"
      },
      {
        "name": "audio/driver/output_latency",
        "type": "int"
      },
      {
        "name": "audio/driver/output_latency.web",
        "type": "int"
      },
      {
        "name": "audio/general/2d_panning_strength",
        "type": "float"
      },
      {
        "name": "audio/general/3d_panning_strength",
        "type": "float"
      },
      {
        "name": "audio/general/default_playback_type",
        "type": "int"
      },
      {
        "name": "audio/general/default_playback_type.web",
        "type": "int"
      },
      {
        "name": "audio/general/ios/mix_with_others",
        "type": "bool"
      },
      {
        "name": "audio/general/ios/session_category",
        "type": "int"
      },
      {
        "name": "audio/general/text_to_speech",
        "type": "bool"
      },
      {
        "name": "audio/video/video_delay_compensation_ms",
        "type": "int"
      },
      {
        "name": "collada/use_ambient",
        "type": "bool"
      },
      {
        "name": "compression/formats/gzip/compression_level",
        "type": "int"
      },
      {
        "name": "compression/formats/zlib/compression_level",
        "type": "int"
      },
      {
        "name": "compression/formats/zstd/compression_level",
        "type": "int"
      },
      {
        "name": "compression/formats/zstd/long_distance_matching",
        "type": "bool"
      },
      {
        "name": "compression/formats/zstd/window_log_size",
        "type": "int"
      },
      {
        "name": "debug/canvas_items/debug_redraw_color",
        "type": "Color"
      },
      {
        "name": "debug/canvas_items/debug_redraw_time",
        "type": "float"
      },
      {
        "name": "debug/file_logging/enable_file_logging",
        "type": "bool"
      },
      {
        "name": "debug/file_logging/enable_file_logging.pc",
        "type": "bool"
      },
      {
        "name": "debug/file_logging/log_path",
        "type": "String"
      },
      {
        "name": "debug/file_logging/max_log_files",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/assert_always_false",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/assert_always_true",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/confusable_capture_reassignment",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/confusable_identifier",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/confusable_local_declaration",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/confusable_local_usage",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/constant_used_as_function",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/deprecated_keyword",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/empty_file",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/enable",
        "type": "bool"
      },
      {
        "name": "debug/gdscript/warnings/enum_variable_without_default",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/exclude_addons",
        "type": "bool"
      },
      {
        "name": "debug/gdscript/warnings/function_used_as_property",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/get_node_default_without_onready",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/incompatible_ternary",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/inference_on_variant",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/inferred_declaration",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/int_as_enum_without_cast",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/int_as_enum_without_match",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/integer_division",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/missing_tool",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/narrowing_conversion",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/native_method_override",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/onready_with_export",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/property_used_as_function",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/redundant_await",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/redundant_static_unload",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/renamed_in_godot_4_hint",
        "type": "bool"
      },
      {
        "name": "debug/gdscript/warnings/return_value_discarded",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/shadowed_global_identifier",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/shadowed_variable",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/shadowed_variable_base_class",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/standalone_expression",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/standalone_ternary",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/static_called_on_instance",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unassigned_variable",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unassigned_variable_op_assign",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unreachable_code",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unreachable_pattern",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unsafe_call_argument",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unsafe_cast",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unsafe_method_access",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unsafe_property_access",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unsafe_void_return",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/untyped_declaration",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unused_local_constant",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unused_parameter",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unused_private_class_variable",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unused_signal",
        "type": "int"
      },
      {
        "name": "debug/gdscript/warnings/unused_variable",
        "type": "int"
      },
      {
        "name": "debug/settings/crash_handler/message",
        "type": "String"
      },
      {
        "name": "debug/settings/crash_handler/message.editor",
        "type": "String"
      },
      {
        "name": "debug/settings/gdscript/max_call_stack",
        "type": "int"
      },
      {
        "name": "debug/settings/physics_interpolation/enable_warnings",
        "type": "bool"
      },
      {
        "name": "debug/settings/profiler/max_functions",
        "type": "int"
      },
      {
        "name": "debug/settings/profiler/max_timestamp_query_elements",
        "type": "int"
      },
      {
        "name": "debug/settings/stdout/print_fps",
        "type": "bool"
      },
      {
        "name": "debug/settings/stdout/print_gpu_profile",
        "type": "bool"
      },
      {
        "name": "debug/settings/stdout/verbose_stdout",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/device_limit_exceeded",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/enable",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/float_comparison",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/formatting_error",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/magic_position_write",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/treat_warnings_as_errors",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_constant",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_function",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_local_variable",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_struct",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_uniform",
        "type": "bool"
      },
      {
        "name": "debug/shader_language/warnings/unused_varying",
        "type": "bool"
      },
      {
        "name": "debug/shapes/avoidance/agents_radius_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/avoidance/enable_agents_radius",
        "type": "bool"
      },
      {
        "name": "debug/shapes/avoidance/enable_obstacles_radius",
        "type": "bool"
      },
      {
        "name": "debug/shapes/avoidance/enable_obstacles_static",
        "type": "bool"
      },
      {
        "name": "debug/shapes/avoidance/obstacles_radius_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/avoidance/obstacles_static_edge_pushin_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/avoidance/obstacles_static_edge_pushout_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/avoidance/obstacles_static_face_pushin_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/avoidance/obstacles_static_face_pushout_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/collision/contact_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/collision/draw_2d_outlines",
        "type": "bool"
      },
      {
        "name": "debug/shapes/collision/max_contacts_displayed",
        "type": "int"
      },
      {
        "name": "debug/shapes/collision/shape_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/agent_path_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/agent_path_point_size",
        "type": "float"
      },
      {
        "name": "debug/shapes/navigation/edge_connection_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/enable_agent_paths",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_agent_paths_xray",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_edge_connections",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_edge_connections_xray",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_edge_lines",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_edge_lines_xray",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_geometry_face_random_color",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_link_connections",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/enable_link_connections_xray",
        "type": "bool"
      },
      {
        "name": "debug/shapes/navigation/geometry_edge_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/geometry_edge_disabled_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/geometry_face_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/geometry_face_disabled_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/link_connection_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/navigation/link_connection_disabled_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/paths/geometry_color",
        "type": "Color"
      },
      {
        "name": "debug/shapes/paths/geometry_width",
        "type": "float"
      },
      {
        "name": "display/display_server/driver",
        "type": "String"
      },
      {
        "name": "display/display_server/driver.android",
        "type": "String"
      },
      {
        "name": "display/display_server/driver.ios",
        "type": "String"
      },
      {
        "name": "display/display_server/driver.linuxbsd",
        "type": "String"
      },
      {
        "name": "display/display_server/driver.macos",
        "type": "String"
      },
      {
        "name": "display/display_server/driver.windows",
        "type": "String"
      },
      {
        "name": "display/mouse_cursor/custom_image",
        "type": "String"
      },
      {
        "name": "display/mouse_cursor/custom_image_hotspot",
        "type": "Vector2"
      },
      {
        "name": "display/mouse_cursor/tooltip_position_offset",
        "type": "Vector2"
      },
      {
        "name": "display/window/dpi/allow_hidpi",
        "type": "bool"
      },
      {
        "name": "display/window/energy_saving/keep_screen_on",
        "type": "bool"
      },
      {
        "name": "display/window/frame_pacing/android/enable_frame_pacing",
        "type": "bool"
      },
      {
        "name": "display/window/frame_pacing/android/swappy_mode",
        "type": "int"
      },
      {
        "name": "display/window/handheld/orientation",
        "type": "int"
      },
      {
        "name": "display/window/ios/allow_high_refresh_rate",
        "type": "bool"
      },
      {
        "name": "display/window/ios/hide_home_indicator",
        "type": "bool"
      },
      {
        "name": "display/window/ios/hide_status_bar",
        "type": "bool"
      },
      {
        "name": "display/window/ios/suppress_ui_gesture",
        "type": "bool"
      },
      {
        "name": "display/window/per_pixel_transparency/allowed",
        "type": "bool"
      },
      {
        "name": "display/window/size/always_on_top",
        "type": "bool"
      },
      {
        "name": "display/window/size/borderless",
        "type": "bool"
      },
      {
        "name": "display/window/size/extend_to_title",
        "type": "bool"
      },
      {
        "name": "display/window/size/initial_position",
        "type": "Vector2i"
      },
      {
        "name": "display/window/size/initial_position_type",
        "type": "int"
      },
      {
        "name": "display/window/size/initial_screen",
        "type": "int"
      },
      {
        "name": "display/window/size/mode",
        "type": "int"
      },
      {
        "name": "display/window/size/no_focus",
        "type": "bool"
      },
      {
        "name": "display/window/size/resizable",
        "type": "bool"
      },
      {
        "name": "display/window/size/sharp_corners",
        "type": "bool"
      },
      {
        "name": "display/window/size/transparent",
        "type": "bool"
      },
      {
        "name": "display/window/size/viewport_height",
        "type": "int"
      },
      {
        "name": "display/window/size/viewport_width",
        "type": "int"
      },
      {
        "name": "display/window/size/window_height_override",
        "type": "int"
      },
      {
        "name": "display/window/size/window_width_override",
        "type": "int"
      },
      {
        "name": "display/window/stretch/aspect",
        "type": "String"
      },
      {
        "name": "display/window/stretch/mode",
        "type": "String"
      },
      {
        "name": "display/window/stretch/scale",
        "type": "float"
      },
      {
        "name": "display/window/stretch/scale_mode",
        "type": "String"
      },
      {
        "name": "display/window/subwindows/embed_subwindows",
        "type": "bool"
      },
      {
        "name": "display/window/vsync/vsync_mode",
        "type": "int"
      },
      {
        "name": "dotnet/project/assembly_name",
        "type": "String"
      },
      {
        "name": "dotnet/project/assembly_reload_attempts",
        "type": "int"
      },
      {
        "name": "dotnet/project/solution_directory",
        "type": "String"
      },
      {
        "name": "editor/export/convert_text_resources_to_binary",
        "type": "bool"
      },
      {
        "name": "editor/import/atlas_max_width",
        "type": "int"
      },
      {
        "name": "editor/import/reimport_missing_imported_files",
        "type": "bool"
      },
      {
        "name": "editor/import/use_multiple_threads",
        "type": "bool"
      },
      {
        "name": "editor/movie_writer/disable_vsync",
        "type": "bool"
      },
      {
        "name": "editor/movie_writer/fps",
        "type": "int"
      },
      {
        "name": "editor/movie_writer/mix_rate",
        "type": "int"
      },
      {
        "name": "editor/movie_writer/mjpeg_quality",
        "type": "float"
      },
      {
        "name": "editor/movie_writer/movie_file",
        "type": "String"
      },
      {
        "name": "editor/movie_writer/speaker_mode",
        "type": "int"
      },
      {
        "name": "editor/naming/default_signal_callback_name",
        "type": "String"
      },
      {
        "name": "editor/naming/default_signal_callback_to_self_name",
        "type": "String"
      },
      {
        "name": "editor/naming/node_name_casing",
        "type": "int"
      },
      {
        "name": "editor/naming/node_name_num_separator",
        "type": "int"
      },
      {
        "name": "editor/naming/scene_name_casing",
        "type": "int"
      },
      {
        "name": "editor/naming/script_name_casing",
        "type": "int"
      },
      {
        "name": "editor/run/main_run_args",
        "type": "String"
      },
      {
        "name": "editor/script/search_in_file_extensions",
        "type": "PackedStringArray"
      },
      {
        "name": "editor/script/templates_search_path",
        "type": "String"
      },
      {
        "name": "editor/version_control/autoload_on_startup",
        "type": "bool"
      },
      {
        "name": "editor/version_control/plugin_name",
        "type": "String"
      },
      {
        "name": "filesystem/import/blender/enabled",
        "type": "bool"
      },
      {
        "name": "filesystem/import/blender/enabled.android",
        "type": "bool"
      },
      {
        "name": "filesystem/import/blender/enabled.web",
        "type": "bool"
      },
      {
        "name": "filesystem/import/fbx2gltf/enabled",
        "type": "bool"
      },
      {
        "name": "filesystem/import/fbx2gltf/enabled.android",
        "type": "bool"
      },
      {
        "name": "filesystem/import/fbx2gltf/enabled.web",
        "type": "bool"
      },
      {
        "name": "gui/common/default_scroll_deadzone",
        "type": "int"
      },
      {
        "name": "gui/common/snap_controls_to_pixels",
        "type": "bool"
      },
      {
        "name": "gui/common/swap_cancel_ok",
        "type": "bool"
      },
      {
        "name": "gui/common/text_edit_undo_stack_max_size",
        "type": "int"
      },
      {
        "name": "gui/fonts/dynamic_fonts/use_oversampling",
        "type": "bool"
      },
      {
        "name": "gui/theme/custom",
        "type": "String"
      },
      {
        "name": "gui/theme/custom_font",
        "type": "String"
      },
      {
        "name": "gui/theme/default_font_antialiasing",
        "type": "int"
      },
      {
        "name": "gui/theme/default_font_generate_mipmaps",
        "type": "bool"
      },
      {
        "name": "gui/theme/default_font_hinting",
        "type": "int"
      },
      {
        "name": "gui/theme/default_font_multichannel_signed_distance_field",
        "type": "bool"
      },
      {
        "name": "gui/theme/default_font_subpixel_positioning",
        "type": "int"
      },
      {
        "name": "gui/theme/default_theme_scale",
        "type": "float"
      },
      {
        "name": "gui/theme/lcd_subpixel_layout",
        "type": "int"
      },
      {
        "name": "gui/timers/button_shortcut_feedback_highlight_time",
        "type": "float"
      },
      {
        "name": "gui/timers/incremental_search_max_interval_msec",
        "type": "int"
      },
      {
        "name": "gui/timers/text_edit_idle_detect_sec",
        "type": "float"
      },
      {
        "name": "gui/timers/tooltip_delay_sec",
        "type": "float"
      },
      {
        "name": "gui/timers/tooltip_delay_sec.editor_hint",
        "type": "float"
      },
      {
        "name": "input/ui_accept",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_cancel",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_copy",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_cut",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_down",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_end",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_filedialog_refresh",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_filedialog_show_hidden",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_filedialog_up_one_level",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_focus_next",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_focus_prev",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_graph_delete",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_graph_duplicate",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_home",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_left",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_menu",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_page_down",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_page_up",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_paste",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_redo",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_right",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_select",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_swap_input_direction",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_add_selection_for_next_occurrence",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_backspace",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_backspace_all_to_left",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_backspace_all_to_left.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_backspace_word",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_backspace_word.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_add_above",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_add_above.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_add_below",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_add_below.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_document_end",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_document_end.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_document_start",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_document_start.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_down",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_left",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_line_end",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_line_end.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_line_start",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_line_start.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_page_down",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_page_up",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_right",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_up",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_word_left",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_word_left.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_word_right",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_caret_word_right.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_clear_carets_and_selection",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_completion_accept",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_completion_query",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_completion_replace",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_dedent",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_delete",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_delete_all_to_right",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_delete_all_to_right.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_delete_word",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_delete_word.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_indent",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_newline",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_newline_above",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_newline_blank",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_scroll_down",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_scroll_down.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_scroll_up",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_scroll_up.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_select_all",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_select_word_under_caret",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_select_word_under_caret.macos",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_skip_selection_for_next_occurrence",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_submit",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_text_toggle_insert_mode",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_undo",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_unicode_start",
        "type": "Dictionary"
      },
      {
        "name": "input/ui_up",
        "type": "Dictionary"
      },
      {
        "name": "input_devices/buffering/agile_event_flushing",
        "type": "bool"
      },
      {
        "name": "input_devices/compatibility/legacy_just_pressed_behavior",
        "type": "bool"
      },
      {
        "name": "input_devices/pen_tablet/driver",
        "type": "String"
      },
      {
        "name": "input_devices/pen_tablet/driver.windows",
        "type": "String"
      },
      {
        "name": "input_devices/pointing/android/enable_long_press_as_right_click",
        "type": "bool"
      },
      {
        "name": "input_devices/pointing/android/enable_pan_and_scale_gestures",
        "type": "bool"
      },
      {
        "name": "input_devices/pointing/android/rotary_input_scroll_axis",
        "type": "int"
      },
      {
        "name": "input_devices/pointing/emulate_mouse_from_touch",
        "type": "bool"
      },
      {
        "name": "input_devices/pointing/emulate_touch_from_mouse",
        "type": "bool"
      },
      {
        "name": "input_devices/sensors/enable_accelerometer",
        "type": "bool"
      },
      {
        "name": "input_devices/sensors/enable_gravity",
        "type": "bool"
      },
      {
        "name": "input_devices/sensors/enable_gyroscope",
        "type": "bool"
      },
      {
        "name": "input_devices/sensors/enable_magnetometer",
        "type": "bool"
      },
      {
        "name": "internationalization/locale/fallback",
        "type": "String"
      },
      {
        "name": "internationalization/locale/include_text_server_data",
        "type": "bool"
      },
      {
        "name": "internationalization/locale/test",
        "type": "String"
      },
      {
        "name": "internationalization/pseudolocalization/double_vowels",
        "type": "bool"
      },
      {
        "name": "internationalization/pseudolocalization/expansion_ratio",
        "type": "float"
      },
      {
        "name": "internationalization/pseudolocalization/fake_bidi",
        "type": "bool"
      },
      {
        "name": "internationalization/pseudolocalization/override",
        "type": "bool"
      },
      {
        "name": "internationalization/pseudolocalization/prefix",
        "type": "String"
      },
      {
        "name": "internationalization/pseudolocalization/replace_with_accents",
        "type": "bool"
      },
      {
        "name": "internationalization/pseudolocalization/skip_placeholders",
        "type": "bool"
      },
      {
        "name": "internationalization/pseudolocalization/suffix",
        "type": "String"
      },
      {
        "name": "internationalization/pseudolocalization/use_pseudolocalization",
        "type": "bool"
      },
      {
        "name": "internationalization/rendering/force_right_to_left_layout_direction",
        "type": "bool"
      },
      {
        "name": "internationalization/rendering/root_node_auto_translate",
        "type": "bool"
      },
      {
        "name": "internationalization/rendering/root_node_layout_direction",
        "type": "int"
      },
      {
        "name": "internationalization/rendering/text_driver",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_21",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_22",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_23",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_24",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_25",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_26",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_27",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_28",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_29",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_30",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_31",
        "type": "String"
      },
      {
        "name": "layer_names/2d_navigation/layer_32",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_21",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_22",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_23",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_24",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_25",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_26",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_27",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_28",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_29",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_30",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_31",
        "type": "String"
      },
      {
        "name": "layer_names/2d_physics/layer_32",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/2d_render/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_21",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_22",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_23",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_24",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_25",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_26",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_27",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_28",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_29",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_30",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_31",
        "type": "String"
      },
      {
        "name": "layer_names/3d_navigation/layer_32",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_21",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_22",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_23",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_24",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_25",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_26",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_27",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_28",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_29",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_30",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_31",
        "type": "String"
      },
      {
        "name": "layer_names/3d_physics/layer_32",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/3d_render/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_1",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_2",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_3",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_4",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_5",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_6",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_7",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_8",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_9",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_10",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_11",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_12",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_13",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_14",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_15",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_16",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_17",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_18",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_19",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_20",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_21",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_22",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_23",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_24",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_25",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_26",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_27",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_28",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_29",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_30",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_31",
        "type": "String"
      },
      {
        "name": "layer_names/avoidance/layer_32",
        "type": "String"
      },
      {
        "name": "memory/limits/message_queue/max_size_mb",
        "type": "int"
      },
      {
        "name": "navigation/2d/default_cell_size",
        "type": "float"
      },
      {
        "name": "navigation/2d/default_edge_connection_margin",
        "type": "float"
      },
      {
        "name": "navigation/2d/default_link_connection_radius",
        "type": "float"
      },
      {
        "name": "navigation/2d/use_edge_connections",
        "type": "bool"
      },
      {
        "name": "navigation/3d/default_cell_height",
        "type": "float"
      },
      {
        "name": "navigation/3d/default_cell_size",
        "type": "float"
      },
      {
        "name": "navigation/3d/default_edge_connection_margin",
        "type": "float"
      },
      {
        "name": "navigation/3d/default_link_connection_radius",
        "type": "float"
      },
      {
        "name": "navigation/3d/default_up",
        "type": "Vector3"
      },
      {
        "name": "navigation/3d/merge_rasterizer_cell_scale",
        "type": "float"
      },
      {
        "name": "navigation/3d/use_edge_connections",
        "type": "bool"
      },
      {
        "name": "navigation/avoidance/thread_model/avoidance_use_high_priority_threads",
        "type": "bool"
      },
      {
        "name": "navigation/avoidance/thread_model/avoidance_use_multiple_threads",
        "type": "bool"
      },
      {
        "name": "navigation/baking/thread_model/baking_use_high_priority_threads",
        "type": "bool"
      },
      {
        "name": "navigation/baking/thread_model/baking_use_multiple_threads",
        "type": "bool"
      },
      {
        "name": "navigation/baking/use_crash_prevention_checks",
        "type": "bool"
      },
      {
        "name": "navigation/pathfinding/max_threads",
        "type": "int"
      },
      {
        "name": "navigation/world/map_use_async_iterations",
        "type": "bool"
      },
      {
        "name": "network/limits/debugger/max_chars_per_second",
        "type": "int"
      },
      {
        "name": "network/limits/debugger/max_errors_per_second",
        "type": "int"
      },
      {
        "name": "network/limits/debugger/max_queued_messages",
        "type": "int"
      },
      {
        "name": "network/limits/debugger/max_warnings_per_second",
        "type": "int"
      },
      {
        "name": "network/limits/packet_peer_stream/max_buffer_po2",
        "type": "int"
      },
      {
        "name": "network/limits/tcp/connect_timeout_seconds",
        "type": "int"
      },
      {
        "name": "network/limits/webrtc/max_channel_in_buffer_kb",
        "type": "int"
      },
      {
        "name": "network/tls/certificate_bundle_override",
        "type": "String"
      },
      {
        "name": "network/tls/enable_tls_v1.3",
        "type": "bool"
      },
      {
        "name": "physics/2d/default_angular_damp",
        "type": "float"
      },
      {
        "name": "physics/2d/default_gravity",
        "type": "float"
      },
      {
        "name": "physics/2d/default_gravity_vector",
        "type": "Vector2"
      },
      {
        "name": "physics/2d/default_linear_damp",
        "type": "float"
      },
      {
        "name": "physics/2d/physics_engine",
        "type": "String"
      },
      {
        "name": "physics/2d/run_on_separate_thread",
        "type": "bool"
      },
      {
        "name": "physics/2d/sleep_threshold_angular",
        "type": "float"
      },
      {
        "name": "physics/2d/sleep_threshold_linear",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/contact_max_allowed_penetration",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/contact_max_separation",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/contact_recycle_radius",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/default_constraint_bias",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/default_contact_bias",
        "type": "float"
      },
      {
        "name": "physics/2d/solver/solver_iterations",
        "type": "int"
      },
      {
        "name": "physics/2d/time_before_sleep",
        "type": "float"
      },
      {
        "name": "physics/3d/default_angular_damp",
        "type": "float"
      },
      {
        "name": "physics/3d/default_gravity",
        "type": "float"
      },
      {
        "name": "physics/3d/default_gravity_vector",
        "type": "Vector3"
      },
      {
        "name": "physics/3d/default_linear_damp",
        "type": "float"
      },
      {
        "name": "physics/3d/physics_engine",
        "type": "String"
      },
      {
        "name": "physics/3d/run_on_separate_thread",
        "type": "bool"
      },
      {
        "name": "physics/3d/sleep_threshold_angular",
        "type": "float"
      },
      {
        "name": "physics/3d/sleep_threshold_linear",
        "type": "float"
      },
      {
        "name": "physics/3d/solver/contact_max_allowed_penetration",
        "type": "float"
      },
      {
        "name": "physics/3d/solver/contact_max_separation",
        "type": "float"
      },
      {
        "name": "physics/3d/solver/contact_recycle_radius",
        "type": "float"
      },
      {
        "name": "physics/3d/solver/default_contact_bias",
        "type": "float"
      },
      {
        "name": "physics/3d/solver/solver_iterations",
        "type": "int"
      },
      {
        "name": "physics/3d/time_before_sleep",
        "type": "float"
      },
      {
        "name": "physics/common/enable_object_picking",
        "type": "bool"
      },
      {
        "name": "physics/common/max_physics_steps_per_frame",
        "type": "int"
      },
      {
        "name": "physics/common/physics_interpolation",
        "type": "bool"
      },
      {
        "name": "physics/common/physics_jitter_fix",
        "type": "float"
      },
      {
        "name": "physics/common/physics_ticks_per_second",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/collisions/active_edge_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/collisions/collision_margin_fraction",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/joints/world_node",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/limits/max_angular_velocity",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/limits/max_bodies",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/limits/max_body_pairs",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/limits/max_contact_constraints",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/limits/max_linear_velocity",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/limits/temporary_memory_buffer_size",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/limits/world_boundary_shape_size",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/motion_queries/recovery_amount",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/motion_queries/recovery_iterations",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/motion_queries/use_enhanced_internal_edge_removal",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/queries/enable_ray_cast_face_index",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/queries/use_enhanced_internal_edge_removal",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/allow_sleep",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/areas_detect_static_bodies",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/baumgarte_stabilization_factor",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/body_pair_contact_cache_angle_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/body_pair_contact_cache_distance_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/body_pair_contact_cache_enabled",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/bounce_velocity_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/continuous_cd_max_penetration",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/continuous_cd_movement_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/generate_all_kinematic_contacts",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/penetration_slop",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/position_steps",
        "type": "int"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/sleep_time_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/sleep_velocity_threshold",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/soft_body_point_radius",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/speculative_contact_distance",
        "type": "float"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/use_enhanced_internal_edge_removal",
        "type": "bool"
      },
      {
        "name": "physics/jolt_physics_3d/simulation/velocity_steps",
        "type": "int"
      },
      {
        "name": "rendering/2d/batching/item_buffer_size",
        "type": "int"
      },
      {
        "name": "rendering/2d/batching/uniform_set_cache_size",
        "type": "int"
      },
      {
        "name": "rendering/2d/sdf/oversize",
        "type": "int"
      },
      {
        "name": "rendering/2d/sdf/scale",
        "type": "int"
      },
      {
        "name": "rendering/2d/shadow_atlas/size",
        "type": "int"
      },
      {
        "name": "rendering/2d/snap/snap_2d_transforms_to_pixel",
        "type": "bool"
      },
      {
        "name": "rendering/2d/snap/snap_2d_vertices_to_pixel",
        "type": "bool"
      },
      {
        "name": "rendering/anti_aliasing/quality/msaa_2d",
        "type": "int"
      },
      {
        "name": "rendering/anti_aliasing/quality/msaa_3d",
        "type": "int"
      },
      {
        "name": "rendering/anti_aliasing/quality/screen_space_aa",
        "type": "int"
      },
      {
        "name": "rendering/anti_aliasing/quality/use_debanding",
        "type": "bool"
      },
      {
        "name": "rendering/anti_aliasing/quality/use_taa",
        "type": "bool"
      },
      {
        "name": "rendering/anti_aliasing/screen_space_roughness_limiter/amount",
        "type": "float"
      },
      {
        "name": "rendering/anti_aliasing/screen_space_roughness_limiter/enabled",
        "type": "bool"
      },
      {
        "name": "rendering/anti_aliasing/screen_space_roughness_limiter/limit",
        "type": "float"
      },
      {
        "name": "rendering/camera/depth_of_field/depth_of_field_bokeh_quality",
        "type": "int"
      },
      {
        "name": "rendering/camera/depth_of_field/depth_of_field_bokeh_shape",
        "type": "int"
      },
      {
        "name": "rendering/camera/depth_of_field/depth_of_field_use_jitter",
        "type": "bool"
      },
      {
        "name": "rendering/driver/depth_prepass/disable_for_vendors",
        "type": "String"
      },
      {
        "name": "rendering/driver/depth_prepass/enable",
        "type": "bool"
      },
      {
        "name": "rendering/driver/threads/thread_model",
        "type": "int"
      },
      {
        "name": "rendering/environment/defaults/default_clear_color",
        "type": "Color"
      },
      {
        "name": "rendering/environment/defaults/default_environment",
        "type": "String"
      },
      {
        "name": "rendering/environment/glow/upscale_mode",
        "type": "int"
      },
      {
        "name": "rendering/environment/glow/upscale_mode.mobile",
        "type": "int"
      },
      {
        "name": "rendering/environment/screen_space_reflection/roughness_quality",
        "type": "int"
      },
      {
        "name": "rendering/environment/ssao/adaptive_target",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssao/blur_passes",
        "type": "int"
      },
      {
        "name": "rendering/environment/ssao/fadeout_from",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssao/fadeout_to",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssao/half_size",
        "type": "bool"
      },
      {
        "name": "rendering/environment/ssao/quality",
        "type": "int"
      },
      {
        "name": "rendering/environment/ssil/adaptive_target",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssil/blur_passes",
        "type": "int"
      },
      {
        "name": "rendering/environment/ssil/fadeout_from",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssil/fadeout_to",
        "type": "float"
      },
      {
        "name": "rendering/environment/ssil/half_size",
        "type": "bool"
      },
      {
        "name": "rendering/environment/ssil/quality",
        "type": "int"
      },
      {
        "name": "rendering/environment/subsurface_scattering/subsurface_scattering_depth_scale",
        "type": "float"
      },
      {
        "name": "rendering/environment/subsurface_scattering/subsurface_scattering_quality",
        "type": "int"
      },
      {
        "name": "rendering/environment/subsurface_scattering/subsurface_scattering_scale",
        "type": "float"
      },
      {
        "name": "rendering/environment/volumetric_fog/use_filter",
        "type": "int"
      },
      {
        "name": "rendering/environment/volumetric_fog/volume_depth",
        "type": "int"
      },
      {
        "name": "rendering/environment/volumetric_fog/volume_size",
        "type": "int"
      },
      {
        "name": "rendering/gl_compatibility/driver",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.android",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.ios",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.linuxbsd",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.macos",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.web",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/driver.windows",
        "type": "String"
      },
      {
        "name": "rendering/gl_compatibility/fallback_to_angle",
        "type": "bool"
      },
      {
        "name": "rendering/gl_compatibility/fallback_to_gles",
        "type": "bool"
      },
      {
        "name": "rendering/gl_compatibility/fallback_to_native",
        "type": "bool"
      },
      {
        "name": "rendering/gl_compatibility/force_angle_on_devices",
        "type": "Array"
      },
      {
        "name": "rendering/gl_compatibility/item_buffer_size",
        "type": "int"
      },
      {
        "name": "rendering/gl_compatibility/nvidia_disable_threaded_optimization",
        "type": "bool"
      },
      {
        "name": "rendering/global_illumination/gi/use_half_resolution",
        "type": "bool"
      },
      {
        "name": "rendering/global_illumination/sdfgi/frames_to_converge",
        "type": "int"
      },
      {
        "name": "rendering/global_illumination/sdfgi/frames_to_update_lights",
        "type": "int"
      },
      {
        "name": "rendering/global_illumination/sdfgi/probe_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/global_illumination/voxel_gi/quality",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_performance/max_rays_per_pass",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_performance/max_rays_per_probe_pass",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_performance/max_transparency_rays",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_performance/region_size",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/high_quality_probe_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/high_quality_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/low_quality_probe_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/low_quality_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/medium_quality_probe_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/medium_quality_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/ultra_quality_probe_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/bake_quality/ultra_quality_ray_count",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/denoising/denoiser",
        "type": "int"
      },
      {
        "name": "rendering/lightmapping/lightmap_gi/use_bicubic_filter",
        "type": "bool"
      },
      {
        "name": "rendering/lightmapping/primitive_meshes/texel_size",
        "type": "float"
      },
      {
        "name": "rendering/lightmapping/probe_capture/update_speed",
        "type": "float"
      },
      {
        "name": "rendering/lights_and_shadows/directional_shadow/16_bits",
        "type": "bool"
      },
      {
        "name": "rendering/lights_and_shadows/directional_shadow/size",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/directional_shadow/size.mobile",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/directional_shadow/soft_shadow_filter_quality",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/directional_shadow/soft_shadow_filter_quality.mobile",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_16_bits",
        "type": "bool"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_quadrant_0_subdiv",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_quadrant_1_subdiv",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_quadrant_2_subdiv",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_quadrant_3_subdiv",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_size",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/atlas_size.mobile",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/soft_shadow_filter_quality",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/positional_shadow/soft_shadow_filter_quality.mobile",
        "type": "int"
      },
      {
        "name": "rendering/lights_and_shadows/tighter_shadow_caster_culling",
        "type": "bool"
      },
      {
        "name": "rendering/lights_and_shadows/use_physical_light_units",
        "type": "bool"
      },
      {
        "name": "rendering/limits/cluster_builder/max_clustered_elements",
        "type": "float"
      },
      {
        "name": "rendering/limits/global_shader_variables/buffer_size",
        "type": "int"
      },
      {
        "name": "rendering/limits/opengl/max_lights_per_object",
        "type": "int"
      },
      {
        "name": "rendering/limits/opengl/max_renderable_elements",
        "type": "int"
      },
      {
        "name": "rendering/limits/opengl/max_renderable_lights",
        "type": "int"
      },
      {
        "name": "rendering/limits/spatial_indexer/threaded_cull_minimum_instances",
        "type": "int"
      },
      {
        "name": "rendering/limits/spatial_indexer/update_iterations_per_frame",
        "type": "int"
      },
      {
        "name": "rendering/limits/time/time_rollover_secs",
        "type": "float"
      },
      {
        "name": "rendering/mesh_lod/lod_change/threshold_pixels",
        "type": "float"
      },
      {
        "name": "rendering/occlusion_culling/bvh_build_quality",
        "type": "int"
      },
      {
        "name": "rendering/occlusion_culling/jitter_projection",
        "type": "bool"
      },
      {
        "name": "rendering/occlusion_culling/occlusion_rays_per_thread",
        "type": "int"
      },
      {
        "name": "rendering/occlusion_culling/use_occlusion_culling",
        "type": "bool"
      },
      {
        "name": "rendering/reflections/reflection_atlas/reflection_count",
        "type": "int"
      },
      {
        "name": "rendering/reflections/reflection_atlas/reflection_size",
        "type": "int"
      },
      {
        "name": "rendering/reflections/reflection_atlas/reflection_size.mobile",
        "type": "int"
      },
      {
        "name": "rendering/reflections/sky_reflections/fast_filter_high_quality",
        "type": "bool"
      },
      {
        "name": "rendering/reflections/sky_reflections/ggx_samples",
        "type": "int"
      },
      {
        "name": "rendering/reflections/sky_reflections/ggx_samples.mobile",
        "type": "int"
      },
      {
        "name": "rendering/reflections/sky_reflections/roughness_layers",
        "type": "int"
      },
      {
        "name": "rendering/reflections/sky_reflections/texture_array_reflections",
        "type": "bool"
      },
      {
        "name": "rendering/reflections/sky_reflections/texture_array_reflections.mobile",
        "type": "bool"
      },
      {
        "name": "rendering/renderer/rendering_method",
        "type": "String"
      },
      {
        "name": "rendering/renderer/rendering_method.mobile",
        "type": "String"
      },
      {
        "name": "rendering/renderer/rendering_method.web",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/d3d12/agility_sdk_version",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/d3d12/max_misc_descriptors_per_frame",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/d3d12/max_resource_descriptors_per_frame",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/d3d12/max_sampler_descriptors_per_frame",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/driver",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/driver.android",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/driver.ios",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/driver.linuxbsd",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/driver.macos",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/driver.windows",
        "type": "String"
      },
      {
        "name": "rendering/rendering_device/fallback_to_d3d12",
        "type": "bool"
      },
      {
        "name": "rendering/rendering_device/fallback_to_opengl3",
        "type": "bool"
      },
      {
        "name": "rendering/rendering_device/fallback_to_vulkan",
        "type": "bool"
      },
      {
        "name": "rendering/rendering_device/pipeline_cache/enable",
        "type": "bool"
      },
      {
        "name": "rendering/rendering_device/pipeline_cache/save_chunk_size_mb",
        "type": "float"
      },
      {
        "name": "rendering/rendering_device/staging_buffer/block_size_kb",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/staging_buffer/max_size_mb",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/staging_buffer/texture_download_region_size_px",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/staging_buffer/texture_upload_region_size_px",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/vsync/frame_queue_size",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/vsync/swapchain_image_count",
        "type": "int"
      },
      {
        "name": "rendering/rendering_device/vulkan/max_descriptors_per_pool",
        "type": "int"
      },
      {
        "name": "rendering/scaling_3d/fsr_sharpness",
        "type": "float"
      },
      {
        "name": "rendering/scaling_3d/mode",
        "type": "int"
      },
      {
        "name": "rendering/scaling_3d/mode.ios",
        "type": "int"
      },
      {
        "name": "rendering/scaling_3d/mode.macos",
        "type": "int"
      },
      {
        "name": "rendering/scaling_3d/scale",
        "type": "float"
      },
      {
        "name": "rendering/shader_compiler/shader_cache/compress",
        "type": "bool"
      },
      {
        "name": "rendering/shader_compiler/shader_cache/enabled",
        "type": "bool"
      },
      {
        "name": "rendering/shader_compiler/shader_cache/strip_debug",
        "type": "bool"
      },
      {
        "name": "rendering/shader_compiler/shader_cache/strip_debug.release",
        "type": "bool"
      },
      {
        "name": "rendering/shader_compiler/shader_cache/use_zstd_compression",
        "type": "bool"
      },
      {
        "name": "rendering/shading/overrides/force_lambert_over_burley",
        "type": "bool"
      },
      {
        "name": "rendering/shading/overrides/force_lambert_over_burley.mobile",
        "type": "bool"
      },
      {
        "name": "rendering/shading/overrides/force_vertex_shading",
        "type": "bool"
      },
      {
        "name": "rendering/textures/canvas_textures/default_texture_filter",
        "type": "int"
      },
      {
        "name": "rendering/textures/canvas_textures/default_texture_repeat",
        "type": "int"
      },
      {
        "name": "rendering/textures/decals/filter",
        "type": "int"
      },
      {
        "name": "rendering/textures/default_filters/anisotropic_filtering_level",
        "type": "int"
      },
      {
        "name": "rendering/textures/default_filters/texture_mipmap_bias",
        "type": "float"
      },
      {
        "name": "rendering/textures/default_filters/use_nearest_mipmap_filter",
        "type": "bool"
      },
      {
        "name": "rendering/textures/light_projectors/filter",
        "type": "int"
      },
      {
        "name": "rendering/textures/lossless_compression/force_png",
        "type": "bool"
      },
      {
        "name": "rendering/textures/vram_compression/cache_gpu_compressor",
        "type": "bool"
      },
      {
        "name": "rendering/textures/vram_compression/compress_with_gpu",
        "type": "bool"
      },
      {
        "name": "rendering/textures/vram_compression/import_etc2_astc",
        "type": "bool"
      },
      {
        "name": "rendering/textures/vram_compression/import_s3tc_bptc",
        "type": "bool"
      },
      {
        "name": "rendering/textures/webp_compression/compression_method",
        "type": "int"
      },
      {
        "name": "rendering/textures/webp_compression/lossless_compression_factor",
        "type": "float"
      },
      {
        "name": "rendering/viewport/hdr_2d",
        "type": "bool"
      },
      {
        "name": "rendering/viewport/transparent_background",
        "type": "bool"
      },
      {
        "name": "rendering/vrs/mode",
        "type": "int"
      },
      {
        "name": "rendering/vrs/texture",
        "type": "String"
      },
      {
        "name": "threading/worker_pool/low_priority_thread_ratio",
        "type": "float"
      },
      {
        "name": "threading/worker_pool/max_threads",
        "type": "int"
      },
      {
        "name": "xr/openxr/binding_modifiers/analog_threshold",
        "type": "bool"
      },
      {
        "name": "xr/openxr/binding_modifiers/dpad_binding",
        "type": "bool"
      },
      {
        "name": "xr/openxr/default_action_map",
        "type": "String"
      },
      {
        "name": "xr/openxr/enabled",
        "type": "bool"
      },
      {
        "name": "xr/openxr/environment_blend_mode",
        "type": "int"
      },
      {
        "name": "xr/openxr/extensions/debug_message_types",
        "type": "int"
      },
      {
        "name": "xr/openxr/extensions/debug_utils",
        "type": "int"
      },
      {
        "name": "xr/openxr/extensions/eye_gaze_interaction",
        "type": "bool"
      },
      {
        "name": "xr/openxr/extensions/hand_interaction_profile",
        "type": "bool"
      },
      {
        "name": "xr/openxr/extensions/hand_tracking",
        "type": "bool"
      },
      {
        "name": "xr/openxr/extensions/hand_tracking_controller_data_source",
        "type": "bool"
      },
      {
        "name": "xr/openxr/extensions/hand_tracking_unobstructed_data_source",
        "type": "bool"
      },
      {
        "name": "xr/openxr/form_factor",
        "type": "int"
      },
      {
        "name": "xr/openxr/foveation_dynamic",
        "type": "bool"
      },
      {
        "name": "xr/openxr/foveation_level",
        "type": "int"
      },
      {
        "name": "xr/openxr/reference_space",
        "type": "int"
      },
      {
        "name": "xr/openxr/startup_alert",
        "type": "bool"
      },
      {
        "name": "xr/openxr/submit_depth_buffer",
        "type": "bool"
      },
      {
        "name": "xr/openxr/view_configuration",
        "type": "int"
      },
      {
        "name": "xr/shaders/enabled",
        "type": "bool"
      }
    ]
  },
  "Projection": {
    "methods": [
      {
        "name": "create_depth_correction",
        "parameters": [
          {
            "name": "flip_y",
            "type": "bool"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_fit_aabb",
        "parameters": [
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_for_hmd",
        "parameters": [
          {
            "name": "eye",
            "type": "int"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "intraocular_dist",
            "type": "float"
          },
          {
            "name": "display_width",
            "type": "float"
          },
          {
            "name": "display_to_lens",
            "type": "float"
          },
          {
            "name": "oversample",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_frustum",
        "parameters": [
          {
            "name": "left",
            "type": "float"
          },
          {
            "name": "right",
            "type": "float"
          },
          {
            "name": "bottom",
            "type": "float"
          },
          {
            "name": "top",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_frustum_aspect",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "Vector2"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          },
          {
            "name": "flip_fov",
            "type": "bool"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_light_atlas_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_orthogonal",
        "parameters": [
          {
            "name": "left",
            "type": "float"
          },
          {
            "name": "right",
            "type": "float"
          },
          {
            "name": "bottom",
            "type": "float"
          },
          {
            "name": "top",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_orthogonal_aspect",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          },
          {
            "name": "flip_fov",
            "type": "bool"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_perspective",
        "parameters": [
          {
            "name": "fovy",
            "type": "float"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          },
          {
            "name": "flip_fov",
            "type": "bool"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "create_perspective_hmd",
        "parameters": [
          {
            "name": "fovy",
            "type": "float"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          },
          {
            "name": "flip_fov",
            "type": "bool"
          },
          {
            "name": "eye",
            "type": "int"
          },
          {
            "name": "intraocular_dist",
            "type": "float"
          },
          {
            "name": "convergence_dist",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "determinant",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "flipped_y",
        "parameters": [],
        "return_type": "Projection"
      },
      {
        "name": "get_aspect",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_far_plane_half_extents",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_fov",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_fovy",
        "parameters": [
          {
            "name": "fovx",
            "type": "float"
          },
          {
            "name": "aspect",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_lod_multiplier",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_pixels_per_meter",
        "parameters": [
          {
            "name": "for_pixel_width",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_projection_plane",
        "parameters": [
          {
            "name": "plane",
            "type": "int"
          }
        ],
        "return_type": "Plane"
      },
      {
        "name": "get_viewport_half_extents",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_z_far",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_z_near",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Projection"
      },
      {
        "name": "is_orthogonal",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "jitter_offseted",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "perspective_znear_adjusted",
        "parameters": [
          {
            "name": "new_znear",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      }
    ],
    "name": "Projection",
    "parent": null,
    "properties": [
      {
        "name": "w",
        "type": "Vector4"
      },
      {
        "name": "x",
        "type": "Vector4"
      },
      {
        "name": "y",
        "type": "Vector4"
      },
      {
        "name": "z",
        "type": "Vector4"
      }
    ]
  },
  "PropertyTweener": {
    "methods": [
      {
        "name": "as_relative",
        "parameters": [],
        "return_type": "PropertyTweener"
      },
      {
        "name": "from",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "PropertyTweener"
      },
      {
        "name": "from_current",
        "parameters": [],
        "return_type": "PropertyTweener"
      },
      {
        "name": "set_custom_interpolator",
        "parameters": [
          {
            "name": "interpolator_method",
            "type": "Callable"
          }
        ],
        "return_type": "PropertyTweener"
      },
      {
        "name": "set_delay",
        "parameters": [
          {
            "name": "delay",
            "type": "float"
          }
        ],
        "return_type": "PropertyTweener"
      },
      {
        "name": "set_ease",
        "parameters": [
          {
            "name": "ease",
            "type": "int"
          }
        ],
        "return_type": "PropertyTweener"
      },
      {
        "name": "set_trans",
        "parameters": [
          {
            "name": "trans",
            "type": "int"
          }
        ],
        "return_type": "PropertyTweener"
      }
    ],
    "name": "PropertyTweener",
    "parent": "Tweener",
    "properties": []
  },
  "QuadMesh": {
    "methods": [],
    "name": "QuadMesh",
    "parent": "PlaneMesh",
    "properties": [
      {
        "name": "orientation",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "QuadOccluder3D": {
    "methods": [],
    "name": "QuadOccluder3D",
    "parent": "Occluder3D",
    "properties": [
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "Quaternion": {
    "methods": [
      {
        "name": "angle_to",
        "parameters": [
          {
            "name": "to",
            "type": "Quaternion"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "dot",
        "parameters": [
          {
            "name": "with",
            "type": "Quaternion"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "exp",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "from_euler",
        "parameters": [
          {
            "name": "euler",
            "type": "Vector3"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "get_angle",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_axis",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_euler",
        "parameters": [
          {
            "name": "order",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to",
            "type": "Quaternion"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_normalized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "log",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "normalized",
        "parameters": [],
        "return_type": "Quaternion"
      },
      {
        "name": "slerp",
        "parameters": [
          {
            "name": "to",
            "type": "Quaternion"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "slerpni",
        "parameters": [
          {
            "name": "to",
            "type": "Quaternion"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "spherical_cubic_interpolate",
        "parameters": [
          {
            "name": "b",
            "type": "Quaternion"
          },
          {
            "name": "pre_a",
            "type": "Quaternion"
          },
          {
            "name": "post_b",
            "type": "Quaternion"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "spherical_cubic_interpolate_in_time",
        "parameters": [
          {
            "name": "b",
            "type": "Quaternion"
          },
          {
            "name": "pre_a",
            "type": "Quaternion"
          },
          {
            "name": "post_b",
            "type": "Quaternion"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "b_t",
            "type": "float"
          },
          {
            "name": "pre_a_t",
            "type": "float"
          },
          {
            "name": "post_b_t",
            "type": "float"
          }
        ],
        "return_type": "Quaternion"
      }
    ],
    "name": "Quaternion",
    "parent": null,
    "properties": [
      {
        "name": "w",
        "type": "float"
      },
      {
        "name": "x",
        "type": "float"
      },
      {
        "name": "y",
        "type": "float"
      },
      {
        "name": "z",
        "type": "float"
      }
    ]
  },
  "RDAttachmentFormat": {
    "methods": [],
    "name": "RDAttachmentFormat",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "format",
        "type": "int"
      },
      {
        "name": "samples",
        "type": "int"
      },
      {
        "name": "usage_flags",
        "type": "int"
      }
    ]
  },
  "RDFramebufferPass": {
    "methods": [],
    "name": "RDFramebufferPass",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "color_attachments",
        "type": "PackedInt32Array"
      },
      {
        "name": "depth_attachment",
        "type": "int"
      },
      {
        "name": "input_attachments",
        "type": "PackedInt32Array"
      },
      {
        "name": "preserve_attachments",
        "type": "PackedInt32Array"
      },
      {
        "name": "resolve_attachments",
        "type": "PackedInt32Array"
      }
    ]
  },
  "RDPipelineColorBlendState": {
    "methods": [],
    "name": "RDPipelineColorBlendState",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "attachments",
        "type": "RDPipelineColorBlendStateAttachment[]"
      },
      {
        "name": "blend_constant",
        "type": "Color"
      },
      {
        "name": "enable_logic_op",
        "type": "bool"
      },
      {
        "name": "logic_op",
        "type": "int"
      }
    ]
  },
  "RDPipelineColorBlendStateAttachment": {
    "methods": [
      {
        "name": "set_as_mix",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "RDPipelineColorBlendStateAttachment",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "alpha_blend_op",
        "type": "int"
      },
      {
        "name": "color_blend_op",
        "type": "int"
      },
      {
        "name": "dst_alpha_blend_factor",
        "type": "int"
      },
      {
        "name": "dst_color_blend_factor",
        "type": "int"
      },
      {
        "name": "enable_blend",
        "type": "bool"
      },
      {
        "name": "src_alpha_blend_factor",
        "type": "int"
      },
      {
        "name": "src_color_blend_factor",
        "type": "int"
      },
      {
        "name": "write_a",
        "type": "bool"
      },
      {
        "name": "write_b",
        "type": "bool"
      },
      {
        "name": "write_g",
        "type": "bool"
      },
      {
        "name": "write_r",
        "type": "bool"
      }
    ]
  },
  "RDPipelineDepthStencilState": {
    "methods": [],
    "name": "RDPipelineDepthStencilState",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "back_op_compare",
        "type": "int"
      },
      {
        "name": "back_op_compare_mask",
        "type": "int"
      },
      {
        "name": "back_op_depth_fail",
        "type": "int"
      },
      {
        "name": "back_op_fail",
        "type": "int"
      },
      {
        "name": "back_op_pass",
        "type": "int"
      },
      {
        "name": "back_op_reference",
        "type": "int"
      },
      {
        "name": "back_op_write_mask",
        "type": "int"
      },
      {
        "name": "depth_compare_operator",
        "type": "int"
      },
      {
        "name": "depth_range_max",
        "type": "float"
      },
      {
        "name": "depth_range_min",
        "type": "float"
      },
      {
        "name": "enable_depth_range",
        "type": "bool"
      },
      {
        "name": "enable_depth_test",
        "type": "bool"
      },
      {
        "name": "enable_depth_write",
        "type": "bool"
      },
      {
        "name": "enable_stencil",
        "type": "bool"
      },
      {
        "name": "front_op_compare",
        "type": "int"
      },
      {
        "name": "front_op_compare_mask",
        "type": "int"
      },
      {
        "name": "front_op_depth_fail",
        "type": "int"
      },
      {
        "name": "front_op_fail",
        "type": "int"
      },
      {
        "name": "front_op_pass",
        "type": "int"
      },
      {
        "name": "front_op_reference",
        "type": "int"
      },
      {
        "name": "front_op_write_mask",
        "type": "int"
      }
    ]
  },
  "RDPipelineMultisampleState": {
    "methods": [],
    "name": "RDPipelineMultisampleState",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "enable_alpha_to_coverage",
        "type": "bool"
      },
      {
        "name": "enable_alpha_to_one",
        "type": "bool"
      },
      {
        "name": "enable_sample_shading",
        "type": "bool"
      },
      {
        "name": "min_sample_shading",
        "type": "float"
      },
      {
        "name": "sample_count",
        "type": "int"
      },
      {
        "name": "sample_masks",
        "type": "int[]"
      }
    ]
  },
  "RDPipelineRasterizationState": {
    "methods": [],
    "name": "RDPipelineRasterizationState",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "cull_mode",
        "type": "int"
      },
      {
        "name": "depth_bias_clamp",
        "type": "float"
      },
      {
        "name": "depth_bias_constant_factor",
        "type": "float"
      },
      {
        "name": "depth_bias_enabled",
        "type": "bool"
      },
      {
        "name": "depth_bias_slope_factor",
        "type": "float"
      },
      {
        "name": "discard_primitives",
        "type": "bool"
      },
      {
        "name": "enable_depth_clamp",
        "type": "bool"
      },
      {
        "name": "front_face",
        "type": "int"
      },
      {
        "name": "line_width",
        "type": "float"
      },
      {
        "name": "patch_control_points",
        "type": "int"
      },
      {
        "name": "wireframe",
        "type": "bool"
      }
    ]
  },
  "RDPipelineSpecializationConstant": {
    "methods": [],
    "name": "RDPipelineSpecializationConstant",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "constant_id",
        "type": "int"
      },
      {
        "name": "value",
        "type": "Variant"
      }
    ]
  },
  "RDSamplerState": {
    "methods": [],
    "name": "RDSamplerState",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "anisotropy_max",
        "type": "float"
      },
      {
        "name": "border_color",
        "type": "int"
      },
      {
        "name": "compare_op",
        "type": "int"
      },
      {
        "name": "enable_compare",
        "type": "bool"
      },
      {
        "name": "lod_bias",
        "type": "float"
      },
      {
        "name": "mag_filter",
        "type": "int"
      },
      {
        "name": "max_lod",
        "type": "float"
      },
      {
        "name": "min_filter",
        "type": "int"
      },
      {
        "name": "min_lod",
        "type": "float"
      },
      {
        "name": "mip_filter",
        "type": "int"
      },
      {
        "name": "repeat_u",
        "type": "int"
      },
      {
        "name": "repeat_v",
        "type": "int"
      },
      {
        "name": "repeat_w",
        "type": "int"
      },
      {
        "name": "unnormalized_uvw",
        "type": "bool"
      },
      {
        "name": "use_anisotropy",
        "type": "bool"
      }
    ]
  },
  "RDShaderFile": {
    "methods": [
      {
        "name": "get_spirv",
        "parameters": [
          {
            "name": "version",
            "type": "StringName"
          }
        ],
        "return_type": "RDShaderSPIRV"
      },
      {
        "name": "get_version_list",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "set_bytecode",
        "parameters": [
          {
            "name": "bytecode",
            "type": "RDShaderSPIRV"
          },
          {
            "name": "version",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RDShaderFile",
    "parent": "Resource",
    "properties": [
      {
        "name": "base_error",
        "type": "String"
      }
    ]
  },
  "RDShaderSPIRV": {
    "methods": [
      {
        "name": "get_stage_bytecode",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_stage_compile_error",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "set_stage_bytecode",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          },
          {
            "name": "bytecode",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stage_compile_error",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          },
          {
            "name": "compile_error",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RDShaderSPIRV",
    "parent": "Resource",
    "properties": [
      {
        "name": "bytecode_compute",
        "type": "PackedByteArray"
      },
      {
        "name": "bytecode_fragment",
        "type": "PackedByteArray"
      },
      {
        "name": "bytecode_tesselation_control",
        "type": "PackedByteArray"
      },
      {
        "name": "bytecode_tesselation_evaluation",
        "type": "PackedByteArray"
      },
      {
        "name": "bytecode_vertex",
        "type": "PackedByteArray"
      },
      {
        "name": "compile_error_compute",
        "type": "String"
      },
      {
        "name": "compile_error_fragment",
        "type": "String"
      },
      {
        "name": "compile_error_tesselation_control",
        "type": "String"
      },
      {
        "name": "compile_error_tesselation_evaluation",
        "type": "String"
      },
      {
        "name": "compile_error_vertex",
        "type": "String"
      }
    ]
  },
  "RDShaderSource": {
    "methods": [
      {
        "name": "get_stage_source",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "set_stage_source",
        "parameters": [
          {
            "name": "stage",
            "type": "int"
          },
          {
            "name": "source",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RDShaderSource",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "language",
        "type": "int"
      },
      {
        "name": "source_compute",
        "type": "String"
      },
      {
        "name": "source_fragment",
        "type": "String"
      },
      {
        "name": "source_tesselation_control",
        "type": "String"
      },
      {
        "name": "source_tesselation_evaluation",
        "type": "String"
      },
      {
        "name": "source_vertex",
        "type": "String"
      }
    ]
  },
  "RDTextureFormat": {
    "methods": [
      {
        "name": "add_shareable_format",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_shareable_format",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RDTextureFormat",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "array_layers",
        "type": "int"
      },
      {
        "name": "depth",
        "type": "int"
      },
      {
        "name": "format",
        "type": "int"
      },
      {
        "name": "height",
        "type": "int"
      },
      {
        "name": "is_discardable",
        "type": "bool"
      },
      {
        "name": "is_resolve_buffer",
        "type": "bool"
      },
      {
        "name": "mipmaps",
        "type": "int"
      },
      {
        "name": "samples",
        "type": "int"
      },
      {
        "name": "texture_type",
        "type": "int"
      },
      {
        "name": "usage_bits",
        "type": "int"
      },
      {
        "name": "width",
        "type": "int"
      }
    ]
  },
  "RDTextureView": {
    "methods": [],
    "name": "RDTextureView",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "format_override",
        "type": "int"
      },
      {
        "name": "swizzle_a",
        "type": "int"
      },
      {
        "name": "swizzle_b",
        "type": "int"
      },
      {
        "name": "swizzle_g",
        "type": "int"
      },
      {
        "name": "swizzle_r",
        "type": "int"
      }
    ]
  },
  "RDUniform": {
    "methods": [
      {
        "name": "add_id",
        "parameters": [
          {
            "name": "id",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_ids",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_ids",
        "parameters": [],
        "return_type": "RID[]"
      }
    ],
    "name": "RDUniform",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "binding",
        "type": "int"
      },
      {
        "name": "uniform_type",
        "type": "int"
      }
    ]
  },
  "RDVertexAttribute": {
    "methods": [],
    "name": "RDVertexAttribute",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "format",
        "type": "int"
      },
      {
        "name": "frequency",
        "type": "int"
      },
      {
        "name": "location",
        "type": "int"
      },
      {
        "name": "offset",
        "type": "int"
      },
      {
        "name": "stride",
        "type": "int"
      }
    ]
  },
  "RID": {
    "methods": [
      {
        "name": "get_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_valid",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "RID",
    "parent": null,
    "properties": []
  },
  "RandomNumberGenerator": {
    "methods": [
      {
        "name": "rand_weighted",
        "parameters": [
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "randf",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "randf_range",
        "parameters": [
          {
            "name": "from",
            "type": "float"
          },
          {
            "name": "to",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "randfn",
        "parameters": [
          {
            "name": "mean",
            "type": "float"
          },
          {
            "name": "deviation",
            "type": "float"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "randi",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "randi_range",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "randomize",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "RandomNumberGenerator",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "seed",
        "type": "int"
      },
      {
        "name": "state",
        "type": "int"
      }
    ]
  },
  "Range": {
    "methods": [
      {
        "name": "_value_changed",
        "parameters": [
          {
            "name": "new_value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_value_no_signal",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "share",
        "parameters": [
          {
            "name": "with",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unshare",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Range",
    "parent": "Control",
    "properties": [
      {
        "name": "allow_greater",
        "type": "bool"
      },
      {
        "name": "allow_lesser",
        "type": "bool"
      },
      {
        "name": "exp_edit",
        "type": "bool"
      },
      {
        "name": "max_value",
        "type": "float"
      },
      {
        "name": "min_value",
        "type": "float"
      },
      {
        "name": "page",
        "type": "float"
      },
      {
        "name": "ratio",
        "type": "float"
      },
      {
        "name": "rounded",
        "type": "bool"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "value",
        "type": "float"
      }
    ]
  },
  "RayCast2D": {
    "methods": [
      {
        "name": "add_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_exceptions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_raycast_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_collider",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_collider_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_normal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_collision_point",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "is_colliding",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RayCast2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "exclude_parent",
        "type": "bool"
      },
      {
        "name": "hit_from_inside",
        "type": "bool"
      },
      {
        "name": "target_position",
        "type": "Vector2"
      }
    ]
  },
  "RayCast3D": {
    "methods": [
      {
        "name": "add_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_exceptions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_raycast_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_collider",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_collider_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_face_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_normal",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_point",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "is_colliding",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RayCast3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "debug_shape_custom_color",
        "type": "Color"
      },
      {
        "name": "debug_shape_thickness",
        "type": "int"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "exclude_parent",
        "type": "bool"
      },
      {
        "name": "hit_back_faces",
        "type": "bool"
      },
      {
        "name": "hit_from_inside",
        "type": "bool"
      },
      {
        "name": "target_position",
        "type": "Vector3"
      }
    ]
  },
  "Rect2": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "encloses",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "expand",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_area",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_center",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_support",
        "parameters": [
          {
            "name": "direction",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "grow",
        "parameters": [
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "grow_individual",
        "parameters": [
          {
            "name": "left",
            "type": "float"
          },
          {
            "name": "top",
            "type": "float"
          },
          {
            "name": "right",
            "type": "float"
          },
          {
            "name": "bottom",
            "type": "float"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "grow_side",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "has_area",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "intersection",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "intersects",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2"
          },
          {
            "name": "include_borders",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2"
          }
        ],
        "return_type": "Rect2"
      }
    ],
    "name": "Rect2",
    "parent": null,
    "properties": [
      {
        "name": "end",
        "type": "Vector2"
      },
      {
        "name": "position",
        "type": "Vector2"
      },
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "Rect2i": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Rect2i"
      },
      {
        "name": "encloses",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "expand",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2i"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "get_area",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_center",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "grow",
        "parameters": [
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "grow_individual",
        "parameters": [
          {
            "name": "left",
            "type": "int"
          },
          {
            "name": "top",
            "type": "int"
          },
          {
            "name": "right",
            "type": "int"
          },
          {
            "name": "bottom",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "grow_side",
        "parameters": [
          {
            "name": "side",
            "type": "int"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "has_area",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "intersection",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2i"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "intersects",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "merge",
        "parameters": [
          {
            "name": "b",
            "type": "Rect2i"
          }
        ],
        "return_type": "Rect2i"
      }
    ],
    "name": "Rect2i",
    "parent": null,
    "properties": [
      {
        "name": "end",
        "type": "Vector2i"
      },
      {
        "name": "position",
        "type": "Vector2i"
      },
      {
        "name": "size",
        "type": "Vector2i"
      }
    ]
  },
  "RectangleShape2D": {
    "methods": [],
    "name": "RectangleShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "RefCounted": {
    "methods": [
      {
        "name": "get_reference_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "init_ref",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "reference",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "unreference",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "RefCounted",
    "parent": "Object",
    "properties": []
  },
  "ReferenceRect": {
    "methods": [],
    "name": "ReferenceRect",
    "parent": "Control",
    "properties": [
      {
        "name": "border_color",
        "type": "Color"
      },
      {
        "name": "border_width",
        "type": "float"
      },
      {
        "name": "editor_only",
        "type": "bool"
      }
    ]
  },
  "ReflectionProbe": {
    "methods": [],
    "name": "ReflectionProbe",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "ambient_color",
        "type": "Color"
      },
      {
        "name": "ambient_color_energy",
        "type": "float"
      },
      {
        "name": "ambient_mode",
        "type": "int"
      },
      {
        "name": "blend_distance",
        "type": "float"
      },
      {
        "name": "box_projection",
        "type": "bool"
      },
      {
        "name": "cull_mask",
        "type": "int"
      },
      {
        "name": "enable_shadows",
        "type": "bool"
      },
      {
        "name": "intensity",
        "type": "float"
      },
      {
        "name": "interior",
        "type": "bool"
      },
      {
        "name": "max_distance",
        "type": "float"
      },
      {
        "name": "mesh_lod_threshold",
        "type": "float"
      },
      {
        "name": "origin_offset",
        "type": "Vector3"
      },
      {
        "name": "reflection_mask",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "update_mode",
        "type": "int"
      }
    ]
  },
  "RemoteTransform2D": {
    "methods": [
      {
        "name": "force_update_cache",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "RemoteTransform2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "remote_path",
        "type": "NodePath"
      },
      {
        "name": "update_position",
        "type": "bool"
      },
      {
        "name": "update_rotation",
        "type": "bool"
      },
      {
        "name": "update_scale",
        "type": "bool"
      },
      {
        "name": "use_global_coordinates",
        "type": "bool"
      }
    ]
  },
  "RemoteTransform3D": {
    "methods": [
      {
        "name": "force_update_cache",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "RemoteTransform3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "remote_path",
        "type": "NodePath"
      },
      {
        "name": "update_position",
        "type": "bool"
      },
      {
        "name": "update_rotation",
        "type": "bool"
      },
      {
        "name": "update_scale",
        "type": "bool"
      },
      {
        "name": "use_global_coordinates",
        "type": "bool"
      }
    ]
  },
  "RenderData": {
    "methods": [
      {
        "name": "get_camera_attributes",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_environment",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_render_scene_buffers",
        "parameters": [],
        "return_type": "RenderSceneBuffers"
      },
      {
        "name": "get_render_scene_data",
        "parameters": [],
        "return_type": "RenderSceneData"
      }
    ],
    "name": "RenderData",
    "parent": "Object",
    "properties": []
  },
  "RenderDataExtension": {
    "methods": [
      {
        "name": "_get_camera_attributes",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_environment",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_render_scene_buffers",
        "parameters": [],
        "return_type": "RenderSceneBuffers"
      },
      {
        "name": "_get_render_scene_data",
        "parameters": [],
        "return_type": "RenderSceneData"
      }
    ],
    "name": "RenderDataExtension",
    "parent": "RenderData",
    "properties": []
  },
  "RenderDataRD": {
    "methods": [],
    "name": "RenderDataRD",
    "parent": "RenderData",
    "properties": []
  },
  "RenderSceneBuffers": {
    "methods": [
      {
        "name": "configure",
        "parameters": [
          {
            "name": "config",
            "type": "RenderSceneBuffersConfiguration"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RenderSceneBuffers",
    "parent": "RefCounted",
    "properties": []
  },
  "RenderSceneBuffersConfiguration": {
    "methods": [],
    "name": "RenderSceneBuffersConfiguration",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "anisotropic_filtering_level",
        "type": "int"
      },
      {
        "name": "fsr_sharpness",
        "type": "float"
      },
      {
        "name": "internal_size",
        "type": "Vector2i"
      },
      {
        "name": "msaa_3d",
        "type": "int"
      },
      {
        "name": "render_target",
        "type": "RID"
      },
      {
        "name": "scaling_3d_mode",
        "type": "int"
      },
      {
        "name": "screen_space_aa",
        "type": "int"
      },
      {
        "name": "target_size",
        "type": "Vector2i"
      },
      {
        "name": "texture_mipmap_bias",
        "type": "float"
      },
      {
        "name": "view_count",
        "type": "int"
      }
    ]
  },
  "RenderSceneBuffersExtension": {
    "methods": [
      {
        "name": "_configure",
        "parameters": [
          {
            "name": "config",
            "type": "RenderSceneBuffersConfiguration"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_anisotropic_filtering_level",
        "parameters": [
          {
            "name": "anisotropic_filtering_level",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_fsr_sharpness",
        "parameters": [
          {
            "name": "fsr_sharpness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_texture_mipmap_bias",
        "parameters": [
          {
            "name": "texture_mipmap_bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_use_debanding",
        "parameters": [
          {
            "name": "use_debanding",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RenderSceneBuffersExtension",
    "parent": "RenderSceneBuffers",
    "properties": []
  },
  "RenderSceneBuffersRD": {
    "methods": [
      {
        "name": "clear_context",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_texture",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "data_format",
            "type": "int"
          },
          {
            "name": "usage_bits",
            "type": "int"
          },
          {
            "name": "texture_samples",
            "type": "int"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "layers",
            "type": "int"
          },
          {
            "name": "mipmaps",
            "type": "int"
          },
          {
            "name": "unique",
            "type": "bool"
          },
          {
            "name": "discardable",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "create_texture_from_format",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "format",
            "type": "RDTextureFormat"
          },
          {
            "name": "view",
            "type": "RDTextureView"
          },
          {
            "name": "unique",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "create_texture_view",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "view_name",
            "type": "StringName"
          },
          {
            "name": "view",
            "type": "RDTextureView"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_color_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_color_texture",
        "parameters": [
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_depth_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_depth_texture",
        "parameters": [
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_fsr_sharpness",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_internal_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_msaa_3d",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_render_target",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_scaling_3d_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_screen_space_aa",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_target_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_texture",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_texture_format",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "RDTextureFormat"
      },
      {
        "name": "get_texture_samples",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_texture_slice",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "mipmap",
            "type": "int"
          },
          {
            "name": "layers",
            "type": "int"
          },
          {
            "name": "mipmaps",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_texture_slice_size",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "mipmap",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_texture_slice_view",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "mipmap",
            "type": "int"
          },
          {
            "name": "layers",
            "type": "int"
          },
          {
            "name": "mipmaps",
            "type": "int"
          },
          {
            "name": "view",
            "type": "RDTextureView"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_use_debanding",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_use_taa",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_velocity_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_velocity_texture",
        "parameters": [
          {
            "name": "msaa",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_view_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_texture",
        "parameters": [
          {
            "name": "context",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "RenderSceneBuffersRD",
    "parent": "RenderSceneBuffers",
    "properties": []
  },
  "RenderSceneData": {
    "methods": [
      {
        "name": "get_cam_projection",
        "parameters": [],
        "return_type": "Projection"
      },
      {
        "name": "get_cam_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "get_uniform_buffer",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_view_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_view_eye_offset",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_view_projection",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          }
        ],
        "return_type": "Projection"
      }
    ],
    "name": "RenderSceneData",
    "parent": "Object",
    "properties": []
  },
  "RenderSceneDataExtension": {
    "methods": [
      {
        "name": "_get_cam_projection",
        "parameters": [],
        "return_type": "Projection"
      },
      {
        "name": "_get_cam_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "_get_uniform_buffer",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_view_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_view_eye_offset",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "_get_view_projection",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          }
        ],
        "return_type": "Projection"
      }
    ],
    "name": "RenderSceneDataExtension",
    "parent": "RenderSceneData",
    "properties": []
  },
  "RenderSceneDataRD": {
    "methods": [],
    "name": "RenderSceneDataRD",
    "parent": "RenderSceneData",
    "properties": []
  },
  "RenderingDevice": {
    "methods": [
      {
        "name": "barrier",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "buffer_clear",
        "parameters": [
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "size_bytes",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "buffer_copy",
        "parameters": [
          {
            "name": "src_buffer",
            "type": "RID"
          },
          {
            "name": "dst_buffer",
            "type": "RID"
          },
          {
            "name": "src_offset",
            "type": "int"
          },
          {
            "name": "dst_offset",
            "type": "int"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "buffer_get_data",
        "parameters": [
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "offset_bytes",
            "type": "int"
          },
          {
            "name": "size_bytes",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "buffer_get_data_async",
        "parameters": [
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "callback",
            "type": "Callable"
          },
          {
            "name": "offset_bytes",
            "type": "int"
          },
          {
            "name": "size_bytes",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "buffer_get_device_address",
        "parameters": [
          {
            "name": "buffer",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "buffer_update",
        "parameters": [
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "size_bytes",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "capture_timestamp",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_add_barrier",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_begin",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "compute_list_bind_compute_pipeline",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          },
          {
            "name": "compute_pipeline",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_bind_uniform_set",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          },
          {
            "name": "uniform_set",
            "type": "RID"
          },
          {
            "name": "set_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_dispatch",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          },
          {
            "name": "x_groups",
            "type": "int"
          },
          {
            "name": "y_groups",
            "type": "int"
          },
          {
            "name": "z_groups",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_dispatch_indirect",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          },
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_list_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "compute_list_set_push_constant",
        "parameters": [
          {
            "name": "compute_list",
            "type": "int"
          },
          {
            "name": "buffer",
            "type": "PackedByteArray"
          },
          {
            "name": "size_bytes",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compute_pipeline_create",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "specialization_constants",
            "type": "RDPipelineSpecializationConstant[]"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "compute_pipeline_is_valid",
        "parameters": [
          {
            "name": "compute_pipeline",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "create_local_device",
        "parameters": [],
        "return_type": "RenderingDevice"
      },
      {
        "name": "draw_command_begin_label",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_command_end_label",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw_command_insert_label",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_begin",
        "parameters": [
          {
            "name": "framebuffer",
            "type": "RID"
          },
          {
            "name": "draw_flags",
            "type": "int"
          },
          {
            "name": "clear_color_values",
            "type": "PackedColorArray"
          },
          {
            "name": "clear_depth_value",
            "type": "float"
          },
          {
            "name": "clear_stencil_value",
            "type": "int"
          },
          {
            "name": "region",
            "type": "Rect2"
          },
          {
            "name": "breadcrumb",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "draw_list_begin_for_screen",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          },
          {
            "name": "clear_color",
            "type": "Color"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "draw_list_begin_split",
        "parameters": [
          {
            "name": "framebuffer",
            "type": "RID"
          },
          {
            "name": "splits",
            "type": "int"
          },
          {
            "name": "initial_color_action",
            "type": "int"
          },
          {
            "name": "final_color_action",
            "type": "int"
          },
          {
            "name": "initial_depth_action",
            "type": "int"
          },
          {
            "name": "final_depth_action",
            "type": "int"
          },
          {
            "name": "clear_color_values",
            "type": "PackedColorArray"
          },
          {
            "name": "clear_depth",
            "type": "float"
          },
          {
            "name": "clear_stencil",
            "type": "int"
          },
          {
            "name": "region",
            "type": "Rect2"
          },
          {
            "name": "storage_textures",
            "type": "RID[]"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "draw_list_bind_index_array",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "index_array",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_bind_render_pipeline",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "render_pipeline",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_bind_uniform_set",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "uniform_set",
            "type": "RID"
          },
          {
            "name": "set_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_bind_vertex_array",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "vertex_array",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_disable_scissor",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_draw",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "use_indices",
            "type": "bool"
          },
          {
            "name": "instances",
            "type": "int"
          },
          {
            "name": "procedural_vertex_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_draw_indirect",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "use_indices",
            "type": "bool"
          },
          {
            "name": "buffer",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "draw_count",
            "type": "int"
          },
          {
            "name": "stride",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_enable_scissor",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_end",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw_list_set_blend_constants",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_set_push_constant",
        "parameters": [
          {
            "name": "draw_list",
            "type": "int"
          },
          {
            "name": "buffer",
            "type": "PackedByteArray"
          },
          {
            "name": "size_bytes",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_list_switch_to_next_pass",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "draw_list_switch_to_next_pass_split",
        "parameters": [
          {
            "name": "splits",
            "type": "int"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "framebuffer_create",
        "parameters": [
          {
            "name": "textures",
            "type": "RID[]"
          },
          {
            "name": "validate_with_format",
            "type": "int"
          },
          {
            "name": "view_count",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "framebuffer_create_empty",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "samples",
            "type": "int"
          },
          {
            "name": "validate_with_format",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "framebuffer_create_multipass",
        "parameters": [
          {
            "name": "textures",
            "type": "RID[]"
          },
          {
            "name": "passes",
            "type": "RDFramebufferPass[]"
          },
          {
            "name": "validate_with_format",
            "type": "int"
          },
          {
            "name": "view_count",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "framebuffer_format_create",
        "parameters": [
          {
            "name": "attachments",
            "type": "RDAttachmentFormat[]"
          },
          {
            "name": "view_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "framebuffer_format_create_empty",
        "parameters": [
          {
            "name": "samples",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "framebuffer_format_create_multipass",
        "parameters": [
          {
            "name": "attachments",
            "type": "RDAttachmentFormat[]"
          },
          {
            "name": "passes",
            "type": "RDFramebufferPass[]"
          },
          {
            "name": "view_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "framebuffer_format_get_texture_samples",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "render_pass",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "framebuffer_get_format",
        "parameters": [
          {
            "name": "framebuffer",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "framebuffer_is_valid",
        "parameters": [
          {
            "name": "framebuffer",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "full_barrier",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_captured_timestamp_cpu_time",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_captured_timestamp_gpu_time",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_captured_timestamp_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_captured_timestamps_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_captured_timestamps_frame",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_device_allocation_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_device_allocs_by_object_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_device_memory_by_object_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_device_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_device_pipeline_cache_uuid",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_device_total_memory",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_device_vendor_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_driver_allocation_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_driver_allocs_by_object_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_driver_and_device_memory_report",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_driver_memory_by_object_type",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_driver_resource",
        "parameters": [
          {
            "name": "resource",
            "type": "int"
          },
          {
            "name": "rid",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_driver_total_memory",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_frame_delay",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_memory_usage",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_perf_report",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_tracked_object_name",
        "parameters": [
          {
            "name": "type_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tracked_object_type_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "index_array_create",
        "parameters": [
          {
            "name": "index_buffer",
            "type": "RID"
          },
          {
            "name": "index_offset",
            "type": "int"
          },
          {
            "name": "index_count",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "index_buffer_create",
        "parameters": [
          {
            "name": "size_indices",
            "type": "int"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          },
          {
            "name": "use_restart_indices",
            "type": "bool"
          },
          {
            "name": "creation_bits",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "limit_get",
        "parameters": [
          {
            "name": "limit",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "render_pipeline_create",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "framebuffer_format",
            "type": "int"
          },
          {
            "name": "vertex_format",
            "type": "int"
          },
          {
            "name": "primitive",
            "type": "int"
          },
          {
            "name": "rasterization_state",
            "type": "RDPipelineRasterizationState"
          },
          {
            "name": "multisample_state",
            "type": "RDPipelineMultisampleState"
          },
          {
            "name": "stencil_state",
            "type": "RDPipelineDepthStencilState"
          },
          {
            "name": "color_blend_state",
            "type": "RDPipelineColorBlendState"
          },
          {
            "name": "dynamic_state_flags",
            "type": "int"
          },
          {
            "name": "for_render_pass",
            "type": "int"
          },
          {
            "name": "specialization_constants",
            "type": "RDPipelineSpecializationConstant[]"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "render_pipeline_is_valid",
        "parameters": [
          {
            "name": "render_pipeline",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "sampler_create",
        "parameters": [
          {
            "name": "state",
            "type": "RDSamplerState"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "sampler_is_format_supported_for_filter",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "sampler_filter",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "screen_get_framebuffer_format",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "screen_get_height",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "screen_get_width",
        "parameters": [
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_resource_name",
        "parameters": [
          {
            "name": "id",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shader_compile_binary_from_spirv",
        "parameters": [
          {
            "name": "spirv_data",
            "type": "RDShaderSPIRV"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "shader_compile_spirv_from_source",
        "parameters": [
          {
            "name": "shader_source",
            "type": "RDShaderSource"
          },
          {
            "name": "allow_cache",
            "type": "bool"
          }
        ],
        "return_type": "RDShaderSPIRV"
      },
      {
        "name": "shader_create_from_bytecode",
        "parameters": [
          {
            "name": "binary_data",
            "type": "PackedByteArray"
          },
          {
            "name": "placeholder_rid",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "shader_create_from_spirv",
        "parameters": [
          {
            "name": "spirv_data",
            "type": "RDShaderSPIRV"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "shader_create_placeholder",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "shader_get_vertex_input_attribute_mask",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "storage_buffer_create",
        "parameters": [
          {
            "name": "size_bytes",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          },
          {
            "name": "usage",
            "type": "int"
          },
          {
            "name": "creation_bits",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "submit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "texture_buffer_create",
        "parameters": [
          {
            "name": "size_bytes",
            "type": "int"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_clear",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "base_mipmap",
            "type": "int"
          },
          {
            "name": "mipmap_count",
            "type": "int"
          },
          {
            "name": "base_layer",
            "type": "int"
          },
          {
            "name": "layer_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_copy",
        "parameters": [
          {
            "name": "from_texture",
            "type": "RID"
          },
          {
            "name": "to_texture",
            "type": "RID"
          },
          {
            "name": "from_pos",
            "type": "Vector3"
          },
          {
            "name": "to_pos",
            "type": "Vector3"
          },
          {
            "name": "size",
            "type": "Vector3"
          },
          {
            "name": "src_mipmap",
            "type": "int"
          },
          {
            "name": "dst_mipmap",
            "type": "int"
          },
          {
            "name": "src_layer",
            "type": "int"
          },
          {
            "name": "dst_layer",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_create",
        "parameters": [
          {
            "name": "format",
            "type": "RDTextureFormat"
          },
          {
            "name": "view",
            "type": "RDTextureView"
          },
          {
            "name": "data",
            "type": "PackedByteArray[]"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_create_from_extension",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "samples",
            "type": "int"
          },
          {
            "name": "usage_flags",
            "type": "int"
          },
          {
            "name": "image",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "depth",
            "type": "int"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_create_shared",
        "parameters": [
          {
            "name": "view",
            "type": "RDTextureView"
          },
          {
            "name": "with_texture",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_create_shared_from_slice",
        "parameters": [
          {
            "name": "view",
            "type": "RDTextureView"
          },
          {
            "name": "with_texture",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "mipmap",
            "type": "int"
          },
          {
            "name": "mipmaps",
            "type": "int"
          },
          {
            "name": "slice_type",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_get_data",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "texture_get_data_async",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_get_format",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "RDTextureFormat"
      },
      {
        "name": "texture_get_native_handle",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_is_discardable",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "texture_is_format_supported_for_usage",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "usage_flags",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "texture_is_shared",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "texture_is_valid",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "texture_resolve_multisample",
        "parameters": [
          {
            "name": "from_texture",
            "type": "RID"
          },
          {
            "name": "to_texture",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_set_discardable",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "discardable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_update",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "uniform_buffer_create",
        "parameters": [
          {
            "name": "size_bytes",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          },
          {
            "name": "creation_bits",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "uniform_set_create",
        "parameters": [
          {
            "name": "uniforms",
            "type": "RDUniform[]"
          },
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "shader_set",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "uniform_set_is_valid",
        "parameters": [
          {
            "name": "uniform_set",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "vertex_array_create",
        "parameters": [
          {
            "name": "vertex_count",
            "type": "int"
          },
          {
            "name": "vertex_format",
            "type": "int"
          },
          {
            "name": "src_buffers",
            "type": "RID[]"
          },
          {
            "name": "offsets",
            "type": "PackedInt64Array"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "vertex_buffer_create",
        "parameters": [
          {
            "name": "size_bytes",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          },
          {
            "name": "creation_bits",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "vertex_format_create",
        "parameters": [
          {
            "name": "vertex_descriptions",
            "type": "RDVertexAttribute[]"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "RenderingDevice",
    "parent": "Object",
    "properties": []
  },
  "RenderingServer": {
    "methods": [
      {
        "name": "bake_render_uv2",
        "parameters": [
          {
            "name": "base",
            "type": "RID"
          },
          {
            "name": "material_overrides",
            "type": "RID[]"
          },
          {
            "name": "image_size",
            "type": "Vector2i"
          }
        ],
        "return_type": "Image[]"
      },
      {
        "name": "call_on_render_thread",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_attributes_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "camera_attributes_set_auto_exposure",
        "parameters": [
          {
            "name": "camera_attributes",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "min_sensitivity",
            "type": "float"
          },
          {
            "name": "max_sensitivity",
            "type": "float"
          },
          {
            "name": "speed",
            "type": "float"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_attributes_set_dof_blur",
        "parameters": [
          {
            "name": "camera_attributes",
            "type": "RID"
          },
          {
            "name": "far_enable",
            "type": "bool"
          },
          {
            "name": "far_distance",
            "type": "float"
          },
          {
            "name": "far_transition",
            "type": "float"
          },
          {
            "name": "near_enable",
            "type": "bool"
          },
          {
            "name": "near_distance",
            "type": "float"
          },
          {
            "name": "near_transition",
            "type": "float"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_attributes_set_dof_blur_bokeh_shape",
        "parameters": [
          {
            "name": "shape",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_attributes_set_dof_blur_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          },
          {
            "name": "use_jitter",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_attributes_set_exposure",
        "parameters": [
          {
            "name": "camera_attributes",
            "type": "RID"
          },
          {
            "name": "multiplier",
            "type": "float"
          },
          {
            "name": "normalization",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "camera_set_camera_attributes",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "effects",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_compositor",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "compositor",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_cull_mask",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_environment",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "env",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_frustum",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "Vector2"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_orthogonal",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_perspective",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "fovy_degrees",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_transform",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "camera_set_use_vertical_aspect",
        "parameters": [
          {
            "name": "camera",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_item_add_animation_slice",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "animation_length",
            "type": "float"
          },
          {
            "name": "slice_begin",
            "type": "float"
          },
          {
            "name": "slice_end",
            "type": "float"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_circle",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_clip_ignore",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "ignore",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_lcd_texture_rect_region",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_line",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "from",
            "type": "Vector2"
          },
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_mesh",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_msdf_texture_rect_region",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "px_range",
            "type": "float"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_multiline",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_multimesh",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_nine_patch",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "source",
            "type": "Rect2"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "topleft",
            "type": "Vector2"
          },
          {
            "name": "bottomright",
            "type": "Vector2"
          },
          {
            "name": "x_axis_mode",
            "type": "int"
          },
          {
            "name": "y_axis_mode",
            "type": "int"
          },
          {
            "name": "draw_center",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_particles",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_polygon",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_polyline",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_primitive",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_rect",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "antialiased",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_set_transform",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_texture_rect",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "tile",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_texture_rect_region",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          },
          {
            "name": "clip_uv",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_add_triangle_array",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "indices",
            "type": "PackedInt32Array"
          },
          {
            "name": "points",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "bones",
            "type": "PackedInt32Array"
          },
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_attach_skeleton",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "skeleton",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_clear",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_item_get_instance_shader_parameter",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "canvas_item_get_instance_shader_parameter_default_value",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "canvas_item_get_instance_shader_parameter_list",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "canvas_item_reset_physics_interpolation",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_canvas_group_mode",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "clear_margin",
            "type": "float"
          },
          {
            "name": "fit_empty",
            "type": "bool"
          },
          {
            "name": "fit_margin",
            "type": "float"
          },
          {
            "name": "blur_mipmaps",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_clip",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "clip",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_copy_to_backbuffer",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_custom_rect",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "use_custom_rect",
            "type": "bool"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_default_texture_filter",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_default_texture_repeat",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "repeat",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_distance_field_mode",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_draw_behind_parent",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_draw_index",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_instance_shader_parameter",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_interpolated",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "interpolated",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_light_mask",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_material",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_modulate",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_parent",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "parent",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_self_modulate",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_sort_children_by_y",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_transform",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_use_parent_material",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_visibility_layer",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "visibility_layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_visibility_notifier",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "area",
            "type": "Rect2"
          },
          {
            "name": "enter_callable",
            "type": "Callable"
          },
          {
            "name": "exit_callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_visible",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "visible",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_z_as_relative_to_parent",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_set_z_index",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "z_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_item_transform_physics_interpolation",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_attach_to_canvas",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_light_occluder_attach_to_canvas",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_light_occluder_reset_physics_interpolation",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_as_sdf_collision",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_enabled",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_interpolated",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "interpolated",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_light_mask",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_polygon",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "polygon",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_set_transform",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_occluder_transform_physics_interpolation",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_reset_physics_interpolation",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_blend_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_color",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_enabled",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_energy",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "energy",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_height",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "height",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_interpolated",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "interpolated",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_item_cull_mask",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_item_shadow_cull_mask",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_layer_range",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "min_layer",
            "type": "int"
          },
          {
            "name": "max_layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_shadow_color",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_shadow_enabled",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_shadow_filter",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_shadow_smooth",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "smooth",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_texture",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_texture_offset",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_texture_scale",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_transform",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_set_z_range",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "min_z",
            "type": "int"
          },
          {
            "name": "max_z",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_light_transform_physics_interpolation",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_occluder_polygon_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_occluder_polygon_set_cull_mode",
        "parameters": [
          {
            "name": "occluder_polygon",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_occluder_polygon_set_shape",
        "parameters": [
          {
            "name": "occluder_polygon",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "PackedVector2Array"
          },
          {
            "name": "closed",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_set_disable_scale",
        "parameters": [
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_set_item_mirroring",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "mirroring",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_set_item_repeat",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          },
          {
            "name": "repeat_size",
            "type": "Vector2"
          },
          {
            "name": "repeat_times",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_set_modulate",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_set_shadow_texture_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_texture_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "canvas_texture_set_channel",
        "parameters": [
          {
            "name": "canvas_texture",
            "type": "RID"
          },
          {
            "name": "channel",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_texture_set_shading_parameters",
        "parameters": [
          {
            "name": "canvas_texture",
            "type": "RID"
          },
          {
            "name": "base_color",
            "type": "Color"
          },
          {
            "name": "shininess",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_texture_set_texture_filter",
        "parameters": [
          {
            "name": "canvas_texture",
            "type": "RID"
          },
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "canvas_texture_set_texture_repeat",
        "parameters": [
          {
            "name": "canvas_texture",
            "type": "RID"
          },
          {
            "name": "repeat",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compositor_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "compositor_effect_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "compositor_effect_set_callback",
        "parameters": [
          {
            "name": "effect",
            "type": "RID"
          },
          {
            "name": "callback_type",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compositor_effect_set_enabled",
        "parameters": [
          {
            "name": "effect",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compositor_effect_set_flag",
        "parameters": [
          {
            "name": "effect",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "set",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "compositor_set_compositor_effects",
        "parameters": [
          {
            "name": "compositor",
            "type": "RID"
          },
          {
            "name": "effects",
            "type": "RID[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_local_rendering_device",
        "parameters": [],
        "return_type": "RenderingDevice"
      },
      {
        "name": "debug_canvas_item_get_rect",
        "parameters": [
          {
            "name": "item",
            "type": "RID"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "decal_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "decal_set_albedo_mix",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "albedo_mix",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_cull_mask",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_distance_fade",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "begin",
            "type": "float"
          },
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_emission_energy",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "energy",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_fade",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "above",
            "type": "float"
          },
          {
            "name": "below",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_modulate",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_normal_fade",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "fade",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_size",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decal_set_texture",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "decals_set_filter",
        "parameters": [
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "directional_light_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "directional_shadow_atlas_set_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "is_16bits",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "directional_soft_shadow_filter_set_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_bake_panorama",
        "parameters": [
          {
            "name": "environment",
            "type": "RID"
          },
          {
            "name": "bake_irradiance",
            "type": "bool"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "environment_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "environment_glow_set_use_bicubic_upscale",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_adjustment",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "brightness",
            "type": "float"
          },
          {
            "name": "contrast",
            "type": "float"
          },
          {
            "name": "saturation",
            "type": "float"
          },
          {
            "name": "use_1d_color_correction",
            "type": "bool"
          },
          {
            "name": "color_correction",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ambient_light",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "ambient",
            "type": "int"
          },
          {
            "name": "energy",
            "type": "float"
          },
          {
            "name": "sky_contribution",
            "type": "float"
          },
          {
            "name": "reflection_source",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_background",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "bg",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_bg_color",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_bg_energy",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "multiplier",
            "type": "float"
          },
          {
            "name": "exposure_value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_camera_id",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_canvas_max_layer",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "max_layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_fog",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "light_color",
            "type": "Color"
          },
          {
            "name": "light_energy",
            "type": "float"
          },
          {
            "name": "sun_scatter",
            "type": "float"
          },
          {
            "name": "density",
            "type": "float"
          },
          {
            "name": "height",
            "type": "float"
          },
          {
            "name": "height_density",
            "type": "float"
          },
          {
            "name": "aerial_perspective",
            "type": "float"
          },
          {
            "name": "sky_affect",
            "type": "float"
          },
          {
            "name": "fog_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_glow",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "levels",
            "type": "PackedFloat32Array"
          },
          {
            "name": "intensity",
            "type": "float"
          },
          {
            "name": "strength",
            "type": "float"
          },
          {
            "name": "mix",
            "type": "float"
          },
          {
            "name": "bloom_threshold",
            "type": "float"
          },
          {
            "name": "blend_mode",
            "type": "int"
          },
          {
            "name": "hdr_bleed_threshold",
            "type": "float"
          },
          {
            "name": "hdr_bleed_scale",
            "type": "float"
          },
          {
            "name": "hdr_luminance_cap",
            "type": "float"
          },
          {
            "name": "glow_map_strength",
            "type": "float"
          },
          {
            "name": "glow_map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sdfgi",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "cascades",
            "type": "int"
          },
          {
            "name": "min_cell_size",
            "type": "float"
          },
          {
            "name": "y_scale",
            "type": "int"
          },
          {
            "name": "use_occlusion",
            "type": "bool"
          },
          {
            "name": "bounce_feedback",
            "type": "float"
          },
          {
            "name": "read_sky",
            "type": "bool"
          },
          {
            "name": "energy",
            "type": "float"
          },
          {
            "name": "normal_bias",
            "type": "float"
          },
          {
            "name": "probe_bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sdfgi_frames_to_converge",
        "parameters": [
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sdfgi_frames_to_update_light",
        "parameters": [
          {
            "name": "frames",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sdfgi_ray_count",
        "parameters": [
          {
            "name": "ray_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sky",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "sky",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sky_custom_fov",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_sky_orientation",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "orientation",
            "type": "Basis"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ssao",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "radius",
            "type": "float"
          },
          {
            "name": "intensity",
            "type": "float"
          },
          {
            "name": "power",
            "type": "float"
          },
          {
            "name": "detail",
            "type": "float"
          },
          {
            "name": "horizon",
            "type": "float"
          },
          {
            "name": "sharpness",
            "type": "float"
          },
          {
            "name": "light_affect",
            "type": "float"
          },
          {
            "name": "ao_channel_affect",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ssao_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          },
          {
            "name": "half_size",
            "type": "bool"
          },
          {
            "name": "adaptive_target",
            "type": "float"
          },
          {
            "name": "blur_passes",
            "type": "int"
          },
          {
            "name": "fadeout_from",
            "type": "float"
          },
          {
            "name": "fadeout_to",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ssil_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          },
          {
            "name": "half_size",
            "type": "bool"
          },
          {
            "name": "adaptive_target",
            "type": "float"
          },
          {
            "name": "blur_passes",
            "type": "int"
          },
          {
            "name": "fadeout_from",
            "type": "float"
          },
          {
            "name": "fadeout_to",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ssr",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "max_steps",
            "type": "int"
          },
          {
            "name": "fade_in",
            "type": "float"
          },
          {
            "name": "fade_out",
            "type": "float"
          },
          {
            "name": "depth_tolerance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_ssr_roughness_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_tonemap",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "tone_mapper",
            "type": "int"
          },
          {
            "name": "exposure",
            "type": "float"
          },
          {
            "name": "white",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_volumetric_fog",
        "parameters": [
          {
            "name": "env",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "density",
            "type": "float"
          },
          {
            "name": "albedo",
            "type": "Color"
          },
          {
            "name": "emission",
            "type": "Color"
          },
          {
            "name": "emission_energy",
            "type": "float"
          },
          {
            "name": "anisotropy",
            "type": "float"
          },
          {
            "name": "length",
            "type": "float"
          },
          {
            "name": "p_detail_spread",
            "type": "float"
          },
          {
            "name": "gi_inject",
            "type": "float"
          },
          {
            "name": "temporal_reprojection",
            "type": "bool"
          },
          {
            "name": "temporal_reprojection_amount",
            "type": "float"
          },
          {
            "name": "ambient_inject",
            "type": "float"
          },
          {
            "name": "sky_affect",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_volumetric_fog_filter_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "environment_set_volumetric_fog_volume_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "depth",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fog_volume_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "fog_volume_set_material",
        "parameters": [
          {
            "name": "fog_volume",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fog_volume_set_shape",
        "parameters": [
          {
            "name": "fog_volume",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fog_volume_set_size",
        "parameters": [
          {
            "name": "fog_volume",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "force_draw",
        "parameters": [
          {
            "name": "swap_buffers",
            "type": "bool"
          },
          {
            "name": "frame_step",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "force_sync",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_current_rendering_driver_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_current_rendering_method",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_default_clear_color",
        "parameters": [],
        "return_type": "Color"
      },
      {
        "name": "get_frame_setup_time_cpu",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_rendering_device",
        "parameters": [],
        "return_type": "RenderingDevice"
      },
      {
        "name": "get_rendering_info",
        "parameters": [
          {
            "name": "info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_shader_parameter_list",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_test_cube",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_test_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_video_adapter_api_version",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_video_adapter_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_video_adapter_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_video_adapter_vendor",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_white_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "gi_set_use_half_resolution",
        "parameters": [
          {
            "name": "half_resolution",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_shader_parameter_add",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "default_value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_shader_parameter_get",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "global_shader_parameter_get_list",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "global_shader_parameter_get_type",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "global_shader_parameter_remove",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_shader_parameter_set",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "global_shader_parameter_set_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "has_changed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_os_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "instance_attach_object_instance_id",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_attach_skeleton",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "skeleton",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "instance_create2",
        "parameters": [
          {
            "name": "base",
            "type": "RID"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "instance_geometry_get_shader_parameter",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "instance_geometry_get_shader_parameter_default_value",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "instance_geometry_get_shader_parameter_list",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "instance_geometry_set_cast_shadows_setting",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "shadow_casting_setting",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_flag",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_lightmap",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "lightmap_uv_scale",
            "type": "Rect2"
          },
          {
            "name": "lightmap_slice",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_lod_bias",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "lod_bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_material_overlay",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_material_override",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_shader_parameter",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_transparency",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "transparency",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_geometry_set_visibility_range",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          },
          {
            "name": "min_margin",
            "type": "float"
          },
          {
            "name": "max_margin",
            "type": "float"
          },
          {
            "name": "fade_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_reset_physics_interpolation",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_base",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "base",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_blend_shape_weight",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "shape",
            "type": "int"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_custom_aabb",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_extra_visibility_margin",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_ignore_culling",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_interpolated",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "interpolated",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_layer_mask",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_pivot_data",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "sorting_offset",
            "type": "float"
          },
          {
            "name": "use_aabb_center",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_scenario",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_surface_override_material",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_transform",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_visibility_parent",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "parent",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instance_set_visible",
        "parameters": [
          {
            "name": "instance",
            "type": "RID"
          },
          {
            "name": "visible",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "instances_cull_aabb",
        "parameters": [
          {
            "name": "aabb",
            "type": "AABB"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "instances_cull_convex",
        "parameters": [
          {
            "name": "convex",
            "type": "Plane[]"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "instances_cull_ray",
        "parameters": [
          {
            "name": "from",
            "type": "Vector3"
          },
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt64Array"
      },
      {
        "name": "is_on_render_thread",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "light_directional_set_blend_splits",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_directional_set_shadow_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_directional_set_sky_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_omni_set_shadow_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_projectors_set_filter",
        "parameters": [
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_bake_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "bake_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_color",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_cull_mask",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_distance_fade",
        "parameters": [
          {
            "name": "decal",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "begin",
            "type": "float"
          },
          {
            "name": "shadow",
            "type": "float"
          },
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_max_sdfgi_cascade",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "cascade",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_negative",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_param",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_projector",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_reverse_cull_face_mode",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_shadow",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "light_set_shadow_caster_mask",
        "parameters": [
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "lightmap_get_probe_capture_bsp_tree",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "lightmap_get_probe_capture_points",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          }
        ],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "lightmap_get_probe_capture_sh",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          }
        ],
        "return_type": "PackedColorArray"
      },
      {
        "name": "lightmap_get_probe_capture_tetrahedra",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "lightmap_set_baked_exposure_normalization",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "baked_exposure",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_set_probe_bounds",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "bounds",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_set_probe_capture_data",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "points",
            "type": "PackedVector3Array"
          },
          {
            "name": "point_sh",
            "type": "PackedColorArray"
          },
          {
            "name": "tetrahedra",
            "type": "PackedInt32Array"
          },
          {
            "name": "bsp_tree",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_set_probe_capture_update_speed",
        "parameters": [
          {
            "name": "speed",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_set_probe_interior",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "interior",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmap_set_textures",
        "parameters": [
          {
            "name": "lightmap",
            "type": "RID"
          },
          {
            "name": "light",
            "type": "RID"
          },
          {
            "name": "uses_sh",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "lightmaps_set_bicubic_filter",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "make_sphere_mesh",
        "parameters": [
          {
            "name": "latitudes",
            "type": "int"
          },
          {
            "name": "longitudes",
            "type": "int"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "material_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "material_get_param",
        "parameters": [
          {
            "name": "material",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "material_set_next_pass",
        "parameters": [
          {
            "name": "material",
            "type": "RID"
          },
          {
            "name": "next_material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "material_set_param",
        "parameters": [
          {
            "name": "material",
            "type": "RID"
          },
          {
            "name": "parameter",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "material_set_render_priority",
        "parameters": [
          {
            "name": "material",
            "type": "RID"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "material_set_shader",
        "parameters": [
          {
            "name": "shader_material",
            "type": "RID"
          },
          {
            "name": "shader",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_add_surface",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_add_surface_from_arrays",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "primitive",
            "type": "int"
          },
          {
            "name": "arrays",
            "type": "Array"
          },
          {
            "name": "blend_shapes",
            "type": "Array"
          },
          {
            "name": "lods",
            "type": "Dictionary"
          },
          {
            "name": "compress_format",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_clear",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "mesh_create_from_surfaces",
        "parameters": [
          {
            "name": "surfaces",
            "type": "Dictionary[]"
          },
          {
            "name": "blend_shape_count",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "mesh_get_blend_shape_count",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_get_blend_shape_mode",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_get_custom_aabb",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "mesh_get_surface",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "mesh_get_surface_count",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_set_blend_shape_mode",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_set_custom_aabb",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_set_shadow_mesh",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "shadow_mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_surface_get_arrays",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "mesh_surface_get_blend_shape_arrays",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "Array[]"
      },
      {
        "name": "mesh_surface_get_format_attribute_stride",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "vertex_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_surface_get_format_normal_tangent_stride",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "vertex_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_surface_get_format_offset",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "vertex_count",
            "type": "int"
          },
          {
            "name": "array_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_surface_get_format_skin_stride",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "vertex_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_surface_get_format_vertex_stride",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "vertex_count",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "mesh_surface_get_material",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "mesh_surface_remove",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_surface_set_material",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_surface_update_attribute_region",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_surface_update_skin_region",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mesh_surface_update_vertex_region",
        "parameters": [
          {
            "name": "mesh",
            "type": "RID"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "int"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_allocate_data",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "instances",
            "type": "int"
          },
          {
            "name": "transform_format",
            "type": "int"
          },
          {
            "name": "color_format",
            "type": "bool"
          },
          {
            "name": "custom_data_format",
            "type": "bool"
          },
          {
            "name": "use_indirect",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "multimesh_get_aabb",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "multimesh_get_buffer",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "PackedFloat32Array"
      },
      {
        "name": "multimesh_get_buffer_rd_rid",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "multimesh_get_command_buffer_rd_rid",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "multimesh_get_custom_aabb",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "multimesh_get_instance_count",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "multimesh_get_mesh",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "multimesh_get_visible_instances",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "multimesh_instance_get_color",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "multimesh_instance_get_custom_data",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "multimesh_instance_get_transform",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "multimesh_instance_get_transform_2d",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "multimesh_instance_reset_physics_interpolation",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_instance_set_color",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_instance_set_custom_data",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "custom_data",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_instance_set_transform",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_instance_set_transform_2d",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_buffer",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "buffer",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_buffer_interpolated",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "buffer",
            "type": "PackedFloat32Array"
          },
          {
            "name": "buffer_previous",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_custom_aabb",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_mesh",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_physics_interpolated",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "interpolated",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_physics_interpolation_quality",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "multimesh_set_visible_instances",
        "parameters": [
          {
            "name": "multimesh",
            "type": "RID"
          },
          {
            "name": "visible",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "occluder_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "occluder_set_mesh",
        "parameters": [
          {
            "name": "occluder",
            "type": "RID"
          },
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          },
          {
            "name": "indices",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "omni_light_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "particles_collision_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "particles_collision_height_field_update",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_attractor_attenuation",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "curve",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_attractor_directionality",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_attractor_strength",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "strength",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_box_extents",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "extents",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_collision_type",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_cull_mask",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_field_texture",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_height_field_mask",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_height_field_resolution",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "resolution",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_collision_set_sphere_radius",
        "parameters": [
          {
            "name": "particles_collision",
            "type": "RID"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "particles_emit",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "custom",
            "type": "Color"
          },
          {
            "name": "emit_flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_get_current_aabb",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          }
        ],
        "return_type": "AABB"
      },
      {
        "name": "particles_get_emitting",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "particles_is_inactive",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "particles_request_process",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_request_process_time",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_restart",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_amount",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_amount_ratio",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_collision_base_size",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_custom_aabb",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_draw_order",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "order",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_draw_pass_mesh",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "pass",
            "type": "int"
          },
          {
            "name": "mesh",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_draw_passes",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_emission_transform",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_emitter_velocity",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_emitting",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "emitting",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_explosiveness_ratio",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_fixed_fps",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "fps",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_fractional_delta",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_interp_to_end",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "factor",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_interpolate",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_lifetime",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "lifetime",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_mode",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_one_shot",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "one_shot",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_pre_process_time",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_process_material",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_randomness_ratio",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_speed_scale",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_subemitter",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "subemitter_particles",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_trail_bind_poses",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "bind_poses",
            "type": "Transform3D[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_trails",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "length_sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_transform_align",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "align",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "particles_set_use_local_coordinates",
        "parameters": [
          {
            "name": "particles",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "positional_soft_shadow_filter_set_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "reflection_probe_set_ambient_color",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_ambient_energy",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "energy",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_ambient_mode",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_as_interior",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_blend_distance",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "blend_distance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_cull_mask",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_enable_box_projection",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_enable_shadows",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_intensity",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "intensity",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_max_distance",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "distance",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_mesh_lod_threshold",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "pixels",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_origin_offset",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_reflection_mask",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_resolution",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "resolution",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_size",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reflection_probe_set_update_mode",
        "parameters": [
          {
            "name": "probe",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "request_frame_drawn_callback",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scenario_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "scenario_set_camera_attributes",
        "parameters": [
          {
            "name": "scenario",
            "type": "RID"
          },
          {
            "name": "effects",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scenario_set_compositor",
        "parameters": [
          {
            "name": "scenario",
            "type": "RID"
          },
          {
            "name": "compositor",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scenario_set_environment",
        "parameters": [
          {
            "name": "scenario",
            "type": "RID"
          },
          {
            "name": "environment",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scenario_set_fallback_environment",
        "parameters": [
          {
            "name": "scenario",
            "type": "RID"
          },
          {
            "name": "environment",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "screen_space_roughness_limiter_set_active",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          },
          {
            "name": "amount",
            "type": "float"
          },
          {
            "name": "limit",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_boot_image",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "scale",
            "type": "bool"
          },
          {
            "name": "use_filter",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_debug_generate_wireframes",
        "parameters": [
          {
            "name": "generate",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_default_clear_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shader_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "shader_get_code",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "shader_get_default_texture_parameter",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "shader_get_parameter_default",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "shader_set_code",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "code",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shader_set_default_texture_parameter",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shader_set_path_hint",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "skeleton_allocate_data",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "bones",
            "type": "int"
          },
          {
            "name": "is_2d_skeleton",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "skeleton_bone_get_transform",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "skeleton_bone_get_transform_2d",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "skeleton_bone_set_transform",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "bone",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "skeleton_bone_set_transform_2d",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "bone",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "skeleton_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "skeleton_get_bone_count",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "skeleton_set_base_transform_2d",
        "parameters": [
          {
            "name": "skeleton",
            "type": "RID"
          },
          {
            "name": "base_transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sky_bake_panorama",
        "parameters": [
          {
            "name": "sky",
            "type": "RID"
          },
          {
            "name": "energy",
            "type": "float"
          },
          {
            "name": "bake_irradiance",
            "type": "bool"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "sky_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "sky_set_material",
        "parameters": [
          {
            "name": "sky",
            "type": "RID"
          },
          {
            "name": "material",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sky_set_mode",
        "parameters": [
          {
            "name": "sky",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sky_set_radiance_size",
        "parameters": [
          {
            "name": "sky",
            "type": "RID"
          },
          {
            "name": "radiance_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "spot_light_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "sub_surface_scattering_set_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "sub_surface_scattering_set_scale",
        "parameters": [
          {
            "name": "scale",
            "type": "float"
          },
          {
            "name": "depth_scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_2d_create",
        "parameters": [
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_2d_get",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "texture_2d_layer_get",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "texture_2d_layered_create",
        "parameters": [
          {
            "name": "layers",
            "type": "Image[]"
          },
          {
            "name": "layered_type",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_2d_layered_placeholder_create",
        "parameters": [
          {
            "name": "layered_type",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_2d_placeholder_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "texture_2d_update",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "image",
            "type": "Image"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_3d_create",
        "parameters": [
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "depth",
            "type": "int"
          },
          {
            "name": "mipmaps",
            "type": "bool"
          },
          {
            "name": "data",
            "type": "Image[]"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_3d_get",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "Image[]"
      },
      {
        "name": "texture_3d_placeholder_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "texture_3d_update",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "Image[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_create_from_native_handle",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "format",
            "type": "int"
          },
          {
            "name": "native_handle",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "depth",
            "type": "int"
          },
          {
            "name": "layers",
            "type": "int"
          },
          {
            "name": "layered_type",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_get_format",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_get_native_handle",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "srgb",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "texture_get_path",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "texture_get_rd_texture",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "srgb",
            "type": "bool"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_proxy_create",
        "parameters": [
          {
            "name": "base",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_proxy_update",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "proxy_to",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_rd_create",
        "parameters": [
          {
            "name": "rd_texture",
            "type": "RID"
          },
          {
            "name": "layer_type",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "texture_replace",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "by_texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_set_force_redraw_if_visible",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_set_path",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "texture_set_size_override",
        "parameters": [
          {
            "name": "texture",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_attach_camera",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "camera",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_attach_canvas",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_attach_to_screen",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "screen",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "viewport_get_measured_render_time_cpu",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "viewport_get_measured_render_time_gpu",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "viewport_get_render_info",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "viewport_get_render_target",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "viewport_get_texture",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "viewport_get_update_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "viewport_remove_canvas",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_active",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_anisotropic_filtering_level",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "anisotropic_filtering_level",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_canvas_cull_mask",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "canvas_cull_mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_canvas_stacking",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "sublayer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_canvas_transform",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "offset",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_clear_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "clear_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_debug_draw",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "draw",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_default_canvas_item_texture_filter",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "filter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_default_canvas_item_texture_repeat",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "repeat",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_disable_2d",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_disable_3d",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "disable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_environment_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_fsr_sharpness",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "sharpness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_global_canvas_transform",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_measure_render_time",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_msaa_2d",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "msaa",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_msaa_3d",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "msaa",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_occlusion_culling_build_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_occlusion_rays_per_thread",
        "parameters": [
          {
            "name": "rays_per_thread",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_parent_viewport",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "parent_viewport",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_positional_shadow_atlas_quadrant_subdivision",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "quadrant",
            "type": "int"
          },
          {
            "name": "subdivision",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_positional_shadow_atlas_size",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "use_16_bits",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_render_direct_to_screen",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_scaling_3d_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "scaling_3d_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_scaling_3d_scale",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_scenario",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "scenario",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_screen_space_aa",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_sdf_oversize_and_scale",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "oversize",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_size",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_snap_2d_transforms_to_pixel",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_snap_2d_vertices_to_pixel",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_texture_mipmap_bias",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "mipmap_bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_transparent_background",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_update_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "update_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_use_debanding",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_use_hdr_2d",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_use_occlusion_culling",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_use_taa",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_use_xr",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "use_xr",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_vrs_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_vrs_texture",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "texture",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "viewport_set_vrs_update_mode",
        "parameters": [
          {
            "name": "viewport",
            "type": "RID"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "visibility_notifier_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "visibility_notifier_set_aabb",
        "parameters": [
          {
            "name": "notifier",
            "type": "RID"
          },
          {
            "name": "aabb",
            "type": "AABB"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "visibility_notifier_set_callbacks",
        "parameters": [
          {
            "name": "notifier",
            "type": "RID"
          },
          {
            "name": "enter_callable",
            "type": "Callable"
          },
          {
            "name": "exit_callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_allocate_data",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "to_cell_xform",
            "type": "Transform3D"
          },
          {
            "name": "aabb",
            "type": "AABB"
          },
          {
            "name": "octree_size",
            "type": "Vector3i"
          },
          {
            "name": "octree_cells",
            "type": "PackedByteArray"
          },
          {
            "name": "data_cells",
            "type": "PackedByteArray"
          },
          {
            "name": "distance_field",
            "type": "PackedByteArray"
          },
          {
            "name": "level_counts",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_create",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "voxel_gi_get_data_cells",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "voxel_gi_get_distance_field",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "voxel_gi_get_level_counts",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "voxel_gi_get_octree_cells",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "PackedByteArray"
      },
      {
        "name": "voxel_gi_get_octree_size",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "voxel_gi_get_to_cell_xform",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "voxel_gi_set_baked_exposure_normalization",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "baked_exposure",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_bias",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_dynamic_range",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "range",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_energy",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "energy",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_interior",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_normal_bias",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "bias",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_propagation",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "amount",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_quality",
        "parameters": [
          {
            "name": "quality",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "voxel_gi_set_use_two_bounces",
        "parameters": [
          {
            "name": "voxel_gi",
            "type": "RID"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RenderingServer",
    "parent": "Object",
    "properties": [
      {
        "name": "render_loop_enabled",
        "type": "bool"
      }
    ]
  },
  "Resource": {
    "methods": [
      {
        "name": "_get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_reset_state",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_set_path_cache",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_setup_local_to_scene",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate",
        "parameters": [
          {
            "name": "subresources",
            "type": "bool"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "emit_changed",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "generate_scene_unique_id",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_id_for_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_local_scene",
        "parameters": [],
        "return_type": "Node"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "is_built_in",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "reset_state",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_id_for_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "id",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_path_cache",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "setup_local_to_scene",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "take_over_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Resource",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "resource_name",
        "type": "String"
      },
      {
        "name": "resource_path",
        "type": "String"
      },
      {
        "name": "resource_scene_unique_id",
        "type": "String"
      }
    ]
  },
  "ResourceFormatLoader": {
    "methods": [
      {
        "name": "_exists",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_get_classes_used",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_dependencies",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "add_types",
            "type": "bool"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_recognized_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_resource_script_class",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_resource_type",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_resource_uid",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_handles_type",
        "parameters": [
          {
            "name": "type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "original_path",
            "type": "String"
          },
          {
            "name": "use_sub_threads",
            "type": "bool"
          },
          {
            "name": "cache_mode",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_recognize_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_rename_dependencies",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "renames",
            "type": "Dictionary"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "ResourceFormatLoader",
    "parent": "RefCounted",
    "properties": []
  },
  "ResourceFormatSaver": {
    "methods": [
      {
        "name": "_get_recognized_extensions",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_recognize",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_recognize_path",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_save",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_set_uid",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "uid",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "ResourceFormatSaver",
    "parent": "RefCounted",
    "properties": []
  },
  "ResourceImporter": {
    "methods": [],
    "name": "ResourceImporter",
    "parent": "RefCounted",
    "properties": []
  },
  "ResourceImporterBMFont": {
    "methods": [],
    "name": "ResourceImporterBMFont",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "compress",
        "type": "bool"
      },
      {
        "name": "fallbacks",
        "type": "Array"
      },
      {
        "name": "scaling_mode",
        "type": "int"
      }
    ]
  },
  "ResourceImporterBitMap": {
    "methods": [],
    "name": "ResourceImporterBitMap",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "create_from",
        "type": "int"
      },
      {
        "name": "threshold",
        "type": "float"
      }
    ]
  },
  "ResourceImporterCSVTranslation": {
    "methods": [],
    "name": "ResourceImporterCSVTranslation",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "compress",
        "type": "bool"
      },
      {
        "name": "delimiter",
        "type": "int"
      }
    ]
  },
  "ResourceImporterDynamicFont": {
    "methods": [],
    "name": "ResourceImporterDynamicFont",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "allow_system_fallback",
        "type": "bool"
      },
      {
        "name": "antialiasing",
        "type": "int"
      },
      {
        "name": "compress",
        "type": "bool"
      },
      {
        "name": "disable_embedded_bitmaps",
        "type": "bool"
      },
      {
        "name": "fallbacks",
        "type": "Array"
      },
      {
        "name": "force_autohinter",
        "type": "bool"
      },
      {
        "name": "generate_mipmaps",
        "type": "bool"
      },
      {
        "name": "hinting",
        "type": "int"
      },
      {
        "name": "keep_rounding_remainders",
        "type": "bool"
      },
      {
        "name": "language_support",
        "type": "Dictionary"
      },
      {
        "name": "msdf_pixel_range",
        "type": "int"
      },
      {
        "name": "msdf_size",
        "type": "int"
      },
      {
        "name": "multichannel_signed_distance_field",
        "type": "bool"
      },
      {
        "name": "opentype_features",
        "type": "Dictionary"
      },
      {
        "name": "oversampling",
        "type": "float"
      },
      {
        "name": "preload",
        "type": "Array"
      },
      {
        "name": "script_support",
        "type": "Dictionary"
      },
      {
        "name": "subpixel_positioning",
        "type": "int"
      }
    ]
  },
  "ResourceImporterImage": {
    "methods": [],
    "name": "ResourceImporterImage",
    "parent": "ResourceImporter",
    "properties": []
  },
  "ResourceImporterImageFont": {
    "methods": [],
    "name": "ResourceImporterImageFont",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "ascent",
        "type": "int"
      },
      {
        "name": "character_margin",
        "type": "Rect2i"
      },
      {
        "name": "character_ranges",
        "type": "PackedStringArray"
      },
      {
        "name": "columns",
        "type": "int"
      },
      {
        "name": "compress",
        "type": "bool"
      },
      {
        "name": "descent",
        "type": "int"
      },
      {
        "name": "fallbacks",
        "type": "Array"
      },
      {
        "name": "image_margin",
        "type": "Rect2i"
      },
      {
        "name": "kerning_pairs",
        "type": "PackedStringArray"
      },
      {
        "name": "rows",
        "type": "int"
      },
      {
        "name": "scaling_mode",
        "type": "int"
      }
    ]
  },
  "ResourceImporterLayeredTexture": {
    "methods": [],
    "name": "ResourceImporterLayeredTexture",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "compress/channel_pack",
        "type": "int"
      },
      {
        "name": "compress/hdr_compression",
        "type": "int"
      },
      {
        "name": "compress/high_quality",
        "type": "bool"
      },
      {
        "name": "compress/lossy_quality",
        "type": "float"
      },
      {
        "name": "compress/mode",
        "type": "int"
      },
      {
        "name": "mipmaps/generate",
        "type": "bool"
      },
      {
        "name": "mipmaps/limit",
        "type": "int"
      },
      {
        "name": "slices/arrangement",
        "type": "int"
      }
    ]
  },
  "ResourceImporterOBJ": {
    "methods": [],
    "name": "ResourceImporterOBJ",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "force_disable_mesh_compression",
        "type": "bool"
      },
      {
        "name": "generate_lightmap_uv2",
        "type": "bool"
      },
      {
        "name": "generate_lightmap_uv2_texel_size",
        "type": "float"
      },
      {
        "name": "generate_lods",
        "type": "bool"
      },
      {
        "name": "generate_shadow_mesh",
        "type": "bool"
      },
      {
        "name": "generate_tangents",
        "type": "bool"
      },
      {
        "name": "offset_mesh",
        "type": "Vector3"
      },
      {
        "name": "scale_mesh",
        "type": "Vector3"
      }
    ]
  },
  "ResourceImporterScene": {
    "methods": [],
    "name": "ResourceImporterScene",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "_subresources",
        "type": "Dictionary"
      },
      {
        "name": "animation/fps",
        "type": "float"
      },
      {
        "name": "animation/import",
        "type": "bool"
      },
      {
        "name": "animation/import_rest_as_RESET",
        "type": "bool"
      },
      {
        "name": "animation/remove_immutable_tracks",
        "type": "bool"
      },
      {
        "name": "animation/trimming",
        "type": "bool"
      },
      {
        "name": "import_script/path",
        "type": "String"
      },
      {
        "name": "meshes/create_shadow_meshes",
        "type": "bool"
      },
      {
        "name": "meshes/ensure_tangents",
        "type": "bool"
      },
      {
        "name": "meshes/force_disable_compression",
        "type": "bool"
      },
      {
        "name": "meshes/generate_lods",
        "type": "bool"
      },
      {
        "name": "meshes/light_baking",
        "type": "int"
      },
      {
        "name": "meshes/lightmap_texel_size",
        "type": "float"
      },
      {
        "name": "nodes/apply_root_scale",
        "type": "bool"
      },
      {
        "name": "nodes/import_as_skeleton_bones",
        "type": "bool"
      },
      {
        "name": "nodes/root_name",
        "type": "String"
      },
      {
        "name": "nodes/root_scale",
        "type": "float"
      },
      {
        "name": "nodes/root_type",
        "type": "String"
      },
      {
        "name": "nodes/use_node_type_suffixes",
        "type": "bool"
      },
      {
        "name": "skins/use_named_skins",
        "type": "bool"
      }
    ]
  },
  "ResourceImporterShaderFile": {
    "methods": [],
    "name": "ResourceImporterShaderFile",
    "parent": "ResourceImporter",
    "properties": []
  },
  "ResourceImporterTexture": {
    "methods": [],
    "name": "ResourceImporterTexture",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "compress/channel_pack",
        "type": "int"
      },
      {
        "name": "compress/hdr_compression",
        "type": "int"
      },
      {
        "name": "compress/high_quality",
        "type": "bool"
      },
      {
        "name": "compress/lossy_quality",
        "type": "float"
      },
      {
        "name": "compress/mode",
        "type": "int"
      },
      {
        "name": "compress/normal_map",
        "type": "int"
      },
      {
        "name": "detect_3d/compress_to",
        "type": "int"
      },
      {
        "name": "editor/convert_colors_with_editor_theme",
        "type": "bool"
      },
      {
        "name": "editor/scale_with_editor_scale",
        "type": "bool"
      },
      {
        "name": "mipmaps/generate",
        "type": "bool"
      },
      {
        "name": "mipmaps/limit",
        "type": "int"
      },
      {
        "name": "process/fix_alpha_border",
        "type": "bool"
      },
      {
        "name": "process/hdr_as_srgb",
        "type": "bool"
      },
      {
        "name": "process/hdr_clamp_exposure",
        "type": "bool"
      },
      {
        "name": "process/normal_map_invert_y",
        "type": "bool"
      },
      {
        "name": "process/premult_alpha",
        "type": "bool"
      },
      {
        "name": "process/size_limit",
        "type": "int"
      },
      {
        "name": "roughness/mode",
        "type": "int"
      },
      {
        "name": "roughness/src_normal",
        "type": "String"
      },
      {
        "name": "svg/scale",
        "type": "float"
      }
    ]
  },
  "ResourceImporterTextureAtlas": {
    "methods": [],
    "name": "ResourceImporterTextureAtlas",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "atlas_file",
        "type": "String"
      },
      {
        "name": "crop_to_region",
        "type": "bool"
      },
      {
        "name": "import_mode",
        "type": "int"
      },
      {
        "name": "trim_alpha_border_from_region",
        "type": "bool"
      }
    ]
  },
  "ResourceImporterWAV": {
    "methods": [],
    "name": "ResourceImporterWAV",
    "parent": "ResourceImporter",
    "properties": [
      {
        "name": "compress/mode",
        "type": "int"
      },
      {
        "name": "edit/loop_begin",
        "type": "int"
      },
      {
        "name": "edit/loop_end",
        "type": "int"
      },
      {
        "name": "edit/loop_mode",
        "type": "int"
      },
      {
        "name": "edit/normalize",
        "type": "bool"
      },
      {
        "name": "edit/trim",
        "type": "bool"
      },
      {
        "name": "force/8_bit",
        "type": "bool"
      },
      {
        "name": "force/max_rate",
        "type": "bool"
      },
      {
        "name": "force/max_rate_hz",
        "type": "float"
      },
      {
        "name": "force/mono",
        "type": "bool"
      }
    ]
  },
  "ResourceLoader": {
    "methods": [
      {
        "name": "add_resource_format_loader",
        "parameters": [
          {
            "name": "format_loader",
            "type": "ResourceFormatLoader"
          },
          {
            "name": "at_front",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "exists",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "type_hint",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_cached_ref",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "get_dependencies",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_recognized_extensions_for_type",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_resource_uid",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has_cached",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "list_directory",
        "parameters": [
          {
            "name": "directory_path",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "type_hint",
            "type": "String"
          },
          {
            "name": "cache_mode",
            "type": "int"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "load_threaded_get",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "load_threaded_get_status",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "progress",
            "type": "Array"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_threaded_request",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "type_hint",
            "type": "String"
          },
          {
            "name": "use_sub_threads",
            "type": "bool"
          },
          {
            "name": "cache_mode",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "remove_resource_format_loader",
        "parameters": [
          {
            "name": "format_loader",
            "type": "ResourceFormatLoader"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_abort_on_missing_resources",
        "parameters": [
          {
            "name": "abort",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ResourceLoader",
    "parent": "Object",
    "properties": []
  },
  "ResourcePreloader": {
    "methods": [
      {
        "name": "add_resource",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_resource",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Resource"
      },
      {
        "name": "get_resource_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "has_resource",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_resource",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_resource",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "newname",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ResourcePreloader",
    "parent": "Node",
    "properties": []
  },
  "ResourceSaver": {
    "methods": [
      {
        "name": "add_resource_format_saver",
        "parameters": [
          {
            "name": "format_saver",
            "type": "ResourceFormatSaver"
          },
          {
            "name": "at_front",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_recognized_extensions",
        "parameters": [
          {
            "name": "type",
            "type": "Resource"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_resource_id_for_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "generate",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "remove_resource_format_saver",
        "parameters": [
          {
            "name": "format_saver",
            "type": "ResourceFormatSaver"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "save",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "ResourceSaver",
    "parent": "Object",
    "properties": []
  },
  "ResourceUID": {
    "methods": [
      {
        "name": "add_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_id_path",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "id_to_text",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "remove_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "text_to_id",
        "parameters": [
          {
            "name": "text_id",
            "type": "String"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "ResourceUID",
    "parent": "Object",
    "properties": []
  },
  "RetargetModifier3D": {
    "methods": [
      {
        "name": "is_position_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_rotation_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_scale_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_position_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_rotation_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_scale_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RetargetModifier3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "enable",
        "type": "int"
      },
      {
        "name": "profile",
        "type": "SkeletonProfile"
      },
      {
        "name": "use_global_pose",
        "type": "bool"
      }
    ]
  },
  "RibbonTrailMesh": {
    "methods": [],
    "name": "RibbonTrailMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "curve",
        "type": "Curve"
      },
      {
        "name": "section_length",
        "type": "float"
      },
      {
        "name": "section_segments",
        "type": "int"
      },
      {
        "name": "sections",
        "type": "int"
      },
      {
        "name": "shape",
        "type": "int"
      },
      {
        "name": "size",
        "type": "float"
      }
    ]
  },
  "RichTextEffect": {
    "methods": [
      {
        "name": "_process_custom_fx",
        "parameters": [
          {
            "name": "char_fx",
            "type": "CharFXTransform"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "RichTextEffect",
    "parent": "Resource",
    "properties": []
  },
  "RichTextLabel": {
    "methods": [
      {
        "name": "add_image",
        "parameters": [
          {
            "name": "image",
            "type": "Texture2D"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "region",
            "type": "Rect2"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "pad",
            "type": "bool"
          },
          {
            "name": "tooltip",
            "type": "String"
          },
          {
            "name": "size_in_percent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_text",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_text",
        "parameters": [
          {
            "name": "bbcode",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "deselect",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_character_line",
        "parameters": [
          {
            "name": "character",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_character_paragraph",
        "parameters": [
          {
            "name": "character",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_content_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_content_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_offset",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_line_range",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_menu",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_paragraph_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_paragraph_offset",
        "parameters": [
          {
            "name": "paragraph",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_parsed_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_selected_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_selection_from",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_selection_line_offset",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_selection_to",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_total_character_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_v_scroll_bar",
        "parameters": [],
        "return_type": "VScrollBar"
      },
      {
        "name": "get_visible_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_visible_paragraph_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "install_effect",
        "parameters": [
          {
            "name": "effect",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "invalidate_paragraph",
        "parameters": [
          {
            "name": "paragraph",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finished",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_menu_visible",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_ready",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "menu_option",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "newline",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "parse_bbcode",
        "parameters": [
          {
            "name": "bbcode",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "parse_expressions_for_values",
        "parameters": [
          {
            "name": "expressions",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "pop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "pop_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "pop_context",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_bgcolor",
        "parameters": [
          {
            "name": "bgcolor",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_bold",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_bold_italics",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_cell",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_context",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_customfx",
        "parameters": [
          {
            "name": "effect",
            "type": "RichTextEffect"
          },
          {
            "name": "env",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_dropcap",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "dropcap_margins",
            "type": "Rect2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "outline_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_fgcolor",
        "parameters": [
          {
            "name": "fgcolor",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_font",
        "parameters": [
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_font_size",
        "parameters": [
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_hint",
        "parameters": [
          {
            "name": "description",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_indent",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_italics",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_language",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_list",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "capitalize",
            "type": "bool"
          },
          {
            "name": "bullet",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_meta",
        "parameters": [
          {
            "name": "data",
            "type": "Variant"
          },
          {
            "name": "underline_mode",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_mono",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_normal",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_outline_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_outline_size",
        "parameters": [
          {
            "name": "outline_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_paragraph",
        "parameters": [
          {
            "name": "alignment",
            "type": "int"
          },
          {
            "name": "base_direction",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "st_parser",
            "type": "int"
          },
          {
            "name": "justification_flags",
            "type": "int"
          },
          {
            "name": "tab_stops",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_strikethrough",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_table",
        "parameters": [
          {
            "name": "columns",
            "type": "int"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "align_to_row",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_underline",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_paragraph",
        "parameters": [
          {
            "name": "paragraph",
            "type": "int"
          },
          {
            "name": "no_invalidate",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "scroll_to_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scroll_to_paragraph",
        "parameters": [
          {
            "name": "paragraph",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "scroll_to_selection",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "select_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_cell_border_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell_padding",
        "parameters": [
          {
            "name": "padding",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell_row_background_color",
        "parameters": [
          {
            "name": "odd_row_bg",
            "type": "Color"
          },
          {
            "name": "even_row_bg",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell_size_override",
        "parameters": [
          {
            "name": "min_size",
            "type": "Vector2"
          },
          {
            "name": "max_size",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_table_column_expand",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "expand",
            "type": "bool"
          },
          {
            "name": "ratio",
            "type": "int"
          },
          {
            "name": "shrink",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_image",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "mask",
            "type": "int"
          },
          {
            "name": "image",
            "type": "Texture2D"
          },
          {
            "name": "width",
            "type": "int"
          },
          {
            "name": "height",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "region",
            "type": "Rect2"
          },
          {
            "name": "pad",
            "type": "bool"
          },
          {
            "name": "tooltip",
            "type": "String"
          },
          {
            "name": "size_in_percent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RichTextLabel",
    "parent": "Control",
    "properties": [
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "bbcode_enabled",
        "type": "bool"
      },
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "context_menu_enabled",
        "type": "bool"
      },
      {
        "name": "custom_effects",
        "type": "Array"
      },
      {
        "name": "deselect_on_focus_loss_enabled",
        "type": "bool"
      },
      {
        "name": "drag_and_drop_selection_enabled",
        "type": "bool"
      },
      {
        "name": "fit_content",
        "type": "bool"
      },
      {
        "name": "hint_underlined",
        "type": "bool"
      },
      {
        "name": "horizontal_alignment",
        "type": "int"
      },
      {
        "name": "justification_flags",
        "type": "int"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "meta_underlined",
        "type": "bool"
      },
      {
        "name": "progress_bar_delay",
        "type": "int"
      },
      {
        "name": "scroll_active",
        "type": "bool"
      },
      {
        "name": "scroll_following",
        "type": "bool"
      },
      {
        "name": "selection_enabled",
        "type": "bool"
      },
      {
        "name": "shortcut_keys_enabled",
        "type": "bool"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "tab_size",
        "type": "int"
      },
      {
        "name": "tab_stops",
        "type": "PackedFloat32Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "threaded",
        "type": "bool"
      },
      {
        "name": "vertical_alignment",
        "type": "int"
      },
      {
        "name": "visible_characters",
        "type": "int"
      },
      {
        "name": "visible_characters_behavior",
        "type": "int"
      },
      {
        "name": "visible_ratio",
        "type": "float"
      }
    ]
  },
  "RigidBody2D": {
    "methods": [
      {
        "name": "_integrate_forces",
        "parameters": [
          {
            "name": "state",
            "type": "PhysicsDirectBodyState2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector2"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque_impulse",
        "parameters": [
          {
            "name": "torque",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_colliding_bodies",
        "parameters": [],
        "return_type": "Node2D[]"
      },
      {
        "name": "get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_axis_velocity",
        "parameters": [
          {
            "name": "axis_velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RigidBody2D",
    "parent": "PhysicsBody2D",
    "properties": [
      {
        "name": "angular_damp",
        "type": "float"
      },
      {
        "name": "angular_damp_mode",
        "type": "int"
      },
      {
        "name": "angular_velocity",
        "type": "float"
      },
      {
        "name": "can_sleep",
        "type": "bool"
      },
      {
        "name": "center_of_mass",
        "type": "Vector2"
      },
      {
        "name": "center_of_mass_mode",
        "type": "int"
      },
      {
        "name": "constant_force",
        "type": "Vector2"
      },
      {
        "name": "constant_torque",
        "type": "float"
      },
      {
        "name": "contact_monitor",
        "type": "bool"
      },
      {
        "name": "continuous_cd",
        "type": "int"
      },
      {
        "name": "custom_integrator",
        "type": "bool"
      },
      {
        "name": "freeze",
        "type": "bool"
      },
      {
        "name": "freeze_mode",
        "type": "int"
      },
      {
        "name": "gravity_scale",
        "type": "float"
      },
      {
        "name": "inertia",
        "type": "float"
      },
      {
        "name": "linear_damp",
        "type": "float"
      },
      {
        "name": "linear_damp_mode",
        "type": "int"
      },
      {
        "name": "linear_velocity",
        "type": "Vector2"
      },
      {
        "name": "lock_rotation",
        "type": "bool"
      },
      {
        "name": "mass",
        "type": "float"
      },
      {
        "name": "max_contacts_reported",
        "type": "int"
      },
      {
        "name": "physics_material_override",
        "type": "PhysicsMaterial"
      },
      {
        "name": "sleeping",
        "type": "bool"
      }
    ]
  },
  "RigidBody3D": {
    "methods": [
      {
        "name": "_integrate_forces",
        "parameters": [
          {
            "name": "state",
            "type": "PhysicsDirectBodyState3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_constant_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_central_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_force",
        "parameters": [
          {
            "name": "force",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque",
        "parameters": [
          {
            "name": "torque",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_torque_impulse",
        "parameters": [
          {
            "name": "impulse",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_colliding_bodies",
        "parameters": [],
        "return_type": "Node3D[]"
      },
      {
        "name": "get_contact_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_inverse_inertia_tensor",
        "parameters": [],
        "return_type": "Basis"
      },
      {
        "name": "set_axis_velocity",
        "parameters": [
          {
            "name": "axis_velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "RigidBody3D",
    "parent": "PhysicsBody3D",
    "properties": [
      {
        "name": "angular_damp",
        "type": "float"
      },
      {
        "name": "angular_damp_mode",
        "type": "int"
      },
      {
        "name": "angular_velocity",
        "type": "Vector3"
      },
      {
        "name": "can_sleep",
        "type": "bool"
      },
      {
        "name": "center_of_mass",
        "type": "Vector3"
      },
      {
        "name": "center_of_mass_mode",
        "type": "int"
      },
      {
        "name": "constant_force",
        "type": "Vector3"
      },
      {
        "name": "constant_torque",
        "type": "Vector3"
      },
      {
        "name": "contact_monitor",
        "type": "bool"
      },
      {
        "name": "continuous_cd",
        "type": "bool"
      },
      {
        "name": "custom_integrator",
        "type": "bool"
      },
      {
        "name": "freeze",
        "type": "bool"
      },
      {
        "name": "freeze_mode",
        "type": "int"
      },
      {
        "name": "gravity_scale",
        "type": "float"
      },
      {
        "name": "inertia",
        "type": "Vector3"
      },
      {
        "name": "linear_damp",
        "type": "float"
      },
      {
        "name": "linear_damp_mode",
        "type": "int"
      },
      {
        "name": "linear_velocity",
        "type": "Vector3"
      },
      {
        "name": "lock_rotation",
        "type": "bool"
      },
      {
        "name": "mass",
        "type": "float"
      },
      {
        "name": "max_contacts_reported",
        "type": "int"
      },
      {
        "name": "physics_material_override",
        "type": "PhysicsMaterial"
      },
      {
        "name": "sleeping",
        "type": "bool"
      }
    ]
  },
  "RootMotionView": {
    "methods": [],
    "name": "RootMotionView",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "animation_path",
        "type": "NodePath"
      },
      {
        "name": "cell_size",
        "type": "float"
      },
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "zero_y",
        "type": "bool"
      }
    ]
  },
  "SceneState": {
    "methods": [
      {
        "name": "get_connection_binds",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_connection_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_connection_flags",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_connection_method",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_connection_signal",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_connection_source",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_connection_target",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_connection_unbinds",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_node_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_node_groups",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_node_index",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_node_instance",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "PackedScene"
      },
      {
        "name": "get_node_instance_placeholder",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_node_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_node_owner_path",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_node_path",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "for_parent",
            "type": "bool"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_node_property_count",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_node_property_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "prop_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_node_property_value",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "prop_idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_node_type",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "is_node_instance_placeholder",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "SceneState",
    "parent": "RefCounted",
    "properties": []
  },
  "SceneTree": {
    "methods": [
      {
        "name": "call_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "call_group_flags",
        "parameters": [
          {
            "name": "flags",
            "type": "int"
          },
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "change_scene_to_file",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "change_scene_to_packed",
        "parameters": [
          {
            "name": "packed_scene",
            "type": "PackedScene"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_timer",
        "parameters": [
          {
            "name": "time_sec",
            "type": "float"
          },
          {
            "name": "process_always",
            "type": "bool"
          },
          {
            "name": "process_in_physics",
            "type": "bool"
          },
          {
            "name": "ignore_time_scale",
            "type": "bool"
          }
        ],
        "return_type": "SceneTreeTimer"
      },
      {
        "name": "create_tween",
        "parameters": [],
        "return_type": "Tween"
      },
      {
        "name": "get_first_node_in_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "Node"
      },
      {
        "name": "get_frame",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_multiplayer",
        "parameters": [
          {
            "name": "for_path",
            "type": "NodePath"
          }
        ],
        "return_type": "MultiplayerAPI"
      },
      {
        "name": "get_node_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_node_count_in_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_nodes_in_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "Node[]"
      },
      {
        "name": "get_processed_tweens",
        "parameters": [],
        "return_type": "Tween[]"
      },
      {
        "name": "has_group",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "notify_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "notification",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "notify_group_flags",
        "parameters": [
          {
            "name": "call_flags",
            "type": "int"
          },
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "notification",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "queue_delete",
        "parameters": [
          {
            "name": "obj",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "quit",
        "parameters": [
          {
            "name": "exit_code",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reload_current_scene",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_group",
        "parameters": [
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_group_flags",
        "parameters": [
          {
            "name": "call_flags",
            "type": "int"
          },
          {
            "name": "group",
            "type": "StringName"
          },
          {
            "name": "property",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_multiplayer",
        "parameters": [
          {
            "name": "multiplayer",
            "type": "MultiplayerAPI"
          },
          {
            "name": "root_path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unload_current_scene",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "SceneTree",
    "parent": "MainLoop",
    "properties": [
      {
        "name": "auto_accept_quit",
        "type": "bool"
      },
      {
        "name": "current_scene",
        "type": "Node"
      },
      {
        "name": "debug_collisions_hint",
        "type": "bool"
      },
      {
        "name": "debug_navigation_hint",
        "type": "bool"
      },
      {
        "name": "debug_paths_hint",
        "type": "bool"
      },
      {
        "name": "edited_scene_root",
        "type": "Node"
      },
      {
        "name": "multiplayer_poll",
        "type": "bool"
      },
      {
        "name": "paused",
        "type": "bool"
      },
      {
        "name": "physics_interpolation",
        "type": "bool"
      },
      {
        "name": "quit_on_go_back",
        "type": "bool"
      },
      {
        "name": "root",
        "type": "Window"
      }
    ]
  },
  "SceneTreeTimer": {
    "methods": [],
    "name": "SceneTreeTimer",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "time_left",
        "type": "float"
      }
    ]
  },
  "Script": {
    "methods": [
      {
        "name": "can_instantiate",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_base_script",
        "parameters": [],
        "return_type": "Script"
      },
      {
        "name": "get_global_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_instance_base_type",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_property_default_value",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_rpc_config",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "get_script_constant_map",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_script_method_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_script_property_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_script_signal_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "has_script_signal",
        "parameters": [
          {
            "name": "signal_name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_source_code",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "instance_has",
        "parameters": [
          {
            "name": "base_object",
            "type": "Object"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_abstract",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_tool",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "reload",
        "parameters": [
          {
            "name": "keep_state",
            "type": "bool"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "Script",
    "parent": "Resource",
    "properties": [
      {
        "name": "source_code",
        "type": "String"
      }
    ]
  },
  "ScriptCreateDialog": {
    "methods": [
      {
        "name": "config",
        "parameters": [
          {
            "name": "inherits",
            "type": "String"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "built_in_enabled",
            "type": "bool"
          },
          {
            "name": "load_enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ScriptCreateDialog",
    "parent": "ConfirmationDialog",
    "properties": [
      {
        "name": "dialog_hide_on_ok",
        "type": "bool"
      },
      {
        "name": "ok_button_text",
        "type": "String"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "ScriptEditor": {
    "methods": [
      {
        "name": "get_breakpoints",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_current_editor",
        "parameters": [],
        "return_type": "ScriptEditorBase"
      },
      {
        "name": "get_current_script",
        "parameters": [],
        "return_type": "Script"
      },
      {
        "name": "get_open_script_editors",
        "parameters": [],
        "return_type": "ScriptEditorBase[]"
      },
      {
        "name": "get_open_scripts",
        "parameters": [],
        "return_type": "Script[]"
      },
      {
        "name": "goto_help",
        "parameters": [
          {
            "name": "topic",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "goto_line",
        "parameters": [
          {
            "name": "line_number",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "open_script_create_dialog",
        "parameters": [
          {
            "name": "base_name",
            "type": "String"
          },
          {
            "name": "base_path",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "register_syntax_highlighter",
        "parameters": [
          {
            "name": "syntax_highlighter",
            "type": "EditorSyntaxHighlighter"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unregister_syntax_highlighter",
        "parameters": [
          {
            "name": "syntax_highlighter",
            "type": "EditorSyntaxHighlighter"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_docs_from_script",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ScriptEditor",
    "parent": "PanelContainer",
    "properties": []
  },
  "ScriptEditorBase": {
    "methods": [
      {
        "name": "add_syntax_highlighter",
        "parameters": [
          {
            "name": "highlighter",
            "type": "EditorSyntaxHighlighter"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_base_editor",
        "parameters": [],
        "return_type": "Control"
      }
    ],
    "name": "ScriptEditorBase",
    "parent": "VBoxContainer",
    "properties": []
  },
  "ScriptExtension": {
    "methods": [
      {
        "name": "_can_instantiate",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_editor_can_reload_from_file",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_get_base_script",
        "parameters": [],
        "return_type": "Script"
      },
      {
        "name": "_get_class_icon_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_constants",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_doc_class_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "_get_documentation",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_global_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "_get_instance_base_type",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "_get_language",
        "parameters": [],
        "return_type": "ScriptLanguage"
      },
      {
        "name": "_get_member_line",
        "parameters": [
          {
            "name": "member",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_members",
        "parameters": [],
        "return_type": "StringName[]"
      },
      {
        "name": "_get_method_info",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_property_default_value",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_rpc_config",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "_get_script_method_argument_count",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_script_method_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_script_property_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_script_signal_list",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_source_code",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_has_method",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_property_default_value",
        "parameters": [
          {
            "name": "property",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_script_signal",
        "parameters": [
          {
            "name": "signal",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_source_code",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_has_static_method",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_inherits_script",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_instance_create",
        "parameters": [
          {
            "name": "for_object",
            "type": "Object"
          }
        ],
        "return_type": "void*"
      },
      {
        "name": "_instance_has",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_abstract",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_placeholder_fallback_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_tool",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_valid",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_placeholder_erased",
        "parameters": [
          {
            "name": "placeholder",
            "type": "void*"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_placeholder_instance_create",
        "parameters": [
          {
            "name": "for_object",
            "type": "Object"
          }
        ],
        "return_type": "void*"
      },
      {
        "name": "_reload",
        "parameters": [
          {
            "name": "keep_state",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_set_source_code",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_update_exports",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "ScriptExtension",
    "parent": "Script",
    "properties": []
  },
  "ScriptLanguage": {
    "methods": [],
    "name": "ScriptLanguage",
    "parent": "Object",
    "properties": []
  },
  "ScriptLanguageExtension": {
    "methods": [
      {
        "name": "_add_global_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_add_named_global_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_auto_indent_code",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          },
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_can_inherit_from_file",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_can_make_function",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_complete_code",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "owner",
            "type": "Object"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_create_script",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "_debug_get_current_stack_info",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_debug_get_error",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_debug_get_globals",
        "parameters": [
          {
            "name": "max_subitems",
            "type": "int"
          },
          {
            "name": "max_depth",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_debug_get_stack_level_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_debug_get_stack_level_function",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_debug_get_stack_level_instance",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "void*"
      },
      {
        "name": "_debug_get_stack_level_line",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_debug_get_stack_level_locals",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          },
          {
            "name": "max_subitems",
            "type": "int"
          },
          {
            "name": "max_depth",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_debug_get_stack_level_members",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          },
          {
            "name": "max_subitems",
            "type": "int"
          },
          {
            "name": "max_depth",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_debug_get_stack_level_source",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_debug_parse_stack_level_expression",
        "parameters": [
          {
            "name": "level",
            "type": "int"
          },
          {
            "name": "expression",
            "type": "String"
          },
          {
            "name": "max_subitems",
            "type": "int"
          },
          {
            "name": "max_depth",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_find_function",
        "parameters": [
          {
            "name": "function",
            "type": "String"
          },
          {
            "name": "code",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_finish",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_frame",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_get_built_in_templates",
        "parameters": [
          {
            "name": "object",
            "type": "StringName"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_comment_delimiters",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_doc_comment_delimiters",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_extension",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_global_class_name",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_public_annotations",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_public_constants",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_public_functions",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "_get_recognized_extensions",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_reserved_words",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_string_delimiters",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_type",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_handles_global_class_type",
        "parameters": [
          {
            "name": "type",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_named_classes",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_init",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_is_control_flow_keyword",
        "parameters": [
          {
            "name": "keyword",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_using_templates",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_lookup_code",
        "parameters": [
          {
            "name": "code",
            "type": "String"
          },
          {
            "name": "symbol",
            "type": "String"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "owner",
            "type": "Object"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_make_function",
        "parameters": [
          {
            "name": "class_name",
            "type": "String"
          },
          {
            "name": "function_name",
            "type": "String"
          },
          {
            "name": "function_args",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_make_template",
        "parameters": [
          {
            "name": "template",
            "type": "String"
          },
          {
            "name": "class_name",
            "type": "String"
          },
          {
            "name": "base_class_name",
            "type": "String"
          }
        ],
        "return_type": "Script"
      },
      {
        "name": "_open_in_external_editor",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_overrides_external_editor",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_preferred_file_name_casing",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_profiling_get_accumulated_data",
        "parameters": [
          {
            "name": "info_array",
            "type": "ScriptLanguageExtensionProfilingInfo*"
          },
          {
            "name": "info_max",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_profiling_get_frame_data",
        "parameters": [
          {
            "name": "info_array",
            "type": "ScriptLanguageExtensionProfilingInfo*"
          },
          {
            "name": "info_max",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_profiling_set_save_native_calls",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_profiling_start",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_profiling_stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_reload_all_scripts",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_reload_scripts",
        "parameters": [
          {
            "name": "scripts",
            "type": "Array"
          },
          {
            "name": "soft_reload",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_reload_tool_script",
        "parameters": [
          {
            "name": "script",
            "type": "Script"
          },
          {
            "name": "soft_reload",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_remove_named_global_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_supports_builtin_mode",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_supports_documentation",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_thread_enter",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_thread_exit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_validate",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          },
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "validate_functions",
            "type": "bool"
          },
          {
            "name": "validate_errors",
            "type": "bool"
          },
          {
            "name": "validate_warnings",
            "type": "bool"
          },
          {
            "name": "validate_safe_lines",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_validate_path",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "ScriptLanguageExtension",
    "parent": "ScriptLanguage",
    "properties": []
  },
  "ScrollBar": {
    "methods": [],
    "name": "ScrollBar",
    "parent": "Range",
    "properties": [
      {
        "name": "custom_step",
        "type": "float"
      },
      {
        "name": "step",
        "type": "float"
      }
    ]
  },
  "ScrollContainer": {
    "methods": [
      {
        "name": "ensure_control_visible",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_h_scroll_bar",
        "parameters": [],
        "return_type": "HScrollBar"
      },
      {
        "name": "get_v_scroll_bar",
        "parameters": [],
        "return_type": "VScrollBar"
      }
    ],
    "name": "ScrollContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "draw_focus_border",
        "type": "bool"
      },
      {
        "name": "follow_focus",
        "type": "bool"
      },
      {
        "name": "horizontal_scroll_mode",
        "type": "int"
      },
      {
        "name": "scroll_deadzone",
        "type": "int"
      },
      {
        "name": "scroll_horizontal",
        "type": "int"
      },
      {
        "name": "scroll_horizontal_custom_step",
        "type": "float"
      },
      {
        "name": "scroll_vertical",
        "type": "int"
      },
      {
        "name": "scroll_vertical_custom_step",
        "type": "float"
      },
      {
        "name": "vertical_scroll_mode",
        "type": "int"
      }
    ]
  },
  "SegmentShape2D": {
    "methods": [],
    "name": "SegmentShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "a",
        "type": "Vector2"
      },
      {
        "name": "b",
        "type": "Vector2"
      }
    ]
  },
  "Semaphore": {
    "methods": [
      {
        "name": "post",
        "parameters": [
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "try_wait",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "wait",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Semaphore",
    "parent": "RefCounted",
    "properties": []
  },
  "SeparationRayShape2D": {
    "methods": [],
    "name": "SeparationRayShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "length",
        "type": "float"
      },
      {
        "name": "slide_on_slope",
        "type": "bool"
      }
    ]
  },
  "SeparationRayShape3D": {
    "methods": [],
    "name": "SeparationRayShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "length",
        "type": "float"
      },
      {
        "name": "slide_on_slope",
        "type": "bool"
      }
    ]
  },
  "Separator": {
    "methods": [],
    "name": "Separator",
    "parent": "Control",
    "properties": []
  },
  "Shader": {
    "methods": [
      {
        "name": "get_default_texture_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Texture"
      },
      {
        "name": "get_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_shader_uniform_list",
        "parameters": [
          {
            "name": "get_groups",
            "type": "bool"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "inspect_native_shader_code",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_default_texture_parameter",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "Texture"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Shader",
    "parent": "Resource",
    "properties": [
      {
        "name": "code",
        "type": "String"
      }
    ]
  },
  "ShaderGlobalsOverride": {
    "methods": [],
    "name": "ShaderGlobalsOverride",
    "parent": "Node",
    "properties": []
  },
  "ShaderInclude": {
    "methods": [],
    "name": "ShaderInclude",
    "parent": "Resource",
    "properties": [
      {
        "name": "code",
        "type": "String"
      }
    ]
  },
  "ShaderIncludeDB": {
    "methods": [
      {
        "name": "get_built_in_include_file",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_built_in_include_file",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "list_built_in_include_files",
        "parameters": [],
        "return_type": "PackedStringArray"
      }
    ],
    "name": "ShaderIncludeDB",
    "parent": "Object",
    "properties": []
  },
  "ShaderMaterial": {
    "methods": [
      {
        "name": "get_shader_parameter",
        "parameters": [
          {
            "name": "param",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "set_shader_parameter",
        "parameters": [
          {
            "name": "param",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ShaderMaterial",
    "parent": "Material",
    "properties": [
      {
        "name": "shader",
        "type": "Shader"
      }
    ]
  },
  "Shape2D": {
    "methods": [
      {
        "name": "collide",
        "parameters": [
          {
            "name": "local_xform",
            "type": "Transform2D"
          },
          {
            "name": "with_shape",
            "type": "Shape2D"
          },
          {
            "name": "shape_xform",
            "type": "Transform2D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "collide_and_get_contacts",
        "parameters": [
          {
            "name": "local_xform",
            "type": "Transform2D"
          },
          {
            "name": "with_shape",
            "type": "Shape2D"
          },
          {
            "name": "shape_xform",
            "type": "Transform2D"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "collide_with_motion",
        "parameters": [
          {
            "name": "local_xform",
            "type": "Transform2D"
          },
          {
            "name": "local_motion",
            "type": "Vector2"
          },
          {
            "name": "with_shape",
            "type": "Shape2D"
          },
          {
            "name": "shape_xform",
            "type": "Transform2D"
          },
          {
            "name": "shape_motion",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "collide_with_motion_and_get_contacts",
        "parameters": [
          {
            "name": "local_xform",
            "type": "Transform2D"
          },
          {
            "name": "local_motion",
            "type": "Vector2"
          },
          {
            "name": "with_shape",
            "type": "Shape2D"
          },
          {
            "name": "shape_xform",
            "type": "Transform2D"
          },
          {
            "name": "shape_motion",
            "type": "Vector2"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "draw",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_rect",
        "parameters": [],
        "return_type": "Rect2"
      }
    ],
    "name": "Shape2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "custom_solver_bias",
        "type": "float"
      }
    ]
  },
  "Shape3D": {
    "methods": [
      {
        "name": "get_debug_mesh",
        "parameters": [],
        "return_type": "ArrayMesh"
      }
    ],
    "name": "Shape3D",
    "parent": "Resource",
    "properties": [
      {
        "name": "custom_solver_bias",
        "type": "float"
      },
      {
        "name": "margin",
        "type": "float"
      }
    ]
  },
  "ShapeCast2D": {
    "methods": [
      {
        "name": "add_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_exceptions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_shapecast_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_closest_collision_safe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_closest_collision_unsafe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_collider",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_collider_rid",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_normal",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_collision_point",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "is_colliding",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ShapeCast2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "collision_result",
        "type": "Array"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "exclude_parent",
        "type": "bool"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "max_results",
        "type": "int"
      },
      {
        "name": "shape",
        "type": "Shape2D"
      },
      {
        "name": "target_position",
        "type": "Vector2"
      }
    ]
  },
  "ShapeCast3D": {
    "methods": [
      {
        "name": "add_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_exceptions",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_shapecast_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_closest_collision_safe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_closest_collision_unsafe_fraction",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_collider",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Object"
      },
      {
        "name": "get_collider_rid",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_collider_shape",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_normal",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_collision_point",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "is_colliding",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_exception",
        "parameters": [
          {
            "name": "node",
            "type": "CollisionObject3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_exception_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "resource_changed",
        "parameters": [
          {
            "name": "resource",
            "type": "Resource"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "ShapeCast3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "collide_with_areas",
        "type": "bool"
      },
      {
        "name": "collide_with_bodies",
        "type": "bool"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "collision_result",
        "type": "Array"
      },
      {
        "name": "debug_shape_custom_color",
        "type": "Color"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "exclude_parent",
        "type": "bool"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "max_results",
        "type": "int"
      },
      {
        "name": "shape",
        "type": "Shape3D"
      },
      {
        "name": "target_position",
        "type": "Vector3"
      }
    ]
  },
  "Shortcut": {
    "methods": [
      {
        "name": "get_as_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has_valid_event",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "matches_event",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "Shortcut",
    "parent": "Resource",
    "properties": [
      {
        "name": "events",
        "type": "Array"
      }
    ]
  },
  "Signal": {
    "methods": [
      {
        "name": "connect",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "disconnect",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "emit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_connections",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_object",
        "parameters": [],
        "return_type": "Object"
      },
      {
        "name": "get_object_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_connections",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_connected",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_null",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "Signal",
    "parent": null,
    "properties": []
  },
  "Skeleton2D": {
    "methods": [
      {
        "name": "execute_modifications",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "execution_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bone",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Bone2D"
      },
      {
        "name": "get_bone_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_bone_local_pose_override",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "get_modification_stack",
        "parameters": [],
        "return_type": "SkeletonModificationStack2D"
      },
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "set_bone_local_pose_override",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "override_pose",
            "type": "Transform2D"
          },
          {
            "name": "strength",
            "type": "float"
          },
          {
            "name": "persistent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_modification_stack",
        "parameters": [
          {
            "name": "modification_stack",
            "type": "SkeletonModificationStack2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Skeleton2D",
    "parent": "Node2D",
    "properties": []
  },
  "Skeleton3D": {
    "methods": [
      {
        "name": "add_bone",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "clear_bones",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_bones_global_pose_override",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_skin_from_rest_transforms",
        "parameters": [],
        "return_type": "Skin"
      },
      {
        "name": "find_bone",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "force_update_all_bone_transforms",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_update_bone_child_transform",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bone_children",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_bone_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_bone_global_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_bone_global_pose_no_override",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_bone_global_pose_override",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_bone_global_rest",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_bone_meta",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "key",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_bone_meta_list",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName[]"
      },
      {
        "name": "get_bone_name",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_bone_parent",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bone_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_bone_pose_position",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_bone_pose_rotation",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Quaternion"
      },
      {
        "name": "get_bone_pose_scale",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_bone_rest",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_concatenated_bone_names",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_parentless_bones",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_version",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_bone_meta",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "key",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_bone_enabled",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "localize_rests",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "physical_bones_add_collision_exception",
        "parameters": [
          {
            "name": "exception",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_remove_collision_exception",
        "parameters": [
          {
            "name": "exception",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_start_simulation",
        "parameters": [
          {
            "name": "bones",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "physical_bones_stop_simulation",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "register_skin",
        "parameters": [
          {
            "name": "skin",
            "type": "Skin"
          }
        ],
        "return_type": "SkinReference"
      },
      {
        "name": "reset_bone_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "reset_bone_poses",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_bone_enabled",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_global_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_global_pose_override",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          },
          {
            "name": "amount",
            "type": "float"
          },
          {
            "name": "persistent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_meta",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "key",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_name",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_parent",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "parent_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_pose_position",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_pose_rotation",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "rotation",
            "type": "Quaternion"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_pose_scale",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_rest",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "rest",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "unparent_bone_and_rest",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Skeleton3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "animate_physical_bones",
        "type": "bool"
      },
      {
        "name": "modifier_callback_mode_process",
        "type": "int"
      },
      {
        "name": "motion_scale",
        "type": "float"
      },
      {
        "name": "show_rest_only",
        "type": "bool"
      }
    ]
  },
  "SkeletonIK3D": {
    "methods": [
      {
        "name": "get_parent_skeleton",
        "parameters": [],
        "return_type": "Skeleton3D"
      },
      {
        "name": "is_running",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "one_time",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "SkeletonIK3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "interpolation",
        "type": "float"
      },
      {
        "name": "magnet",
        "type": "Vector3"
      },
      {
        "name": "max_iterations",
        "type": "int"
      },
      {
        "name": "min_distance",
        "type": "float"
      },
      {
        "name": "override_tip_basis",
        "type": "bool"
      },
      {
        "name": "root_bone",
        "type": "StringName"
      },
      {
        "name": "target",
        "type": "Transform3D"
      },
      {
        "name": "target_node",
        "type": "NodePath"
      },
      {
        "name": "tip_bone",
        "type": "StringName"
      },
      {
        "name": "use_magnet",
        "type": "bool"
      }
    ]
  },
  "SkeletonModification2D": {
    "methods": [
      {
        "name": "_draw_editor_gizmo",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_execute",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_setup_modification",
        "parameters": [
          {
            "name": "modification_stack",
            "type": "SkeletonModificationStack2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clamp_angle",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          },
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          },
          {
            "name": "invert",
            "type": "bool"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_editor_draw_gizmo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_is_setup",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_modification_stack",
        "parameters": [],
        "return_type": "SkeletonModificationStack2D"
      },
      {
        "name": "set_editor_draw_gizmo",
        "parameters": [
          {
            "name": "draw_gizmo",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_is_setup",
        "parameters": [
          {
            "name": "is_setup",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "execution_mode",
        "type": "int"
      }
    ]
  },
  "SkeletonModification2DCCDIK": {
    "methods": [
      {
        "name": "get_ccdik_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_ccdik_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_ccdik_joint_constraint_angle_invert",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_ccdik_joint_constraint_angle_max",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_ccdik_joint_constraint_angle_min",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_ccdik_joint_enable_constraint",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_ccdik_joint_rotate_from_joint",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_ccdik_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone2d_nodepath",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_constraint_angle_invert",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "invert",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_constraint_angle_max",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "angle_max",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_constraint_angle_min",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "angle_min",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_enable_constraint",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "enable_constraint",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ccdik_joint_rotate_from_joint",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "rotate_from_joint",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DCCDIK",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "ccdik_data_chain_length",
        "type": "int"
      },
      {
        "name": "target_nodepath",
        "type": "NodePath"
      },
      {
        "name": "tip_nodepath",
        "type": "NodePath"
      }
    ]
  },
  "SkeletonModification2DFABRIK": {
    "methods": [
      {
        "name": "get_fabrik_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_fabrik_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_fabrik_joint_magnet_position",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_fabrik_joint_use_target_rotation",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_fabrik_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone2d_nodepath",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_fabrik_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_fabrik_joint_magnet_position",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "magnet_position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_fabrik_joint_use_target_rotation",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "use_target_rotation",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DFABRIK",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "fabrik_data_chain_length",
        "type": "int"
      },
      {
        "name": "target_nodepath",
        "type": "NodePath"
      }
    ]
  },
  "SkeletonModification2DJiggle": {
    "methods": [
      {
        "name": "get_collision_mask",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_jiggle_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_jiggle_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_jiggle_joint_damping",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_jiggle_joint_gravity",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_jiggle_joint_mass",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_jiggle_joint_override",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_jiggle_joint_stiffness",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_jiggle_joint_use_gravity",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_use_colliders",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_collision_mask",
        "parameters": [
          {
            "name": "collision_mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_bone2d_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone2d_node",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_bone_index",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_damping",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "damping",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_gravity",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "gravity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_mass",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "mass",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_override",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "override",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_stiffness",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "stiffness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_jiggle_joint_use_gravity",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "use_gravity",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_use_colliders",
        "parameters": [
          {
            "name": "use_colliders",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DJiggle",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "damping",
        "type": "float"
      },
      {
        "name": "gravity",
        "type": "Vector2"
      },
      {
        "name": "jiggle_data_chain_length",
        "type": "int"
      },
      {
        "name": "mass",
        "type": "float"
      },
      {
        "name": "stiffness",
        "type": "float"
      },
      {
        "name": "target_nodepath",
        "type": "NodePath"
      },
      {
        "name": "use_gravity",
        "type": "bool"
      }
    ]
  },
  "SkeletonModification2DLookAt": {
    "methods": [
      {
        "name": "get_additional_rotation",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_constraint_angle_invert",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_constraint_angle_max",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_constraint_angle_min",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_enable_constraint",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_additional_rotation",
        "parameters": [
          {
            "name": "rotation",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constraint_angle_invert",
        "parameters": [
          {
            "name": "invert",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constraint_angle_max",
        "parameters": [
          {
            "name": "angle_max",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constraint_angle_min",
        "parameters": [
          {
            "name": "angle_min",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_enable_constraint",
        "parameters": [
          {
            "name": "enable_constraint",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DLookAt",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "bone2d_node",
        "type": "NodePath"
      },
      {
        "name": "bone_index",
        "type": "int"
      },
      {
        "name": "target_nodepath",
        "type": "NodePath"
      }
    ]
  },
  "SkeletonModification2DPhysicalBones": {
    "methods": [
      {
        "name": "fetch_physical_bones",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_physical_bone_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "set_physical_bone_node",
        "parameters": [
          {
            "name": "joint_idx",
            "type": "int"
          },
          {
            "name": "physicalbone2d_node",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "start_simulation",
        "parameters": [
          {
            "name": "bones",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop_simulation",
        "parameters": [
          {
            "name": "bones",
            "type": "StringName[]"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DPhysicalBones",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "physical_bone_chain_length",
        "type": "int"
      }
    ]
  },
  "SkeletonModification2DStackHolder": {
    "methods": [
      {
        "name": "get_held_modification_stack",
        "parameters": [],
        "return_type": "SkeletonModificationStack2D"
      },
      {
        "name": "set_held_modification_stack",
        "parameters": [
          {
            "name": "held_modification_stack",
            "type": "SkeletonModificationStack2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DStackHolder",
    "parent": "SkeletonModification2D",
    "properties": []
  },
  "SkeletonModification2DTwoBoneIK": {
    "methods": [
      {
        "name": "get_joint_one_bone2d_node",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_joint_one_bone_idx",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_joint_two_bone2d_node",
        "parameters": [],
        "return_type": "NodePath"
      },
      {
        "name": "get_joint_two_bone_idx",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_joint_one_bone2d_node",
        "parameters": [
          {
            "name": "bone2d_node",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_one_bone_idx",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_two_bone2d_node",
        "parameters": [
          {
            "name": "bone2d_node",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_two_bone_idx",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModification2DTwoBoneIK",
    "parent": "SkeletonModification2D",
    "properties": [
      {
        "name": "flip_bend_direction",
        "type": "bool"
      },
      {
        "name": "target_maximum_distance",
        "type": "float"
      },
      {
        "name": "target_minimum_distance",
        "type": "float"
      },
      {
        "name": "target_nodepath",
        "type": "NodePath"
      }
    ]
  },
  "SkeletonModificationStack2D": {
    "methods": [
      {
        "name": "add_modification",
        "parameters": [
          {
            "name": "modification",
            "type": "SkeletonModification2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "delete_modification",
        "parameters": [
          {
            "name": "mod_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "enable_all_modifications",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "execute",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          },
          {
            "name": "execution_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_is_setup",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_modification",
        "parameters": [
          {
            "name": "mod_idx",
            "type": "int"
          }
        ],
        "return_type": "SkeletonModification2D"
      },
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "Skeleton2D"
      },
      {
        "name": "set_modification",
        "parameters": [
          {
            "name": "mod_idx",
            "type": "int"
          },
          {
            "name": "modification",
            "type": "SkeletonModification2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "setup",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "SkeletonModificationStack2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "modification_count",
        "type": "int"
      },
      {
        "name": "strength",
        "type": "float"
      }
    ]
  },
  "SkeletonModifier3D": {
    "methods": [
      {
        "name": "_process_modification",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "Skeleton3D"
      }
    ],
    "name": "SkeletonModifier3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "active",
        "type": "bool"
      },
      {
        "name": "influence",
        "type": "float"
      }
    ]
  },
  "SkeletonProfile": {
    "methods": [
      {
        "name": "find_bone",
        "parameters": [
          {
            "name": "bone_name",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bone_name",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_bone_parent",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_bone_tail",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_group",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_group_name",
        "parameters": [
          {
            "name": "group_idx",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_handle_offset",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_reference_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_tail_direction",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_texture",
        "parameters": [
          {
            "name": "group_idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "is_required",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_bone_name",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "bone_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_parent",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "bone_parent",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bone_tail",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "bone_tail",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_group",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "group",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_group_name",
        "parameters": [
          {
            "name": "group_idx",
            "type": "int"
          },
          {
            "name": "group_name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_handle_offset",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "handle_offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_reference_pose",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "bone_name",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_required",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "required",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tail_direction",
        "parameters": [
          {
            "name": "bone_idx",
            "type": "int"
          },
          {
            "name": "tail_direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture",
        "parameters": [
          {
            "name": "group_idx",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SkeletonProfile",
    "parent": "Resource",
    "properties": [
      {
        "name": "bone_size",
        "type": "int"
      },
      {
        "name": "group_size",
        "type": "int"
      },
      {
        "name": "root_bone",
        "type": "StringName"
      },
      {
        "name": "scale_base_bone",
        "type": "StringName"
      }
    ]
  },
  "SkeletonProfileHumanoid": {
    "methods": [],
    "name": "SkeletonProfileHumanoid",
    "parent": "SkeletonProfile",
    "properties": [
      {
        "name": "bone_size",
        "type": "int"
      },
      {
        "name": "group_size",
        "type": "int"
      },
      {
        "name": "root_bone",
        "type": "StringName"
      },
      {
        "name": "scale_base_bone",
        "type": "StringName"
      }
    ]
  },
  "Skin": {
    "methods": [
      {
        "name": "add_bind",
        "parameters": [
          {
            "name": "bone",
            "type": "int"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_named_bind",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_binds",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_bind_bone",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_bind_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_bind_name",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_bind_pose",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "set_bind_bone",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bind_count",
        "parameters": [
          {
            "name": "bind_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bind_name",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_bind_pose",
        "parameters": [
          {
            "name": "bind_index",
            "type": "int"
          },
          {
            "name": "pose",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Skin",
    "parent": "Resource",
    "properties": []
  },
  "SkinReference": {
    "methods": [
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_skin",
        "parameters": [],
        "return_type": "Skin"
      }
    ],
    "name": "SkinReference",
    "parent": "RefCounted",
    "properties": []
  },
  "Sky": {
    "methods": [],
    "name": "Sky",
    "parent": "Resource",
    "properties": [
      {
        "name": "process_mode",
        "type": "int"
      },
      {
        "name": "radiance_size",
        "type": "int"
      },
      {
        "name": "sky_material",
        "type": "Material"
      }
    ]
  },
  "Slider": {
    "methods": [],
    "name": "Slider",
    "parent": "Range",
    "properties": [
      {
        "name": "editable",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "scrollable",
        "type": "bool"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "tick_count",
        "type": "int"
      },
      {
        "name": "ticks_on_borders",
        "type": "bool"
      }
    ]
  },
  "SliderJoint3D": {
    "methods": [
      {
        "name": "get_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_param",
        "parameters": [
          {
            "name": "param",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SliderJoint3D",
    "parent": "Joint3D",
    "properties": [
      {
        "name": "angular_limit/damping",
        "type": "float"
      },
      {
        "name": "angular_limit/lower_angle",
        "type": "float"
      },
      {
        "name": "angular_limit/restitution",
        "type": "float"
      },
      {
        "name": "angular_limit/softness",
        "type": "float"
      },
      {
        "name": "angular_limit/upper_angle",
        "type": "float"
      },
      {
        "name": "angular_motion/damping",
        "type": "float"
      },
      {
        "name": "angular_motion/restitution",
        "type": "float"
      },
      {
        "name": "angular_motion/softness",
        "type": "float"
      },
      {
        "name": "angular_ortho/damping",
        "type": "float"
      },
      {
        "name": "angular_ortho/restitution",
        "type": "float"
      },
      {
        "name": "angular_ortho/softness",
        "type": "float"
      },
      {
        "name": "linear_limit/damping",
        "type": "float"
      },
      {
        "name": "linear_limit/lower_distance",
        "type": "float"
      },
      {
        "name": "linear_limit/restitution",
        "type": "float"
      },
      {
        "name": "linear_limit/softness",
        "type": "float"
      },
      {
        "name": "linear_limit/upper_distance",
        "type": "float"
      },
      {
        "name": "linear_motion/damping",
        "type": "float"
      },
      {
        "name": "linear_motion/restitution",
        "type": "float"
      },
      {
        "name": "linear_motion/softness",
        "type": "float"
      },
      {
        "name": "linear_ortho/damping",
        "type": "float"
      },
      {
        "name": "linear_ortho/restitution",
        "type": "float"
      },
      {
        "name": "linear_ortho/softness",
        "type": "float"
      }
    ]
  },
  "SoftBody3D": {
    "methods": [
      {
        "name": "add_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_collision_exceptions",
        "parameters": [],
        "return_type": "PhysicsBody3D[]"
      },
      {
        "name": "get_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_physics_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_point_transform",
        "parameters": [
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "is_point_pinned",
        "parameters": [
          {
            "name": "point_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_collision_exception_with",
        "parameters": [
          {
            "name": "body",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_layer_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_point_pinned",
        "parameters": [
          {
            "name": "point_index",
            "type": "int"
          },
          {
            "name": "pinned",
            "type": "bool"
          },
          {
            "name": "attachment_path",
            "type": "NodePath"
          },
          {
            "name": "insert_at",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SoftBody3D",
    "parent": "MeshInstance3D",
    "properties": [
      {
        "name": "collision_layer",
        "type": "int"
      },
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "damping_coefficient",
        "type": "float"
      },
      {
        "name": "disable_mode",
        "type": "int"
      },
      {
        "name": "drag_coefficient",
        "type": "float"
      },
      {
        "name": "linear_stiffness",
        "type": "float"
      },
      {
        "name": "parent_collision_ignore",
        "type": "NodePath"
      },
      {
        "name": "pressure_coefficient",
        "type": "float"
      },
      {
        "name": "ray_pickable",
        "type": "bool"
      },
      {
        "name": "simulation_precision",
        "type": "int"
      },
      {
        "name": "total_mass",
        "type": "float"
      }
    ]
  },
  "SphereMesh": {
    "methods": [],
    "name": "SphereMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "is_hemisphere",
        "type": "bool"
      },
      {
        "name": "radial_segments",
        "type": "int"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "rings",
        "type": "int"
      }
    ]
  },
  "SphereOccluder3D": {
    "methods": [],
    "name": "SphereOccluder3D",
    "parent": "Occluder3D",
    "properties": [
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "SphereShape3D": {
    "methods": [],
    "name": "SphereShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "SpinBox": {
    "methods": [
      {
        "name": "apply",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_line_edit",
        "parameters": [],
        "return_type": "LineEdit"
      }
    ],
    "name": "SpinBox",
    "parent": "Range",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "custom_arrow_step",
        "type": "float"
      },
      {
        "name": "editable",
        "type": "bool"
      },
      {
        "name": "prefix",
        "type": "String"
      },
      {
        "name": "select_all_on_focus",
        "type": "bool"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "suffix",
        "type": "String"
      },
      {
        "name": "update_on_text_changed",
        "type": "bool"
      }
    ]
  },
  "SplitContainer": {
    "methods": [
      {
        "name": "clamp_split_offset",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_drag_area_control",
        "parameters": [],
        "return_type": "Control"
      }
    ],
    "name": "SplitContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "collapsed",
        "type": "bool"
      },
      {
        "name": "drag_area_highlight_in_editor",
        "type": "bool"
      },
      {
        "name": "drag_area_margin_begin",
        "type": "int"
      },
      {
        "name": "drag_area_margin_end",
        "type": "int"
      },
      {
        "name": "drag_area_offset",
        "type": "int"
      },
      {
        "name": "dragger_visibility",
        "type": "int"
      },
      {
        "name": "dragging_enabled",
        "type": "bool"
      },
      {
        "name": "split_offset",
        "type": "int"
      },
      {
        "name": "vertical",
        "type": "bool"
      }
    ]
  },
  "SpotLight3D": {
    "methods": [],
    "name": "SpotLight3D",
    "parent": "Light3D",
    "properties": [
      {
        "name": "light_specular",
        "type": "float"
      },
      {
        "name": "shadow_bias",
        "type": "float"
      },
      {
        "name": "shadow_normal_bias",
        "type": "float"
      },
      {
        "name": "spot_angle",
        "type": "float"
      },
      {
        "name": "spot_angle_attenuation",
        "type": "float"
      },
      {
        "name": "spot_attenuation",
        "type": "float"
      },
      {
        "name": "spot_range",
        "type": "float"
      }
    ]
  },
  "SpringArm3D": {
    "methods": [
      {
        "name": "add_excluded_object",
        "parameters": [
          {
            "name": "RID",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_excluded_objects",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_hit_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "remove_excluded_object",
        "parameters": [
          {
            "name": "RID",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "SpringArm3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "collision_mask",
        "type": "int"
      },
      {
        "name": "margin",
        "type": "float"
      },
      {
        "name": "shape",
        "type": "Shape3D"
      },
      {
        "name": "spring_length",
        "type": "float"
      }
    ]
  },
  "SpringBoneCollision3D": {
    "methods": [
      {
        "name": "get_skeleton",
        "parameters": [],
        "return_type": "Skeleton3D"
      }
    ],
    "name": "SpringBoneCollision3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "bone",
        "type": "int"
      },
      {
        "name": "bone_name",
        "type": "String"
      },
      {
        "name": "position_offset",
        "type": "Vector3"
      },
      {
        "name": "rotation_offset",
        "type": "Quaternion"
      }
    ]
  },
  "SpringBoneCollisionCapsule3D": {
    "methods": [],
    "name": "SpringBoneCollisionCapsule3D",
    "parent": "SpringBoneCollision3D",
    "properties": [
      {
        "name": "height",
        "type": "float"
      },
      {
        "name": "inside",
        "type": "bool"
      },
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "SpringBoneCollisionPlane3D": {
    "methods": [],
    "name": "SpringBoneCollisionPlane3D",
    "parent": "SpringBoneCollision3D",
    "properties": []
  },
  "SpringBoneCollisionSphere3D": {
    "methods": [],
    "name": "SpringBoneCollisionSphere3D",
    "parent": "SpringBoneCollision3D",
    "properties": [
      {
        "name": "inside",
        "type": "bool"
      },
      {
        "name": "radius",
        "type": "float"
      }
    ]
  },
  "SpringBoneSimulator3D": {
    "methods": [
      {
        "name": "are_all_child_collisions_enabled",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear_collisions",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_exclude_collisions",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_settings",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_center_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_center_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_center_from",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_center_node",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_collision_count",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_collision_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "collision",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_drag",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_drag_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "get_end_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_end_bone_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_end_bone_length",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_end_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_exclude_collision_count",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_exclude_collision_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "collision",
            "type": "int"
          }
        ],
        "return_type": "NodePath"
      },
      {
        "name": "get_gravity",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_gravity_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "get_gravity_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_joint_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_joint_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_joint_count",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_joint_drag",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_joint_gravity",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_joint_gravity_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_joint_radius",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_joint_rotation_axis",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_joint_stiffness",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_radius",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_radius_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "get_root_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_root_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_rotation_axis",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_stiffness",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_stiffness_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Curve"
      },
      {
        "name": "is_config_individual",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_end_bone_extended",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "reset",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_center_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_center_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_center_from",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "center_from",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_center_node",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "node_path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_count",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "collision",
            "type": "int"
          },
          {
            "name": "node_path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_drag",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "drag",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_drag_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_enable_all_child_collisions",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_end_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_end_bone_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone_direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_end_bone_length",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_end_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_exclude_collision_count",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_exclude_collision_path",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "collision",
            "type": "int"
          },
          {
            "name": "node_path",
            "type": "NodePath"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_extend_end_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gravity",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "gravity",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gravity_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gravity_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "gravity_direction",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_individual_config",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_drag",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "drag",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_gravity",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "gravity",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_gravity_direction",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "gravity_direction",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_radius",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_rotation_axis",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_stiffness",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "stiffness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_radius",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_radius_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_root_bone",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_root_bone_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "bone_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_rotation_axis",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "axis",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stiffness",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "stiffness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stiffness_damping_curve",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "curve",
            "type": "Curve"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SpringBoneSimulator3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "setting_count",
        "type": "int"
      }
    ]
  },
  "Sprite2D": {
    "methods": [
      {
        "name": "get_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "is_pixel_opaque",
        "parameters": [
          {
            "name": "pos",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "Sprite2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "centered",
        "type": "bool"
      },
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "frame",
        "type": "int"
      },
      {
        "name": "frame_coords",
        "type": "Vector2i"
      },
      {
        "name": "hframes",
        "type": "int"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "region_enabled",
        "type": "bool"
      },
      {
        "name": "region_filter_clip_enabled",
        "type": "bool"
      },
      {
        "name": "region_rect",
        "type": "Rect2"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "vframes",
        "type": "int"
      }
    ]
  },
  "Sprite3D": {
    "methods": [],
    "name": "Sprite3D",
    "parent": "SpriteBase3D",
    "properties": [
      {
        "name": "frame",
        "type": "int"
      },
      {
        "name": "frame_coords",
        "type": "Vector2i"
      },
      {
        "name": "hframes",
        "type": "int"
      },
      {
        "name": "region_enabled",
        "type": "bool"
      },
      {
        "name": "region_rect",
        "type": "Rect2"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "vframes",
        "type": "int"
      }
    ]
  },
  "SpriteBase3D": {
    "methods": [
      {
        "name": "generate_triangle_mesh",
        "parameters": [],
        "return_type": "TriangleMesh"
      },
      {
        "name": "get_draw_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_item_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "set_draw_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SpriteBase3D",
    "parent": "GeometryInstance3D",
    "properties": [
      {
        "name": "alpha_antialiasing_edge",
        "type": "float"
      },
      {
        "name": "alpha_antialiasing_mode",
        "type": "int"
      },
      {
        "name": "alpha_cut",
        "type": "int"
      },
      {
        "name": "alpha_hash_scale",
        "type": "float"
      },
      {
        "name": "alpha_scissor_threshold",
        "type": "float"
      },
      {
        "name": "axis",
        "type": "int"
      },
      {
        "name": "billboard",
        "type": "int"
      },
      {
        "name": "centered",
        "type": "bool"
      },
      {
        "name": "double_sided",
        "type": "bool"
      },
      {
        "name": "fixed_size",
        "type": "bool"
      },
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "modulate",
        "type": "Color"
      },
      {
        "name": "no_depth_test",
        "type": "bool"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "pixel_size",
        "type": "float"
      },
      {
        "name": "render_priority",
        "type": "int"
      },
      {
        "name": "shaded",
        "type": "bool"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "transparent",
        "type": "bool"
      }
    ]
  },
  "SpriteFrames": {
    "methods": [
      {
        "name": "add_animation",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_frame",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "duration",
            "type": "float"
          },
          {
            "name": "at_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate_animation",
        "parameters": [
          {
            "name": "anim_from",
            "type": "StringName"
          },
          {
            "name": "anim_to",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_animation_loop",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_animation_names",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_animation_speed",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_frame_count",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_frame_duration",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_frame_texture",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "has_animation",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_animation",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_frame",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_animation",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "newname",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_animation_loop",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "loop",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_animation_speed",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "fps",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_frame",
        "parameters": [
          {
            "name": "anim",
            "type": "StringName"
          },
          {
            "name": "idx",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SpriteFrames",
    "parent": "Resource",
    "properties": []
  },
  "StandardMaterial3D": {
    "methods": [],
    "name": "StandardMaterial3D",
    "parent": "BaseMaterial3D",
    "properties": []
  },
  "StaticBody2D": {
    "methods": [],
    "name": "StaticBody2D",
    "parent": "PhysicsBody2D",
    "properties": [
      {
        "name": "constant_angular_velocity",
        "type": "float"
      },
      {
        "name": "constant_linear_velocity",
        "type": "Vector2"
      },
      {
        "name": "physics_material_override",
        "type": "PhysicsMaterial"
      }
    ]
  },
  "StaticBody3D": {
    "methods": [],
    "name": "StaticBody3D",
    "parent": "PhysicsBody3D",
    "properties": [
      {
        "name": "constant_angular_velocity",
        "type": "Vector3"
      },
      {
        "name": "constant_linear_velocity",
        "type": "Vector3"
      },
      {
        "name": "physics_material_override",
        "type": "PhysicsMaterial"
      }
    ]
  },
  "StatusIndicator": {
    "methods": [
      {
        "name": "get_rect",
        "parameters": [],
        "return_type": "Rect2"
      }
    ],
    "name": "StatusIndicator",
    "parent": "Node",
    "properties": [
      {
        "name": "icon",
        "type": "Texture2D"
      },
      {
        "name": "menu",
        "type": "NodePath"
      },
      {
        "name": "tooltip",
        "type": "String"
      },
      {
        "name": "visible",
        "type": "bool"
      }
    ]
  },
  "StreamPeer": {
    "methods": [
      {
        "name": "get_8",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_16",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_64",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_available_bytes",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_data",
        "parameters": [
          {
            "name": "bytes",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_double",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_float",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_half",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_partial_data",
        "parameters": [
          {
            "name": "bytes",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_string",
        "parameters": [
          {
            "name": "bytes",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_u8",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_u16",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_u32",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_u64",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_utf8_string",
        "parameters": [
          {
            "name": "bytes",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_var",
        "parameters": [
          {
            "name": "allow_objects",
            "type": "bool"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "put_8",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_16",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_32",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_64",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_data",
        "parameters": [
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "put_double",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_float",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_half",
        "parameters": [
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_partial_data",
        "parameters": [
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "put_string",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_u8",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_u16",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_u32",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_u64",
        "parameters": [
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_utf8_string",
        "parameters": [
          {
            "name": "value",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "put_var",
        "parameters": [
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "full_objects",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "StreamPeer",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "big_endian",
        "type": "bool"
      }
    ]
  },
  "StreamPeerBuffer": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "duplicate",
        "parameters": [],
        "return_type": "StreamPeerBuffer"
      },
      {
        "name": "get_position",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "resize",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "StreamPeerBuffer",
    "parent": "StreamPeer",
    "properties": [
      {
        "name": "data_array",
        "type": "PackedByteArray"
      }
    ]
  },
  "StreamPeerExtension": {
    "methods": [
      {
        "name": "_get_available_bytes",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_data",
        "parameters": [
          {
            "name": "r_buffer",
            "type": "uint8_t*"
          },
          {
            "name": "r_bytes",
            "type": "int"
          },
          {
            "name": "r_received",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_partial_data",
        "parameters": [
          {
            "name": "r_buffer",
            "type": "uint8_t*"
          },
          {
            "name": "r_bytes",
            "type": "int"
          },
          {
            "name": "r_received",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_put_data",
        "parameters": [
          {
            "name": "p_data",
            "type": "const uint8_t*"
          },
          {
            "name": "p_bytes",
            "type": "int"
          },
          {
            "name": "r_sent",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_put_partial_data",
        "parameters": [
          {
            "name": "p_data",
            "type": "const uint8_t*"
          },
          {
            "name": "p_bytes",
            "type": "int"
          },
          {
            "name": "r_sent",
            "type": "int32_t*"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "StreamPeerExtension",
    "parent": "StreamPeer",
    "properties": []
  },
  "StreamPeerGZIP": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "finish",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "start_compression",
        "parameters": [
          {
            "name": "use_deflate",
            "type": "bool"
          },
          {
            "name": "buffer_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "start_decompression",
        "parameters": [
          {
            "name": "use_deflate",
            "type": "bool"
          },
          {
            "name": "buffer_size",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "StreamPeerGZIP",
    "parent": "StreamPeer",
    "properties": []
  },
  "StreamPeerTCP": {
    "methods": [
      {
        "name": "bind",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "host",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "connect_to_host",
        "parameters": [
          {
            "name": "host",
            "type": "String"
          },
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "disconnect_from_host",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_connected_host",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_connected_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_local_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "set_no_delay",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "StreamPeerTCP",
    "parent": "StreamPeer",
    "properties": []
  },
  "StreamPeerTLS": {
    "methods": [
      {
        "name": "accept_stream",
        "parameters": [
          {
            "name": "stream",
            "type": "StreamPeer"
          },
          {
            "name": "server_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "connect_to_stream",
        "parameters": [
          {
            "name": "stream",
            "type": "StreamPeer"
          },
          {
            "name": "common_name",
            "type": "String"
          },
          {
            "name": "client_options",
            "type": "TLSOptions"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "disconnect_from_stream",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_stream",
        "parameters": [],
        "return_type": "StreamPeer"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "StreamPeerTLS",
    "parent": "StreamPeer",
    "properties": []
  },
  "String": {
    "methods": [
      {
        "name": "begins_with",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "bigrams",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "bin_to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "c_escape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "c_unescape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "capitalize",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "casecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "chr",
        "parameters": [
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "contains",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "containsn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "countn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "dedent",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "ends_with",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "erase",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "chars",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "filecasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "filenocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "findn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "format",
        "parameters": [
          {
            "name": "values",
            "type": "Variant"
          },
          {
            "name": "placeholder",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_base_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_basename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_extension",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_file",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_slice",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "slice",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_slice_count",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_slicec",
        "parameters": [
          {
            "name": "delimiter",
            "type": "int"
          },
          {
            "name": "slice",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "hex_decode",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "hex_to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "humanize_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "indent",
        "parameters": [
          {
            "name": "prefix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_absolute_path",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_relative_path",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_subsequence_of",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_subsequence_ofn",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_ascii_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_filename",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_float",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_hex_number",
        "parameters": [
          {
            "name": "with_prefix",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_html_color",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_int",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_ip_address",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_unicode_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "join",
        "parameters": [
          {
            "name": "parts",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "json_escape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "left",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "lpad",
        "parameters": [
          {
            "name": "min_length",
            "type": "int"
          },
          {
            "name": "character",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "lstrip",
        "parameters": [
          {
            "name": "chars",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "match",
        "parameters": [
          {
            "name": "expr",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "matchn",
        "parameters": [
          {
            "name": "expr",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "md5_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "md5_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "naturalcasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "naturalnocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "nocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "num",
        "parameters": [
          {
            "name": "number",
            "type": "float"
          },
          {
            "name": "decimals",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "num_int64",
        "parameters": [
          {
            "name": "number",
            "type": "int"
          },
          {
            "name": "base",
            "type": "int"
          },
          {
            "name": "capitalize_hex",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "num_scientific",
        "parameters": [
          {
            "name": "number",
            "type": "float"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "num_uint64",
        "parameters": [
          {
            "name": "number",
            "type": "int"
          },
          {
            "name": "base",
            "type": "int"
          },
          {
            "name": "capitalize_hex",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "pad_decimals",
        "parameters": [
          {
            "name": "digits",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "pad_zeros",
        "parameters": [
          {
            "name": "digits",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "path_join",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "repeat",
        "parameters": [
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "replace",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "forwhat",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "replacen",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "forwhat",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rfindn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "right",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "rpad",
        "parameters": [
          {
            "name": "min_length",
            "type": "int"
          },
          {
            "name": "character",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "rsplit",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          },
          {
            "name": "maxsplit",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "rstrip",
        "parameters": [
          {
            "name": "chars",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "sha1_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sha1_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "sha256_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sha256_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "similarity",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "simplify_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "split",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          },
          {
            "name": "maxsplit",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "split_floats",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          }
        ],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "strip_edges",
        "parameters": [
          {
            "name": "left",
            "type": "bool"
          },
          {
            "name": "right",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "strip_escapes",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "substr",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "len",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "to_ascii_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_camel_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_float",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_lower",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_pascal_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_snake_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_upper",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_utf8_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_utf16_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_utf32_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_wchar_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "trim_prefix",
        "parameters": [
          {
            "name": "prefix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "trim_suffix",
        "parameters": [
          {
            "name": "suffix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "unicode_at",
        "parameters": [
          {
            "name": "at",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "uri_decode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "uri_encode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "validate_filename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "validate_node_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "xml_escape",
        "parameters": [
          {
            "name": "escape_quotes",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "xml_unescape",
        "parameters": [],
        "return_type": "String"
      }
    ],
    "name": "String",
    "parent": null,
    "properties": []
  },
  "StringName": {
    "methods": [
      {
        "name": "begins_with",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "bigrams",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "bin_to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "c_escape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "c_unescape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "capitalize",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "casecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "contains",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "containsn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "count",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "countn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "dedent",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "ends_with",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "erase",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "chars",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "filecasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "filenocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "find",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "findn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "format",
        "parameters": [
          {
            "name": "values",
            "type": "Variant"
          },
          {
            "name": "placeholder",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_base_dir",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_basename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_extension",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_file",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_slice",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "slice",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_slice_count",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_slicec",
        "parameters": [
          {
            "name": "delimiter",
            "type": "int"
          },
          {
            "name": "slice",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "hash",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "hex_decode",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "hex_to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "indent",
        "parameters": [
          {
            "name": "prefix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "insert",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "what",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_absolute_path",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_relative_path",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_subsequence_of",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_subsequence_ofn",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_ascii_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_filename",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_float",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_hex_number",
        "parameters": [
          {
            "name": "with_prefix",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_html_color",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_int",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_ip_address",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid_unicode_identifier",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "join",
        "parameters": [
          {
            "name": "parts",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "json_escape",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "left",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "lpad",
        "parameters": [
          {
            "name": "min_length",
            "type": "int"
          },
          {
            "name": "character",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "lstrip",
        "parameters": [
          {
            "name": "chars",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "match",
        "parameters": [
          {
            "name": "expr",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "matchn",
        "parameters": [
          {
            "name": "expr",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "md5_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "md5_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "naturalcasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "naturalnocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "nocasecmp_to",
        "parameters": [
          {
            "name": "to",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "pad_decimals",
        "parameters": [
          {
            "name": "digits",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "pad_zeros",
        "parameters": [
          {
            "name": "digits",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "path_join",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "repeat",
        "parameters": [
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "replace",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "forwhat",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "replacen",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "forwhat",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "reverse",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "rfind",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "rfindn",
        "parameters": [
          {
            "name": "what",
            "type": "String"
          },
          {
            "name": "from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "right",
        "parameters": [
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "rpad",
        "parameters": [
          {
            "name": "min_length",
            "type": "int"
          },
          {
            "name": "character",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "rsplit",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          },
          {
            "name": "maxsplit",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "rstrip",
        "parameters": [
          {
            "name": "chars",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "sha1_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sha1_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "sha256_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "sha256_text",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "similarity",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "simplify_path",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "split",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          },
          {
            "name": "maxsplit",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "split_floats",
        "parameters": [
          {
            "name": "delimiter",
            "type": "String"
          },
          {
            "name": "allow_empty",
            "type": "bool"
          }
        ],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "strip_edges",
        "parameters": [
          {
            "name": "left",
            "type": "bool"
          },
          {
            "name": "right",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "strip_escapes",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "substr",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "len",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "to_ascii_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_camel_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_float",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "to_int",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "to_lower",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_pascal_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_snake_case",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_upper",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "to_utf8_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_utf16_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_utf32_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "to_wchar_buffer",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "trim_prefix",
        "parameters": [
          {
            "name": "prefix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "trim_suffix",
        "parameters": [
          {
            "name": "suffix",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "unicode_at",
        "parameters": [
          {
            "name": "at",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "uri_decode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "uri_encode",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "validate_filename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "validate_node_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "xml_escape",
        "parameters": [
          {
            "name": "escape_quotes",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "xml_unescape",
        "parameters": [],
        "return_type": "String"
      }
    ],
    "name": "StringName",
    "parent": null,
    "properties": []
  },
  "StyleBox": {
    "methods": [
      {
        "name": "_draw",
        "parameters": [
          {
            "name": "to_canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_draw_rect",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "_get_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_test_mask",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "draw",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_content_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_current_item_drawn",
        "parameters": [],
        "return_type": "CanvasItem"
      },
      {
        "name": "get_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_offset",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "set_content_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_content_margin_all",
        "parameters": [
          {
            "name": "offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "test_mask",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          },
          {
            "name": "rect",
            "type": "Rect2"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "StyleBox",
    "parent": "Resource",
    "properties": [
      {
        "name": "content_margin_bottom",
        "type": "float"
      },
      {
        "name": "content_margin_left",
        "type": "float"
      },
      {
        "name": "content_margin_right",
        "type": "float"
      },
      {
        "name": "content_margin_top",
        "type": "float"
      }
    ]
  },
  "StyleBoxEmpty": {
    "methods": [],
    "name": "StyleBoxEmpty",
    "parent": "StyleBox",
    "properties": []
  },
  "StyleBoxFlat": {
    "methods": [
      {
        "name": "get_border_width",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_border_width_min",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_corner_radius",
        "parameters": [
          {
            "name": "corner",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_expand_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_border_width",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_border_width_all",
        "parameters": [
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_corner_radius",
        "parameters": [
          {
            "name": "corner",
            "type": "int"
          },
          {
            "name": "radius",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_corner_radius_all",
        "parameters": [
          {
            "name": "radius",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_expand_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_expand_margin_all",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "StyleBoxFlat",
    "parent": "StyleBox",
    "properties": [
      {
        "name": "anti_aliasing",
        "type": "bool"
      },
      {
        "name": "anti_aliasing_size",
        "type": "float"
      },
      {
        "name": "bg_color",
        "type": "Color"
      },
      {
        "name": "border_blend",
        "type": "bool"
      },
      {
        "name": "border_color",
        "type": "Color"
      },
      {
        "name": "border_width_bottom",
        "type": "int"
      },
      {
        "name": "border_width_left",
        "type": "int"
      },
      {
        "name": "border_width_right",
        "type": "int"
      },
      {
        "name": "border_width_top",
        "type": "int"
      },
      {
        "name": "corner_detail",
        "type": "int"
      },
      {
        "name": "corner_radius_bottom_left",
        "type": "int"
      },
      {
        "name": "corner_radius_bottom_right",
        "type": "int"
      },
      {
        "name": "corner_radius_top_left",
        "type": "int"
      },
      {
        "name": "corner_radius_top_right",
        "type": "int"
      },
      {
        "name": "draw_center",
        "type": "bool"
      },
      {
        "name": "expand_margin_bottom",
        "type": "float"
      },
      {
        "name": "expand_margin_left",
        "type": "float"
      },
      {
        "name": "expand_margin_right",
        "type": "float"
      },
      {
        "name": "expand_margin_top",
        "type": "float"
      },
      {
        "name": "shadow_color",
        "type": "Color"
      },
      {
        "name": "shadow_offset",
        "type": "Vector2"
      },
      {
        "name": "shadow_size",
        "type": "int"
      },
      {
        "name": "skew",
        "type": "Vector2"
      }
    ]
  },
  "StyleBoxLine": {
    "methods": [],
    "name": "StyleBoxLine",
    "parent": "StyleBox",
    "properties": [
      {
        "name": "color",
        "type": "Color"
      },
      {
        "name": "grow_begin",
        "type": "float"
      },
      {
        "name": "grow_end",
        "type": "float"
      },
      {
        "name": "thickness",
        "type": "int"
      },
      {
        "name": "vertical",
        "type": "bool"
      }
    ]
  },
  "StyleBoxTexture": {
    "methods": [
      {
        "name": "get_expand_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_texture_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_expand_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_expand_margin_all",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_texture_margin_all",
        "parameters": [
          {
            "name": "size",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "StyleBoxTexture",
    "parent": "StyleBox",
    "properties": [
      {
        "name": "axis_stretch_horizontal",
        "type": "int"
      },
      {
        "name": "axis_stretch_vertical",
        "type": "int"
      },
      {
        "name": "draw_center",
        "type": "bool"
      },
      {
        "name": "expand_margin_bottom",
        "type": "float"
      },
      {
        "name": "expand_margin_left",
        "type": "float"
      },
      {
        "name": "expand_margin_right",
        "type": "float"
      },
      {
        "name": "expand_margin_top",
        "type": "float"
      },
      {
        "name": "modulate_color",
        "type": "Color"
      },
      {
        "name": "region_rect",
        "type": "Rect2"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_margin_bottom",
        "type": "float"
      },
      {
        "name": "texture_margin_left",
        "type": "float"
      },
      {
        "name": "texture_margin_right",
        "type": "float"
      },
      {
        "name": "texture_margin_top",
        "type": "float"
      }
    ]
  },
  "SubViewport": {
    "methods": [],
    "name": "SubViewport",
    "parent": "Viewport",
    "properties": [
      {
        "name": "render_target_clear_mode",
        "type": "int"
      },
      {
        "name": "render_target_update_mode",
        "type": "int"
      },
      {
        "name": "size",
        "type": "Vector2i"
      },
      {
        "name": "size_2d_override",
        "type": "Vector2i"
      },
      {
        "name": "size_2d_override_stretch",
        "type": "bool"
      }
    ]
  },
  "SubViewportContainer": {
    "methods": [
      {
        "name": "_propagate_input_event",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "SubViewportContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "mouse_target",
        "type": "bool"
      },
      {
        "name": "stretch",
        "type": "bool"
      },
      {
        "name": "stretch_shrink",
        "type": "int"
      }
    ]
  },
  "SubtweenTweener": {
    "methods": [
      {
        "name": "set_delay",
        "parameters": [
          {
            "name": "delay",
            "type": "float"
          }
        ],
        "return_type": "SubtweenTweener"
      }
    ],
    "name": "SubtweenTweener",
    "parent": "Tweener",
    "properties": []
  },
  "SurfaceTool": {
    "methods": [
      {
        "name": "add_index",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_triangle_fan",
        "parameters": [
          {
            "name": "vertices",
            "type": "PackedVector3Array"
          },
          {
            "name": "uvs",
            "type": "PackedVector2Array"
          },
          {
            "name": "colors",
            "type": "PackedColorArray"
          },
          {
            "name": "uv2s",
            "type": "PackedVector2Array"
          },
          {
            "name": "normals",
            "type": "PackedVector3Array"
          },
          {
            "name": "tangents",
            "type": "Plane[]"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_vertex",
        "parameters": [
          {
            "name": "vertex",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "append_from",
        "parameters": [
          {
            "name": "existing",
            "type": "Mesh"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "begin",
        "parameters": [
          {
            "name": "primitive",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "commit",
        "parameters": [
          {
            "name": "existing",
            "type": "ArrayMesh"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "ArrayMesh"
      },
      {
        "name": "commit_to_arrays",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "create_from",
        "parameters": [
          {
            "name": "existing",
            "type": "Mesh"
          },
          {
            "name": "surface",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_from_arrays",
        "parameters": [
          {
            "name": "arrays",
            "type": "Array"
          },
          {
            "name": "primitive_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_from_blend_shape",
        "parameters": [
          {
            "name": "existing",
            "type": "Mesh"
          },
          {
            "name": "surface",
            "type": "int"
          },
          {
            "name": "blend_shape",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "deindex",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "generate_lod",
        "parameters": [
          {
            "name": "nd_threshold",
            "type": "float"
          },
          {
            "name": "target_index_count",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "generate_normals",
        "parameters": [
          {
            "name": "flip",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "generate_tangents",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_custom_format",
        "parameters": [
          {
            "name": "channel_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_primitive_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_skin_weight_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "index",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "optimize_indices_for_cache",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_bones",
        "parameters": [
          {
            "name": "bones",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_color",
        "parameters": [
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom",
        "parameters": [
          {
            "name": "channel_index",
            "type": "int"
          },
          {
            "name": "custom_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_format",
        "parameters": [
          {
            "name": "channel_index",
            "type": "int"
          },
          {
            "name": "format",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_material",
        "parameters": [
          {
            "name": "material",
            "type": "Material"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_normal",
        "parameters": [
          {
            "name": "normal",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_skin_weight_count",
        "parameters": [
          {
            "name": "count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_smooth_group",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tangent",
        "parameters": [
          {
            "name": "tangent",
            "type": "Plane"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_uv",
        "parameters": [
          {
            "name": "uv",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_uv2",
        "parameters": [
          {
            "name": "uv2",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_weights",
        "parameters": [
          {
            "name": "weights",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "SurfaceTool",
    "parent": "RefCounted",
    "properties": []
  },
  "SyntaxHighlighter": {
    "methods": [
      {
        "name": "_clear_highlighting_cache",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_get_line_syntax_highlighting",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_update_cache",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_highlighting_cache",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_line_syntax_highlighting",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_text_edit",
        "parameters": [],
        "return_type": "TextEdit"
      },
      {
        "name": "update_cache",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "SyntaxHighlighter",
    "parent": "Resource",
    "properties": []
  },
  "SystemFont": {
    "methods": [],
    "name": "SystemFont",
    "parent": "Font",
    "properties": [
      {
        "name": "allow_system_fallback",
        "type": "bool"
      },
      {
        "name": "antialiasing",
        "type": "int"
      },
      {
        "name": "disable_embedded_bitmaps",
        "type": "bool"
      },
      {
        "name": "font_italic",
        "type": "bool"
      },
      {
        "name": "font_names",
        "type": "PackedStringArray"
      },
      {
        "name": "font_stretch",
        "type": "int"
      },
      {
        "name": "font_weight",
        "type": "int"
      },
      {
        "name": "force_autohinter",
        "type": "bool"
      },
      {
        "name": "generate_mipmaps",
        "type": "bool"
      },
      {
        "name": "hinting",
        "type": "int"
      },
      {
        "name": "keep_rounding_remainders",
        "type": "bool"
      },
      {
        "name": "msdf_pixel_range",
        "type": "int"
      },
      {
        "name": "msdf_size",
        "type": "int"
      },
      {
        "name": "multichannel_signed_distance_field",
        "type": "bool"
      },
      {
        "name": "oversampling",
        "type": "float"
      },
      {
        "name": "subpixel_positioning",
        "type": "int"
      }
    ]
  },
  "TCPServer": {
    "methods": [
      {
        "name": "get_local_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_connection_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_listening",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "listen",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "bind_address",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "take_connection",
        "parameters": [],
        "return_type": "StreamPeerTCP"
      }
    ],
    "name": "TCPServer",
    "parent": "RefCounted",
    "properties": []
  },
  "TLSOptions": {
    "methods": [
      {
        "name": "client",
        "parameters": [
          {
            "name": "trusted_chain",
            "type": "X509Certificate"
          },
          {
            "name": "common_name_override",
            "type": "String"
          }
        ],
        "return_type": "TLSOptions"
      },
      {
        "name": "client_unsafe",
        "parameters": [
          {
            "name": "trusted_chain",
            "type": "X509Certificate"
          }
        ],
        "return_type": "TLSOptions"
      },
      {
        "name": "get_common_name_override",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_own_certificate",
        "parameters": [],
        "return_type": "X509Certificate"
      },
      {
        "name": "get_private_key",
        "parameters": [],
        "return_type": "CryptoKey"
      },
      {
        "name": "get_trusted_ca_chain",
        "parameters": [],
        "return_type": "X509Certificate"
      },
      {
        "name": "is_server",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_unsafe_client",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "server",
        "parameters": [
          {
            "name": "key",
            "type": "CryptoKey"
          },
          {
            "name": "certificate",
            "type": "X509Certificate"
          }
        ],
        "return_type": "TLSOptions"
      }
    ],
    "name": "TLSOptions",
    "parent": "RefCounted",
    "properties": []
  },
  "TabBar": {
    "methods": [
      {
        "name": "add_tab",
        "parameters": [
          {
            "name": "title",
            "type": "String"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_tabs",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "ensure_tab_visible",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_offset_buttons_visible",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_previous_tab",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_tab_button_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_tab_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_tab_icon_max_width",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_idx_at_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_language",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tab_metadata",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_tab_offset",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_tab_rect",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_tab_text_direction",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_title",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tab_tooltip",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_tab_disabled",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_tab_hidden",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "move_tab",
        "parameters": [
          {
            "name": "from",
            "type": "int"
          },
          {
            "name": "to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_tab",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select_next_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "select_previous_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_tab_button_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_disabled",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_hidden",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_icon_max_width",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_language",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_metadata",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_text_direction",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_title",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_tooltip",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TabBar",
    "parent": "Control",
    "properties": [
      {
        "name": "clip_tabs",
        "type": "bool"
      },
      {
        "name": "current_tab",
        "type": "int"
      },
      {
        "name": "deselect_enabled",
        "type": "bool"
      },
      {
        "name": "drag_to_rearrange_enabled",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "max_tab_width",
        "type": "int"
      },
      {
        "name": "scroll_to_selected",
        "type": "bool"
      },
      {
        "name": "scrolling_enabled",
        "type": "bool"
      },
      {
        "name": "select_with_rmb",
        "type": "bool"
      },
      {
        "name": "tab_alignment",
        "type": "int"
      },
      {
        "name": "tab_close_display_policy",
        "type": "int"
      },
      {
        "name": "tab_count",
        "type": "int"
      },
      {
        "name": "tabs_rearrange_group",
        "type": "int"
      }
    ]
  },
  "TabContainer": {
    "methods": [
      {
        "name": "get_current_tab_control",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "get_popup",
        "parameters": [],
        "return_type": "Popup"
      },
      {
        "name": "get_previous_tab",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_tab_bar",
        "parameters": [],
        "return_type": "TabBar"
      },
      {
        "name": "get_tab_button_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_tab_control",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Control"
      },
      {
        "name": "get_tab_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_tab_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_tab_icon_max_width",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_idx_at_point",
        "parameters": [
          {
            "name": "point",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_idx_from_control",
        "parameters": [
          {
            "name": "control",
            "type": "Control"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tab_metadata",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_tab_title",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tab_tooltip",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "is_tab_disabled",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_tab_hidden",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "select_next_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "select_previous_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_popup",
        "parameters": [
          {
            "name": "popup",
            "type": "Node"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_button_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_disabled",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_hidden",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "hidden",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_icon",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_icon_max_width",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_metadata",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_title",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_tooltip",
        "parameters": [
          {
            "name": "tab_idx",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TabContainer",
    "parent": "Container",
    "properties": [
      {
        "name": "all_tabs_in_front",
        "type": "bool"
      },
      {
        "name": "clip_tabs",
        "type": "bool"
      },
      {
        "name": "current_tab",
        "type": "int"
      },
      {
        "name": "deselect_enabled",
        "type": "bool"
      },
      {
        "name": "drag_to_rearrange_enabled",
        "type": "bool"
      },
      {
        "name": "tab_alignment",
        "type": "int"
      },
      {
        "name": "tab_focus_mode",
        "type": "int"
      },
      {
        "name": "tabs_position",
        "type": "int"
      },
      {
        "name": "tabs_rearrange_group",
        "type": "int"
      },
      {
        "name": "tabs_visible",
        "type": "bool"
      },
      {
        "name": "use_hidden_tabs_for_min_size",
        "type": "bool"
      }
    ]
  },
  "TextEdit": {
    "methods": [
      {
        "name": "_backspace",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_copy",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_cut",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_handle_unicode_input",
        "parameters": [
          {
            "name": "unicode_char",
            "type": "int"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_paste",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_paste_primary_clipboard",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_caret",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_caret_at_carets",
        "parameters": [
          {
            "name": "below",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_gutter",
        "parameters": [
          {
            "name": "at",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_selection_for_next_occurrence",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "adjust_carets_after_edit",
        "parameters": [
          {
            "name": "caret",
            "type": "int"
          },
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "from_col",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          },
          {
            "name": "to_col",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "adjust_viewport_to_caret",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "apply_ime",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "backspace",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "begin_complex_operation",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "begin_multicaret_edit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "cancel_ime",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "center_viewport_to_caret",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_undo_history",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "collapse_carets",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "from_column",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          },
          {
            "name": "to_column",
            "type": "int"
          },
          {
            "name": "inclusive",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "copy",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "cut",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "delete_selection",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "deselect",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "end_action",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "end_complex_operation",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "end_multicaret_edit",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_caret_column",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_caret_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_caret_draw_pos",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_caret_index_edit_order",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_caret_line",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_caret_wrap_index",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_first_non_whitespace_column",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_first_visible_line",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_gutter_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_gutter_name",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_gutter_type",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_gutter_width",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_h_scroll_bar",
        "parameters": [],
        "return_type": "HScrollBar"
      },
      {
        "name": "get_indent_level",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_last_full_visible_line",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_last_full_visible_line_wrap_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_last_unhidden_line",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_line_background_color",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_line_column_at_pos",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "clamp_line",
            "type": "bool"
          },
          {
            "name": "clamp_column",
            "type": "bool"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_gutter_icon",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_line_gutter_item_color",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_line_gutter_metadata",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_line_gutter_text",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_line_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_ranges_from_carets",
        "parameters": [
          {
            "name": "only_selections",
            "type": "bool"
          },
          {
            "name": "merge_adjacent",
            "type": "bool"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_line_width",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_line_with_ime",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_line_wrap_count",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_line_wrap_index_at_column",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_line_wrapped_text",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_local_mouse_pos",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_menu",
        "parameters": [],
        "return_type": "PopupMenu"
      },
      {
        "name": "get_minimap_line_at_pos",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_minimap_visible_lines",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_next_visible_line_index_offset_from",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          },
          {
            "name": "visible_amount",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_next_visible_line_offset_from",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "visible_amount",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_pos_at_line_column",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_rect_at_line_column",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "get_saved_version",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_scroll_pos_for_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_selected_text",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_selection_at_line_column",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "include_edges",
            "type": "bool"
          },
          {
            "name": "only_selections",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_column",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_from_column",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_from_line",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_line",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_selection_origin_column",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_origin_line",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_to_column",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_selection_to_line",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_sorted_carets",
        "parameters": [
          {
            "name": "include_ignored_carets",
            "type": "bool"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_tab_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_total_gutter_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_total_visible_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_v_scroll_bar",
        "parameters": [],
        "return_type": "VScrollBar"
      },
      {
        "name": "get_version",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_visible_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_visible_line_count_in_range",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_word_at_pos",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_word_under_caret",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "has_ime_text",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_redo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_selection",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_undo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "insert_line_at",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "insert_text",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "before_selection_begin",
            "type": "bool"
          },
          {
            "name": "before_selection_end",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "insert_text_at_caret",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "is_caret_after_selection_origin",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_caret_visible",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_dragging_cursor",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_gutter_clickable",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_gutter_drawn",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_gutter_overwritable",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_in_mulitcaret_edit",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_line_gutter_clickable",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_line_wrapped",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_menu_visible",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_mouse_over_selection",
        "parameters": [
          {
            "name": "edges",
            "type": "bool"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_overtype_mode_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "menu_option",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "merge_gutters",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "merge_overlapping_carets",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "multicaret_edit_ignore_caret",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "paste",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "paste_primary_clipboard",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "redo",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_caret",
        "parameters": [
          {
            "name": "caret",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_gutter",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_line_at",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "move_carets_down",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_secondary_carets",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_text",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "from_column",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          },
          {
            "name": "to_column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "search",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "int"
          },
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "from_column",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "origin_line",
            "type": "int"
          },
          {
            "name": "origin_column",
            "type": "int"
          },
          {
            "name": "caret_line",
            "type": "int"
          },
          {
            "name": "caret_column",
            "type": "int"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "select_word_under_caret",
        "parameters": [
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_caret_column",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "adjust_viewport",
            "type": "bool"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_caret_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "adjust_viewport",
            "type": "bool"
          },
          {
            "name": "can_be_hidden",
            "type": "bool"
          },
          {
            "name": "wrap_index",
            "type": "int"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_clickable",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "clickable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_custom_draw",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "draw_callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_draw",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "draw",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_name",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_overwritable",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "overwritable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_type",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_gutter_width",
        "parameters": [
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "new_text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_center_visible",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_first_visible",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_as_last_visible",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "wrap_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_background_color",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_gutter_clickable",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "clickable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_gutter_icon",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "icon",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_gutter_item_color",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_gutter_metadata",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "metadata",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_line_gutter_text",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "gutter",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_overtype_mode_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_search_flags",
        "parameters": [
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_search_text",
        "parameters": [
          {
            "name": "search_text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selection_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selection_origin_column",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selection_origin_line",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "can_be_hidden",
            "type": "bool"
          },
          {
            "name": "wrap_index",
            "type": "int"
          },
          {
            "name": "caret_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tab_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tooltip_request_func",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "skip_selection_for_next_occurrence",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "start_action",
        "parameters": [
          {
            "name": "action",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "swap_lines",
        "parameters": [
          {
            "name": "from_line",
            "type": "int"
          },
          {
            "name": "to_line",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tag_saved_version",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "undo",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "TextEdit",
    "parent": "Control",
    "properties": [
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "caret_blink",
        "type": "bool"
      },
      {
        "name": "caret_blink_interval",
        "type": "float"
      },
      {
        "name": "caret_draw_when_editable_disabled",
        "type": "bool"
      },
      {
        "name": "caret_mid_grapheme",
        "type": "bool"
      },
      {
        "name": "caret_move_on_right_click",
        "type": "bool"
      },
      {
        "name": "caret_multiple",
        "type": "bool"
      },
      {
        "name": "caret_type",
        "type": "int"
      },
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "context_menu_enabled",
        "type": "bool"
      },
      {
        "name": "custom_word_separators",
        "type": "String"
      },
      {
        "name": "deselect_on_focus_loss_enabled",
        "type": "bool"
      },
      {
        "name": "drag_and_drop_selection_enabled",
        "type": "bool"
      },
      {
        "name": "draw_control_chars",
        "type": "bool"
      },
      {
        "name": "draw_spaces",
        "type": "bool"
      },
      {
        "name": "draw_tabs",
        "type": "bool"
      },
      {
        "name": "editable",
        "type": "bool"
      },
      {
        "name": "emoji_menu_enabled",
        "type": "bool"
      },
      {
        "name": "empty_selection_clipboard_enabled",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "highlight_all_occurrences",
        "type": "bool"
      },
      {
        "name": "highlight_current_line",
        "type": "bool"
      },
      {
        "name": "indent_wrapped_lines",
        "type": "bool"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "middle_mouse_paste_enabled",
        "type": "bool"
      },
      {
        "name": "minimap_draw",
        "type": "bool"
      },
      {
        "name": "minimap_width",
        "type": "int"
      },
      {
        "name": "mouse_default_cursor_shape",
        "type": "int"
      },
      {
        "name": "placeholder_text",
        "type": "String"
      },
      {
        "name": "scroll_fit_content_height",
        "type": "bool"
      },
      {
        "name": "scroll_fit_content_width",
        "type": "bool"
      },
      {
        "name": "scroll_horizontal",
        "type": "int"
      },
      {
        "name": "scroll_past_end_of_file",
        "type": "bool"
      },
      {
        "name": "scroll_smooth",
        "type": "bool"
      },
      {
        "name": "scroll_v_scroll_speed",
        "type": "float"
      },
      {
        "name": "scroll_vertical",
        "type": "float"
      },
      {
        "name": "selecting_enabled",
        "type": "bool"
      },
      {
        "name": "shortcut_keys_enabled",
        "type": "bool"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "syntax_highlighter",
        "type": "SyntaxHighlighter"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "use_custom_word_separators",
        "type": "bool"
      },
      {
        "name": "use_default_word_separators",
        "type": "bool"
      },
      {
        "name": "virtual_keyboard_enabled",
        "type": "bool"
      },
      {
        "name": "wrap_mode",
        "type": "int"
      }
    ]
  },
  "TextLine": {
    "methods": [
      {
        "name": "add_object",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_string",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_outline",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_line_ascent",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_line_descent",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_line_underline_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_line_underline_thickness",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_line_width",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_object_rect",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_objects",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "hit_test",
        "parameters": [
          {
            "name": "coords",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "resize_object",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_bidi_override",
        "parameters": [
          {
            "name": "override",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "tab_align",
        "parameters": [
          {
            "name": "tab_stops",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TextLine",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "direction",
        "type": "int"
      },
      {
        "name": "ellipsis_char",
        "type": "String"
      },
      {
        "name": "flags",
        "type": "int"
      },
      {
        "name": "orientation",
        "type": "int"
      },
      {
        "name": "preserve_control",
        "type": "bool"
      },
      {
        "name": "preserve_invalid",
        "type": "bool"
      },
      {
        "name": "text_overrun_behavior",
        "type": "int"
      },
      {
        "name": "width",
        "type": "float"
      }
    ]
  },
  "TextMesh": {
    "methods": [],
    "name": "TextMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "autowrap_mode",
        "type": "int"
      },
      {
        "name": "curve_step",
        "type": "float"
      },
      {
        "name": "depth",
        "type": "float"
      },
      {
        "name": "font",
        "type": "Font"
      },
      {
        "name": "font_size",
        "type": "int"
      },
      {
        "name": "horizontal_alignment",
        "type": "int"
      },
      {
        "name": "justification_flags",
        "type": "int"
      },
      {
        "name": "language",
        "type": "String"
      },
      {
        "name": "line_spacing",
        "type": "float"
      },
      {
        "name": "offset",
        "type": "Vector2"
      },
      {
        "name": "pixel_size",
        "type": "float"
      },
      {
        "name": "structured_text_bidi_override",
        "type": "int"
      },
      {
        "name": "structured_text_bidi_override_options",
        "type": "Array"
      },
      {
        "name": "text",
        "type": "String"
      },
      {
        "name": "text_direction",
        "type": "int"
      },
      {
        "name": "uppercase",
        "type": "bool"
      },
      {
        "name": "vertical_alignment",
        "type": "int"
      },
      {
        "name": "width",
        "type": "float"
      }
    ]
  },
  "TextParagraph": {
    "methods": [
      {
        "name": "add_object",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_string",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_dropcap",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "draw",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "dc_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_dropcap",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_dropcap_outline",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_line",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_line_outline",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_outline",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "dc_color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_dropcap_lines",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_dropcap_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_dropcap_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_line_ascent",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_line_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_line_descent",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_line_object_rect",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_line_objects",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_line_range",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_line_rid",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_line_size",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_line_underline_position",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_line_underline_thickness",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_line_width",
        "parameters": [
          {
            "name": "line",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_non_wrapped_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "hit_test",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "resize_object",
        "parameters": [
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_bidi_override",
        "parameters": [
          {
            "name": "override",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_dropcap",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "font",
            "type": "Font"
          },
          {
            "name": "font_size",
            "type": "int"
          },
          {
            "name": "dropcap_margins",
            "type": "Rect2"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "tab_align",
        "parameters": [
          {
            "name": "tab_stops",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TextParagraph",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "alignment",
        "type": "int"
      },
      {
        "name": "break_flags",
        "type": "int"
      },
      {
        "name": "custom_punctuation",
        "type": "String"
      },
      {
        "name": "direction",
        "type": "int"
      },
      {
        "name": "ellipsis_char",
        "type": "String"
      },
      {
        "name": "justification_flags",
        "type": "int"
      },
      {
        "name": "line_spacing",
        "type": "float"
      },
      {
        "name": "max_lines_visible",
        "type": "int"
      },
      {
        "name": "orientation",
        "type": "int"
      },
      {
        "name": "preserve_control",
        "type": "bool"
      },
      {
        "name": "preserve_invalid",
        "type": "bool"
      },
      {
        "name": "text_overrun_behavior",
        "type": "int"
      },
      {
        "name": "width",
        "type": "float"
      }
    ]
  },
  "TextServer": {
    "methods": [
      {
        "name": "create_font",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "create_font_linked_variation",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "create_shaped_text",
        "parameters": [
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "draw_hex_code_box",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_clear_glyphs",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_clear_kerning_map",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_clear_size_cache",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_clear_textures",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_draw_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_draw_glyph_outline",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_get_antialiasing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_ascent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_baseline_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_char_from_glyph_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_descent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_disable_embedded_bitmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_get_embolden",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_face_count",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_face_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_fixed_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_fixed_size_scale_mode",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_generate_mipmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_get_global_oversampling",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "font_get_glyph_advance",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "font_get_glyph_contours",
        "parameters": [
          {
            "name": "font",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "font_get_glyph_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "variation_selector",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_glyph_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "font_get_glyph_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "font_get_glyph_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "font_get_glyph_texture_idx",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_glyph_texture_rid",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "font_get_glyph_texture_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "font_get_glyph_uv_rect",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "font_get_hinting",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_keep_rounding_remainders",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_get_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "font_get_kerning_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "font_get_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_get_language_support_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "font_get_msdf_pixel_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_msdf_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "font_get_opentype_feature_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "font_get_ot_name_strings",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "font_get_oversampling",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_scale",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_get_script_support_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "font_get_size_cache_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "font_get_spacing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_stretch",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_style",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_style_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "font_get_subpixel_positioning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_supported_chars",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "font_get_supported_glyphs",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "font_get_texture_count",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_get_texture_image",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "font_get_texture_offsets",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "font_get_transform",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "font_get_underline_position",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_underline_thickness",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "font_get_variation_coordinates",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "font_get_weight",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "font_has_char",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_is_allow_system_fallback",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_is_force_autohinter",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_is_language_supported",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_is_multichannel_signed_distance_field",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_is_script_supported",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "font_remove_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_remove_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_remove_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_remove_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_remove_size_cache",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_remove_texture",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_render_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_render_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_allow_system_fallback",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "allow_system_fallback",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_antialiasing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "antialiasing",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_ascent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "ascent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_baseline_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "baseline_offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_data",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_descent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "descent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_disable_embedded_bitmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "disable_embedded_bitmaps",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_embolden",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "strength",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_face_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "face_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_fixed_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "fixed_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_fixed_size_scale_mode",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "fixed_size_scale_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_force_autohinter",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "force_autohinter",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_generate_mipmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "generate_mipmaps",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_global_oversampling",
        "parameters": [
          {
            "name": "oversampling",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_glyph_advance",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "advance",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_glyph_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_glyph_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "gl_size",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_glyph_texture_idx",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "texture_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_glyph_uv_rect",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "uv_rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_hinting",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "hinting",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_keep_rounding_remainders",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "keep_rounding_remainders",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          },
          {
            "name": "kerning",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_msdf_pixel_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf_pixel_range",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_msdf_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_multichannel_signed_distance_field",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_opentype_feature_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "overrides",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_oversampling",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "oversampling",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_scale",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_spacing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_stretch",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "weight",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_style",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "style",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_style_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_subpixel_positioning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "subpixel_positioning",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_texture_image",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_texture_offsets",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_transform",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_underline_position",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_underline_thickness",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_thickness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_variation_coordinates",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "variation_coordinates",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_set_weight",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "weight",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "font_supported_feature_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "font_supported_variation_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "format_number",
        "parameters": [
          {
            "name": "number",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_features",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_hex_code_box_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_support_data",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_support_data_filename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_support_data_info",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_confusable",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "dict",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_locale_right_to_left",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_identifier",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_letter",
        "parameters": [
          {
            "name": "unicode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "load_support_data",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "name_to_tag",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "parse_number",
        "parameters": [
          {
            "name": "number",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "parse_structured_text",
        "parameters": [
          {
            "name": "parser_type",
            "type": "int"
          },
          {
            "name": "args",
            "type": "Array"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "Vector3i[]"
      },
      {
        "name": "percent_sign",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "save_support_data",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_get_span_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_get_span_embedded_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "shaped_get_span_meta",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "shaped_set_span_update_font",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "fonts",
            "type": "RID[]"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "opentype_features",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_add_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_add_string",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "fonts",
            "type": "RID[]"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "opentype_features",
            "type": "Dictionary"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_clear",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_closest_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_draw",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "clip_l",
            "type": "float"
          },
          {
            "name": "clip_r",
            "type": "float"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_draw_outline",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "clip_l",
            "type": "float"
          },
          {
            "name": "clip_r",
            "type": "float"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_fit_to_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "justification_flags",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_ascent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_carets",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "shaped_text_get_character_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "shaped_text_get_custom_ellipsis",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_custom_punctuation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "shaped_text_get_descent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_dominant_direction_in_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_ellipsis_glyph_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_ellipsis_glyphs",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "shaped_text_get_ellipsis_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_glyph_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_glyphs",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "shaped_text_get_grapheme_bounds",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "shaped_text_get_inferred_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_line_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "break_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "shaped_text_get_line_breaks_adv",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "PackedFloat32Array"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "once",
            "type": "bool"
          },
          {
            "name": "break_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "shaped_text_get_object_glyph",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_object_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "shaped_text_get_object_rect",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "shaped_text_get_objects",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "shaped_text_get_orientation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_parent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "shaped_text_get_preserve_control",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_get_preserve_invalid",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_get_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "shaped_text_get_selection",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "shaped_text_get_size",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "shaped_text_get_spacing",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_trim_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_get_underline_position",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_underline_thickness",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "shaped_text_get_word_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "grapheme_flags",
            "type": "int"
          },
          {
            "name": "skip_grapheme_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "shaped_text_has_visible_chars",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_hit_test_grapheme",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "coords",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_hit_test_position",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "coords",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_is_ready",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_next_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_next_grapheme_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_overrun_trim_to_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "overrun_trim_flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_prev_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_prev_grapheme_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "shaped_text_resize_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_set_bidi_override",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "override",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_custom_ellipsis",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_custom_punctuation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "punct",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_orientation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_preserve_control",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_preserve_invalid",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_set_spacing",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "shaped_text_shape",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "shaped_text_sort_logical",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "shaped_text_substr",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "shaped_text_tab_align",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "tab_stops",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "spoof_check",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "string_get_character_breaks",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "string_get_word_breaks",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "chars_per_line",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "string_to_lower",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "string_to_title",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "string_to_upper",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "strip_diacritics",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "tag_to_name",
        "parameters": [
          {
            "name": "tag",
            "type": "int"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "TextServer",
    "parent": "RefCounted",
    "properties": []
  },
  "TextServerDummy": {
    "methods": [],
    "name": "TextServerDummy",
    "parent": "TextServerExtension",
    "properties": []
  },
  "TextServerExtension": {
    "methods": [
      {
        "name": "_cleanup",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_create_font",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_create_font_linked_variation",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_create_shaped_text",
        "parameters": [
          {
            "name": "direction",
            "type": "int"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_draw_hex_code_box",
        "parameters": [
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_clear_glyphs",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_clear_kerning_map",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_clear_size_cache",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_clear_textures",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_draw_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_draw_glyph_outline",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_get_antialiasing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_ascent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_baseline_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_char_from_glyph_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_descent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_disable_embedded_bitmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_get_embolden",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_face_count",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_face_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_fixed_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_fixed_size_scale_mode",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_generate_mipmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_get_global_oversampling",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_font_get_glyph_advance",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_font_get_glyph_contours",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_font_get_glyph_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "char",
            "type": "int"
          },
          {
            "name": "variation_selector",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_glyph_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_font_get_glyph_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_font_get_glyph_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_font_get_glyph_texture_idx",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_glyph_texture_rid",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_font_get_glyph_texture_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_font_get_glyph_uv_rect",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "_font_get_hinting",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_keep_rounding_remainders",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_get_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_font_get_kerning_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "_font_get_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_get_language_support_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_font_get_msdf_pixel_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_msdf_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_font_get_opentype_feature_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_font_get_ot_name_strings",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_font_get_oversampling",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_scale",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_get_script_support_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_font_get_size_cache_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "_font_get_spacing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_stretch",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_style",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_style_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_font_get_subpixel_positioning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_supported_chars",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_font_get_supported_glyphs",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_font_get_texture_count",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_get_texture_image",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "_font_get_texture_offsets",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_font_get_transform",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "_font_get_underline_position",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_underline_thickness",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_font_get_variation_coordinates",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_font_get_weight",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_font_has_char",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_is_allow_system_fallback",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_is_force_autohinter",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_is_language_supported",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_is_multichannel_signed_distance_field",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_is_script_supported",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_font_remove_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_remove_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_remove_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_remove_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_remove_size_cache",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_remove_texture",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_render_glyph",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_render_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_allow_system_fallback",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "allow_system_fallback",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_antialiasing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "antialiasing",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_ascent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "ascent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_baseline_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "baseline_offset",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_data",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "data",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_data_ptr",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "data_ptr",
            "type": "const uint8_t*"
          },
          {
            "name": "data_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_descent",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "descent",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_disable_embedded_bitmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "disable_embedded_bitmaps",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_embolden",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "strength",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_face_index",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "face_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_fixed_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "fixed_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_fixed_size_scale_mode",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "fixed_size_scale_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_force_autohinter",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "force_autohinter",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_generate_mipmaps",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "generate_mipmaps",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_global_oversampling",
        "parameters": [
          {
            "name": "oversampling",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_glyph_advance",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "advance",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_glyph_offset",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_glyph_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "gl_size",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_glyph_texture_idx",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "texture_idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_glyph_uv_rect",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "glyph",
            "type": "int"
          },
          {
            "name": "uv_rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_hinting",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "hinting",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_keep_rounding_remainders",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "keep_rounding_remainders",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_kerning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "glyph_pair",
            "type": "Vector2i"
          },
          {
            "name": "kerning",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_language_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_msdf_pixel_range",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf_pixel_range",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_msdf_size",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_multichannel_signed_distance_field",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "msdf",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_opentype_feature_overrides",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "overrides",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_oversampling",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "oversampling",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_scale",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "scale",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_script_support_override",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "script",
            "type": "String"
          },
          {
            "name": "supported",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_spacing",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_stretch",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "stretch",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_style",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "style",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_style_name",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "name_style",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_subpixel_positioning",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "subpixel_positioning",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_texture_image",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "image",
            "type": "Image"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_texture_offsets",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "texture_index",
            "type": "int"
          },
          {
            "name": "offset",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_transform",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "transform",
            "type": "Transform2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_underline_position",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_position",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_underline_thickness",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "underline_thickness",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_variation_coordinates",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "variation_coordinates",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_set_weight",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          },
          {
            "name": "weight",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_font_supported_feature_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_font_supported_variation_list",
        "parameters": [
          {
            "name": "font_rid",
            "type": "RID"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "_format_number",
        "parameters": [
          {
            "name": "number",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_free_rid",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_features",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_hex_code_box_size",
        "parameters": [
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_support_data",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "_get_support_data_filename",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_support_data_info",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_has",
        "parameters": [
          {
            "name": "rid",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_has_feature",
        "parameters": [
          {
            "name": "feature",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_confusable",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "dict",
            "type": "PackedStringArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_is_locale_right_to_left",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_valid_identifier",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_valid_letter",
        "parameters": [
          {
            "name": "unicode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_load_support_data",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_name_to_tag",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_parse_number",
        "parameters": [
          {
            "name": "number",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_parse_structured_text",
        "parameters": [
          {
            "name": "parser_type",
            "type": "int"
          },
          {
            "name": "args",
            "type": "Array"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "Vector3i[]"
      },
      {
        "name": "_percent_sign",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_save_support_data",
        "parameters": [
          {
            "name": "filename",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_get_span_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_get_span_embedded_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_shaped_get_span_meta",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_shaped_set_span_update_font",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "index",
            "type": "int"
          },
          {
            "name": "fonts",
            "type": "RID[]"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "opentype_features",
            "type": "Dictionary"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_add_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_add_string",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "text",
            "type": "String"
          },
          {
            "name": "fonts",
            "type": "RID[]"
          },
          {
            "name": "size",
            "type": "int"
          },
          {
            "name": "opentype_features",
            "type": "Dictionary"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_clear",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_closest_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_draw",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "clip_l",
            "type": "float"
          },
          {
            "name": "clip_r",
            "type": "float"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_draw_outline",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "canvas",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "clip_l",
            "type": "float"
          },
          {
            "name": "clip_r",
            "type": "float"
          },
          {
            "name": "outline_size",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_fit_to_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "justification_flags",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_ascent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_carets",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "int"
          },
          {
            "name": "caret",
            "type": "CaretInfo*"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_get_character_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_shaped_text_get_custom_ellipsis",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_custom_punctuation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_shaped_text_get_descent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_dominant_direction_in_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_ellipsis_glyph_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_ellipsis_glyphs",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "const Glyph*"
      },
      {
        "name": "_shaped_text_get_ellipsis_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_glyph_count",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_glyphs",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "const Glyph*"
      },
      {
        "name": "_shaped_text_get_grapheme_bounds",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_shaped_text_get_inferred_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_line_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "break_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_shaped_text_get_line_breaks_adv",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "PackedFloat32Array"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "once",
            "type": "bool"
          },
          {
            "name": "break_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_shaped_text_get_object_glyph",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_object_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "_shaped_text_get_object_rect",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "_shaped_text_get_objects",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "_shaped_text_get_orientation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_parent",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_shaped_text_get_preserve_control",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_get_preserve_invalid",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_get_range",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "_shaped_text_get_selection",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "end",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "_shaped_text_get_size",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "_shaped_text_get_spacing",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_trim_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_get_underline_position",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_underline_thickness",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_get_word_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "grapheme_flags",
            "type": "int"
          },
          {
            "name": "skip_grapheme_flags",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_shaped_text_hit_test_grapheme",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "coord",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_hit_test_position",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "coord",
            "type": "float"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_is_ready",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_next_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_next_grapheme_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_overrun_trim_to_width",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "width",
            "type": "float"
          },
          {
            "name": "trim_flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_prev_character_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_prev_grapheme_pos",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_shaped_text_resize_object",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "key",
            "type": "Variant"
          },
          {
            "name": "size",
            "type": "Vector2"
          },
          {
            "name": "inline_align",
            "type": "int"
          },
          {
            "name": "baseline",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_set_bidi_override",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "override",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_custom_ellipsis",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "char",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_custom_punctuation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "punct",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_direction",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_orientation",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "orientation",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_preserve_control",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_preserve_invalid",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_set_spacing",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "spacing",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_shaped_text_shape",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_sort_logical",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "const Glyph*"
      },
      {
        "name": "_shaped_text_substr",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "start",
            "type": "int"
          },
          {
            "name": "length",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "_shaped_text_tab_align",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          },
          {
            "name": "tab_stops",
            "type": "PackedFloat32Array"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "_shaped_text_update_breaks",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_shaped_text_update_justification_ops",
        "parameters": [
          {
            "name": "shaped",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_spoof_check",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_string_get_character_breaks",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_string_get_word_breaks",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          },
          {
            "name": "chars_per_line",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "_string_to_lower",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_string_to_title",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_string_to_upper",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_strip_diacritics",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_tag_to_name",
        "parameters": [
          {
            "name": "tag",
            "type": "int"
          }
        ],
        "return_type": "String"
      }
    ],
    "name": "TextServerExtension",
    "parent": "TextServer",
    "properties": []
  },
  "TextServerManager": {
    "methods": [
      {
        "name": "add_interface",
        "parameters": [
          {
            "name": "interface",
            "type": "TextServer"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "find_interface",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "TextServer"
      },
      {
        "name": "get_interface",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "TextServer"
      },
      {
        "name": "get_interface_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_interfaces",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_primary_interface",
        "parameters": [],
        "return_type": "TextServer"
      },
      {
        "name": "remove_interface",
        "parameters": [
          {
            "name": "interface",
            "type": "TextServer"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_primary_interface",
        "parameters": [
          {
            "name": "index",
            "type": "TextServer"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TextServerManager",
    "parent": "Object",
    "properties": []
  },
  "Texture": {
    "methods": [],
    "name": "Texture",
    "parent": "Resource",
    "properties": []
  },
  "Texture2D": {
    "methods": [
      {
        "name": "_draw",
        "parameters": [
          {
            "name": "to_canvas_item",
            "type": "RID"
          },
          {
            "name": "pos",
            "type": "Vector2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_draw_rect",
        "parameters": [
          {
            "name": "to_canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "tile",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_draw_rect_region",
        "parameters": [
          {
            "name": "to_canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          },
          {
            "name": "clip_uv",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_has_alpha",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_pixel_opaque",
        "parameters": [
          {
            "name": "x",
            "type": "int"
          },
          {
            "name": "y",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      },
      {
        "name": "draw",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_rect",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "tile",
            "type": "bool"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "draw_rect_region",
        "parameters": [
          {
            "name": "canvas_item",
            "type": "RID"
          },
          {
            "name": "rect",
            "type": "Rect2"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "modulate",
            "type": "Color"
          },
          {
            "name": "transpose",
            "type": "bool"
          },
          {
            "name": "clip_uv",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_image",
        "parameters": [],
        "return_type": "Image"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_alpha",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "Texture2D",
    "parent": "Texture",
    "properties": []
  },
  "Texture2DArray": {
    "methods": [
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      }
    ],
    "name": "Texture2DArray",
    "parent": "ImageTextureLayered",
    "properties": []
  },
  "Texture2DArrayRD": {
    "methods": [],
    "name": "Texture2DArrayRD",
    "parent": "TextureLayeredRD",
    "properties": []
  },
  "Texture2DRD": {
    "methods": [],
    "name": "Texture2DRD",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "resource_local_to_scene",
        "type": "bool"
      },
      {
        "name": "texture_rd_rid",
        "type": "RID"
      }
    ]
  },
  "Texture3D": {
    "methods": [
      {
        "name": "_get_data",
        "parameters": [],
        "return_type": "Image[]"
      },
      {
        "name": "_get_depth",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_has_mipmaps",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "create_placeholder",
        "parameters": [],
        "return_type": "Resource"
      },
      {
        "name": "get_data",
        "parameters": [],
        "return_type": "Image[]"
      },
      {
        "name": "get_depth",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_mipmaps",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "Texture3D",
    "parent": "Texture",
    "properties": []
  },
  "Texture3DRD": {
    "methods": [],
    "name": "Texture3DRD",
    "parent": "Texture3D",
    "properties": [
      {
        "name": "texture_rd_rid",
        "type": "RID"
      }
    ]
  },
  "TextureButton": {
    "methods": [],
    "name": "TextureButton",
    "parent": "BaseButton",
    "properties": [
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "ignore_texture_size",
        "type": "bool"
      },
      {
        "name": "stretch_mode",
        "type": "int"
      },
      {
        "name": "texture_click_mask",
        "type": "BitMap"
      },
      {
        "name": "texture_disabled",
        "type": "Texture2D"
      },
      {
        "name": "texture_focused",
        "type": "Texture2D"
      },
      {
        "name": "texture_hover",
        "type": "Texture2D"
      },
      {
        "name": "texture_normal",
        "type": "Texture2D"
      },
      {
        "name": "texture_pressed",
        "type": "Texture2D"
      }
    ]
  },
  "TextureCubemapArrayRD": {
    "methods": [],
    "name": "TextureCubemapArrayRD",
    "parent": "TextureLayeredRD",
    "properties": []
  },
  "TextureCubemapRD": {
    "methods": [],
    "name": "TextureCubemapRD",
    "parent": "TextureLayeredRD",
    "properties": []
  },
  "TextureLayered": {
    "methods": [
      {
        "name": "_get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_layer_data",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "_get_layered_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_layers",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_has_mipmaps",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_format",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_height",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_layer_data",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "Image"
      },
      {
        "name": "get_layered_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_layers",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_width",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_mipmaps",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "TextureLayered",
    "parent": "Texture",
    "properties": []
  },
  "TextureLayeredRD": {
    "methods": [],
    "name": "TextureLayeredRD",
    "parent": "TextureLayered",
    "properties": [
      {
        "name": "texture_rd_rid",
        "type": "RID"
      }
    ]
  },
  "TextureProgressBar": {
    "methods": [
      {
        "name": "get_stretch_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "set_stretch_margin",
        "parameters": [
          {
            "name": "margin",
            "type": "int"
          },
          {
            "name": "value",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TextureProgressBar",
    "parent": "Range",
    "properties": [
      {
        "name": "fill_mode",
        "type": "int"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "nine_patch_stretch",
        "type": "bool"
      },
      {
        "name": "radial_center_offset",
        "type": "Vector2"
      },
      {
        "name": "radial_fill_degrees",
        "type": "float"
      },
      {
        "name": "radial_initial_angle",
        "type": "float"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      },
      {
        "name": "step",
        "type": "float"
      },
      {
        "name": "stretch_margin_bottom",
        "type": "int"
      },
      {
        "name": "stretch_margin_left",
        "type": "int"
      },
      {
        "name": "stretch_margin_right",
        "type": "int"
      },
      {
        "name": "stretch_margin_top",
        "type": "int"
      },
      {
        "name": "texture_over",
        "type": "Texture2D"
      },
      {
        "name": "texture_progress",
        "type": "Texture2D"
      },
      {
        "name": "texture_progress_offset",
        "type": "Vector2"
      },
      {
        "name": "texture_under",
        "type": "Texture2D"
      },
      {
        "name": "tint_over",
        "type": "Color"
      },
      {
        "name": "tint_progress",
        "type": "Color"
      },
      {
        "name": "tint_under",
        "type": "Color"
      }
    ]
  },
  "TextureRect": {
    "methods": [],
    "name": "TextureRect",
    "parent": "Control",
    "properties": [
      {
        "name": "expand_mode",
        "type": "int"
      },
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "mouse_filter",
        "type": "int"
      },
      {
        "name": "stretch_mode",
        "type": "int"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      }
    ]
  },
  "Theme": {
    "methods": [
      {
        "name": "add_type",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_theme_item",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_type_variation",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_color_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_color_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_constant_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_constant_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Font"
      },
      {
        "name": "get_font_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_font_size_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_font_size_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_font_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_icon_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_icon_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "StyleBox"
      },
      {
        "name": "get_stylebox_list",
        "parameters": [
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_stylebox_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_theme_item",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_theme_item_list",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "theme_type",
            "type": "String"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_theme_item_type_list",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_type_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_type_variation_base",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_type_variation_list",
        "parameters": [
          {
            "name": "base_type",
            "type": "StringName"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "has_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_default_base_scale",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_default_font",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_default_font_size",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_item",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_type_variation",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "base_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "merge_with",
        "parameters": [
          {
            "name": "other",
            "type": "Theme"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_type",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_color",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_constant",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_font",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_font_size",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_icon",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_stylebox",
        "parameters": [
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "rename_theme_item",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "old_name",
            "type": "StringName"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "constant",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "font",
            "type": "Font"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "StyleBox"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_theme_item",
        "parameters": [
          {
            "name": "data_type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_type_variation",
        "parameters": [
          {
            "name": "theme_type",
            "type": "StringName"
          },
          {
            "name": "base_type",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Theme",
    "parent": "Resource",
    "properties": [
      {
        "name": "default_base_scale",
        "type": "float"
      },
      {
        "name": "default_font",
        "type": "Font"
      },
      {
        "name": "default_font_size",
        "type": "int"
      }
    ]
  },
  "ThemeDB": {
    "methods": [
      {
        "name": "get_default_theme",
        "parameters": [],
        "return_type": "Theme"
      },
      {
        "name": "get_project_theme",
        "parameters": [],
        "return_type": "Theme"
      }
    ],
    "name": "ThemeDB",
    "parent": "Object",
    "properties": [
      {
        "name": "fallback_base_scale",
        "type": "float"
      },
      {
        "name": "fallback_font",
        "type": "Font"
      },
      {
        "name": "fallback_font_size",
        "type": "int"
      },
      {
        "name": "fallback_icon",
        "type": "Texture2D"
      },
      {
        "name": "fallback_stylebox",
        "type": "StyleBox"
      }
    ]
  },
  "Thread": {
    "methods": [
      {
        "name": "get_id",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "is_alive",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_started",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_thread_safety_checks_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          },
          {
            "name": "priority",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "wait_to_finish",
        "parameters": [],
        "return_type": "Variant"
      }
    ],
    "name": "Thread",
    "parent": "RefCounted",
    "properties": []
  },
  "TileData": {
    "methods": [
      {
        "name": "add_collision_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_occluder_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_collision_polygon_one_way_margin",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_collision_polygon_points",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "get_collision_polygons_count",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_constant_angular_velocity",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_constant_linear_velocity",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_custom_data",
        "parameters": [
          {
            "name": "layer_name",
            "type": "String"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_custom_data_by_layer_id",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_navigation_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "flip_h",
            "type": "bool"
          },
          {
            "name": "flip_v",
            "type": "bool"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "NavigationPolygon"
      },
      {
        "name": "get_occluder",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "flip_h",
            "type": "bool"
          },
          {
            "name": "flip_v",
            "type": "bool"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "OccluderPolygon2D"
      },
      {
        "name": "get_occluder_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          },
          {
            "name": "flip_h",
            "type": "bool"
          },
          {
            "name": "flip_v",
            "type": "bool"
          },
          {
            "name": "transpose",
            "type": "bool"
          }
        ],
        "return_type": "OccluderPolygon2D"
      },
      {
        "name": "get_occluder_polygons_count",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_terrain_peering_bit",
        "parameters": [
          {
            "name": "peering_bit",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has_custom_data",
        "parameters": [
          {
            "name": "layer_name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_collision_polygon_one_way",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_terrain_peering_bit",
        "parameters": [
          {
            "name": "peering_bit",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_collision_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_occluder_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_polygon_one_way",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          },
          {
            "name": "one_way",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_polygon_one_way_margin",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          },
          {
            "name": "one_way_margin",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_polygon_points",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          },
          {
            "name": "polygon",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collision_polygons_count",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygons_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constant_angular_velocity",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "velocity",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_constant_linear_velocity",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "velocity",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_data",
        "parameters": [
          {
            "name": "layer_name",
            "type": "String"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_data_by_layer_id",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "navigation_polygon",
            "type": "NavigationPolygon"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_occluder",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "occluder_polygon",
            "type": "OccluderPolygon2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_occluder_polygon",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygon_index",
            "type": "int"
          },
          {
            "name": "polygon",
            "type": "OccluderPolygon2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_occluder_polygons_count",
        "parameters": [
          {
            "name": "layer_id",
            "type": "int"
          },
          {
            "name": "polygons_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_terrain_peering_bit",
        "parameters": [
          {
            "name": "peering_bit",
            "type": "int"
          },
          {
            "name": "terrain",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TileData",
    "parent": "Object",
    "properties": [
      {
        "name": "flip_h",
        "type": "bool"
      },
      {
        "name": "flip_v",
        "type": "bool"
      },
      {
        "name": "material",
        "type": "Material"
      },
      {
        "name": "modulate",
        "type": "Color"
      },
      {
        "name": "probability",
        "type": "float"
      },
      {
        "name": "terrain",
        "type": "int"
      },
      {
        "name": "terrain_set",
        "type": "int"
      },
      {
        "name": "texture_origin",
        "type": "Vector2i"
      },
      {
        "name": "transpose",
        "type": "bool"
      },
      {
        "name": "y_sort_origin",
        "type": "int"
      },
      {
        "name": "z_index",
        "type": "int"
      }
    ]
  },
  "TileMap": {
    "methods": [
      {
        "name": "_tile_data_runtime_update",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "tile_data",
            "type": "TileData"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_use_tile_data_runtime_update",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "add_layer",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_cell",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fix_invalid_tiles",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "force_update",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_cell_alternative_tile",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cell_atlas_coords",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_cell_source_id",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cell_tile_data",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "TileData"
      },
      {
        "name": "get_coords_for_body_rid",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_layer_for_body_rid",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_layer_modulate",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_layer_name",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_layer_navigation_map",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_layer_y_sort_origin",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_layer_z_index",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_layers_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_navigation_map",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_neighbor_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "neighbor",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_pattern",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords_array",
            "type": "Vector2i[]"
          }
        ],
        "return_type": "TileMapPattern"
      },
      {
        "name": "get_surrounding_cells",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_cells",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_cells_by_id",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_rect",
        "parameters": [],
        "return_type": "Rect2i"
      },
      {
        "name": "is_cell_flipped_h",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_cell_flipped_v",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_cell_transposed",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "use_proxies",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_layer_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_layer_navigation_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_layer_y_sort_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "local_to_map",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "map_pattern",
        "parameters": [
          {
            "name": "position_in_tilemap",
            "type": "Vector2i"
          },
          {
            "name": "coords_in_pattern",
            "type": "Vector2i"
          },
          {
            "name": "pattern",
            "type": "TileMapPattern"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "map_to_local",
        "parameters": [
          {
            "name": "map_position",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "move_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "notify_runtime_tile_data_update",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_layer",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cells_terrain_connect",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "cells",
            "type": "Vector2i[]"
          },
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain",
            "type": "int"
          },
          {
            "name": "ignore_empty_terrains",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cells_terrain_path",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "path",
            "type": "Vector2i[]"
          },
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain",
            "type": "int"
          },
          {
            "name": "ignore_empty_terrains",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_modulate",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_name",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_navigation_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_navigation_map",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_y_sort_enabled",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "y_sort_enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_y_sort_origin",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "y_sort_origin",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_z_index",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "z_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_pattern",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "pattern",
            "type": "TileMapPattern"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_internals",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "TileMap",
    "parent": "Node2D",
    "properties": [
      {
        "name": "collision_animatable",
        "type": "bool"
      },
      {
        "name": "collision_visibility_mode",
        "type": "int"
      },
      {
        "name": "navigation_visibility_mode",
        "type": "int"
      },
      {
        "name": "rendering_quadrant_size",
        "type": "int"
      },
      {
        "name": "tile_set",
        "type": "TileSet"
      }
    ]
  },
  "TileMapLayer": {
    "methods": [
      {
        "name": "_tile_data_runtime_update",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "tile_data",
            "type": "TileData"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_update_cells",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i[]"
          },
          {
            "name": "forced_cleanup",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_use_tile_data_runtime_update",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "erase_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "fix_invalid_tiles",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_cell_alternative_tile",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cell_atlas_coords",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_cell_source_id",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cell_tile_data",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "TileData"
      },
      {
        "name": "get_coords_for_body_rid",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_navigation_map",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_neighbor_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "neighbor",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_pattern",
        "parameters": [
          {
            "name": "coords_array",
            "type": "Vector2i[]"
          }
        ],
        "return_type": "TileMapPattern"
      },
      {
        "name": "get_surrounding_cells",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_cells",
        "parameters": [],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_cells_by_id",
        "parameters": [
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "Vector2i[]"
      },
      {
        "name": "get_used_rect",
        "parameters": [],
        "return_type": "Rect2i"
      },
      {
        "name": "has_body_rid",
        "parameters": [
          {
            "name": "body",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_cell_flipped_h",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_cell_flipped_v",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_cell_transposed",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "local_to_map",
        "parameters": [
          {
            "name": "local_position",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "map_pattern",
        "parameters": [
          {
            "name": "position_in_tilemap",
            "type": "Vector2i"
          },
          {
            "name": "coords_in_pattern",
            "type": "Vector2i"
          },
          {
            "name": "pattern",
            "type": "TileMapPattern"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "map_to_local",
        "parameters": [
          {
            "name": "map_position",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "notify_runtime_tile_data_update",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cells_terrain_connect",
        "parameters": [
          {
            "name": "cells",
            "type": "Vector2i[]"
          },
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain",
            "type": "int"
          },
          {
            "name": "ignore_empty_terrains",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cells_terrain_path",
        "parameters": [
          {
            "name": "path",
            "type": "Vector2i[]"
          },
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain",
            "type": "int"
          },
          {
            "name": "ignore_empty_terrains",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_map",
        "parameters": [
          {
            "name": "map",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_pattern",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          },
          {
            "name": "pattern",
            "type": "TileMapPattern"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_internals",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "TileMapLayer",
    "parent": "Node2D",
    "properties": [
      {
        "name": "collision_enabled",
        "type": "bool"
      },
      {
        "name": "collision_visibility_mode",
        "type": "int"
      },
      {
        "name": "enabled",
        "type": "bool"
      },
      {
        "name": "navigation_enabled",
        "type": "bool"
      },
      {
        "name": "navigation_visibility_mode",
        "type": "int"
      },
      {
        "name": "occlusion_enabled",
        "type": "bool"
      },
      {
        "name": "rendering_quadrant_size",
        "type": "int"
      },
      {
        "name": "tile_map_data",
        "type": "PackedByteArray"
      },
      {
        "name": "tile_set",
        "type": "TileSet"
      },
      {
        "name": "use_kinematic_bodies",
        "type": "bool"
      },
      {
        "name": "x_draw_order_reversed",
        "type": "bool"
      },
      {
        "name": "y_sort_origin",
        "type": "int"
      }
    ]
  },
  "TileMapPattern": {
    "methods": [
      {
        "name": "get_cell_alternative_tile",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_cell_atlas_coords",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_cell_source_id",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_used_cells",
        "parameters": [],
        "return_type": "Vector2i[]"
      },
      {
        "name": "has_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "remove_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "update_size",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell",
        "parameters": [
          {
            "name": "coords",
            "type": "Vector2i"
          },
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_size",
        "parameters": [
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TileMapPattern",
    "parent": "Resource",
    "properties": []
  },
  "TileSet": {
    "methods": [
      {
        "name": "add_custom_data_layer",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_navigation_layer",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_occlusion_layer",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_pattern",
        "parameters": [
          {
            "name": "pattern",
            "type": "TileMapPattern"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_physics_layer",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_source",
        "parameters": [
          {
            "name": "source",
            "type": "TileSetSource"
          },
          {
            "name": "atlas_source_id_override",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_terrain",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_terrain_set",
        "parameters": [
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "cleanup_invalid_tile_proxies",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_tile_proxies",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_alternative_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "alternative_from",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_coords_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_custom_data_layer_by_name",
        "parameters": [
          {
            "name": "layer_name",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_custom_data_layer_name",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_custom_data_layer_type",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_custom_data_layers_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_navigation_layer_layer_value",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_navigation_layer_layers",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_navigation_layers_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_next_source_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_occlusion_layer_light_mask",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_occlusion_layer_sdf_collision",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_occlusion_layers_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_pattern",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "TileMapPattern"
      },
      {
        "name": "get_patterns_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_physics_layer_collision_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_physics_layer_collision_mask",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_physics_layer_collision_priority",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_physics_layer_physics_material",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "PhysicsMaterial"
      },
      {
        "name": "get_physics_layers_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_source",
        "parameters": [
          {
            "name": "source_id",
            "type": "int"
          }
        ],
        "return_type": "TileSetSource"
      },
      {
        "name": "get_source_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_source_id",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_source_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_terrain_color",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_terrain_name",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_terrain_set_mode",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_terrain_sets_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_terrains_count",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has_alternative_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "alternative_from",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_coords_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_custom_data_layer_by_name",
        "parameters": [
          {
            "name": "layer_name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_source",
        "parameters": [
          {
            "name": "source_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_source_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "map_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "alternative_from",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "move_custom_data_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_navigation_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_occlusion_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_physics_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_terrain",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_terrain_set",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "to_position",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_alternative_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "alternative_from",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_coords_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_custom_data_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_navigation_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_occlusion_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_pattern",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_physics_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_source",
        "parameters": [
          {
            "name": "source_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_source_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_terrain",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_terrain_set",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_alternative_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "alternative_from",
            "type": "int"
          },
          {
            "name": "source_to",
            "type": "int"
          },
          {
            "name": "coords_to",
            "type": "Vector2i"
          },
          {
            "name": "alternative_to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_coords_level_tile_proxy",
        "parameters": [
          {
            "name": "p_source_from",
            "type": "int"
          },
          {
            "name": "coords_from",
            "type": "Vector2i"
          },
          {
            "name": "source_to",
            "type": "int"
          },
          {
            "name": "coords_to",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_data_layer_name",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layer_name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_data_layer_type",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layer_type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_layer_value",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_navigation_layer_layers",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layers",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_occlusion_layer_light_mask",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "light_mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_occlusion_layer_sdf_collision",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "sdf_collision",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_layer_collision_layer",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_layer_collision_mask",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "mask",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_layer_collision_priority",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "priority",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_physics_layer_physics_material",
        "parameters": [
          {
            "name": "layer_index",
            "type": "int"
          },
          {
            "name": "physics_material",
            "type": "PhysicsMaterial"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_source_id",
        "parameters": [
          {
            "name": "source_id",
            "type": "int"
          },
          {
            "name": "new_source_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_source_level_tile_proxy",
        "parameters": [
          {
            "name": "source_from",
            "type": "int"
          },
          {
            "name": "source_to",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_terrain_color",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_terrain_name",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "terrain_index",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_terrain_set_mode",
        "parameters": [
          {
            "name": "terrain_set",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TileSet",
    "parent": "Resource",
    "properties": [
      {
        "name": "tile_layout",
        "type": "int"
      },
      {
        "name": "tile_offset_axis",
        "type": "int"
      },
      {
        "name": "tile_shape",
        "type": "int"
      },
      {
        "name": "tile_size",
        "type": "Vector2i"
      },
      {
        "name": "uv_clipping",
        "type": "bool"
      }
    ]
  },
  "TileSetAtlasSource": {
    "methods": [
      {
        "name": "clear_tiles_outside_texture",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_alternative_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_id_override",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "create_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_atlas_grid_size",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_next_alternative_tile_id",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_runtime_texture",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "get_runtime_tile_texture_region",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frame",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "get_tile_animation_columns",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tile_animation_frame_duration",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frame_index",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_tile_animation_frames_count",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tile_animation_mode",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tile_animation_separation",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_tile_animation_speed",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_tile_animation_total_duration",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_tile_at_coords",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_tile_data",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "TileData"
      },
      {
        "name": "get_tile_size_in_atlas",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_tile_texture_region",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frame",
            "type": "int"
          }
        ],
        "return_type": "Rect2i"
      },
      {
        "name": "get_tiles_to_be_removed_on_change",
        "parameters": [
          {
            "name": "texture",
            "type": "Texture2D"
          },
          {
            "name": "margins",
            "type": "Vector2i"
          },
          {
            "name": "separation",
            "type": "Vector2i"
          },
          {
            "name": "texture_region_size",
            "type": "Vector2i"
          }
        ],
        "return_type": "PackedVector2Array"
      },
      {
        "name": "has_room_for_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "size",
            "type": "Vector2i"
          },
          {
            "name": "animation_columns",
            "type": "int"
          },
          {
            "name": "animation_separation",
            "type": "Vector2i"
          },
          {
            "name": "frames_count",
            "type": "int"
          },
          {
            "name": "ignored_tile",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_tiles_outside_texture",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_tile_in_atlas",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "new_atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "new_size",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_alternative_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_alternative_tile_id",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          },
          {
            "name": "new_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_columns",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frame_columns",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_frame_duration",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frame_index",
            "type": "int"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_frames_count",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "frames_count",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_mode",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_separation",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "separation",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tile_animation_speed",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "speed",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TileSetAtlasSource",
    "parent": "TileSetSource",
    "properties": [
      {
        "name": "margins",
        "type": "Vector2i"
      },
      {
        "name": "separation",
        "type": "Vector2i"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_region_size",
        "type": "Vector2i"
      },
      {
        "name": "use_texture_padding",
        "type": "bool"
      }
    ]
  },
  "TileSetScenesCollectionSource": {
    "methods": [
      {
        "name": "create_scene_tile",
        "parameters": [
          {
            "name": "packed_scene",
            "type": "PackedScene"
          },
          {
            "name": "id_override",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_next_scene_tile_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_scene_tile_display_placeholder",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_scene_tile_id",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_scene_tile_scene",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "PackedScene"
      },
      {
        "name": "get_scene_tiles_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_scene_tile_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_scene_tile",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_scene_tile_display_placeholder",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "display_placeholder",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_scene_tile_id",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "new_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_scene_tile_scene",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "packed_scene",
            "type": "PackedScene"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "TileSetScenesCollectionSource",
    "parent": "TileSetSource",
    "properties": []
  },
  "TileSetSource": {
    "methods": [
      {
        "name": "get_alternative_tile_id",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_alternative_tiles_count",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tile_id",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "get_tiles_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_alternative_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          },
          {
            "name": "alternative_tile",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_tile",
        "parameters": [
          {
            "name": "atlas_coords",
            "type": "Vector2i"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "TileSetSource",
    "parent": "Resource",
    "properties": []
  },
  "Time": {
    "methods": [
      {
        "name": "get_date_dict_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_date_dict_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_date_string_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_date_string_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_datetime_dict_from_datetime_string",
        "parameters": [
          {
            "name": "datetime",
            "type": "String"
          },
          {
            "name": "weekday",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_datetime_dict_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_datetime_dict_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_datetime_string_from_datetime_dict",
        "parameters": [
          {
            "name": "datetime",
            "type": "Dictionary"
          },
          {
            "name": "use_space",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_datetime_string_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          },
          {
            "name": "use_space",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_datetime_string_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          },
          {
            "name": "use_space",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_offset_string_from_offset_minutes",
        "parameters": [
          {
            "name": "offset_minutes",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_ticks_msec",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_ticks_usec",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_time_dict_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_time_dict_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_time_string_from_system",
        "parameters": [
          {
            "name": "utc",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_time_string_from_unix_time",
        "parameters": [
          {
            "name": "unix_time_val",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_time_zone_from_system",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_unix_time_from_datetime_dict",
        "parameters": [
          {
            "name": "datetime",
            "type": "Dictionary"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_unix_time_from_datetime_string",
        "parameters": [
          {
            "name": "datetime",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_unix_time_from_system",
        "parameters": [],
        "return_type": "float"
      }
    ],
    "name": "Time",
    "parent": "Object",
    "properties": []
  },
  "Timer": {
    "methods": [
      {
        "name": "is_stopped",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "start",
        "parameters": [
          {
            "name": "time_sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "Timer",
    "parent": "Node",
    "properties": [
      {
        "name": "autostart",
        "type": "bool"
      },
      {
        "name": "ignore_time_scale",
        "type": "bool"
      },
      {
        "name": "one_shot",
        "type": "bool"
      },
      {
        "name": "paused",
        "type": "bool"
      },
      {
        "name": "process_callback",
        "type": "int"
      },
      {
        "name": "time_left",
        "type": "float"
      },
      {
        "name": "wait_time",
        "type": "float"
      }
    ]
  },
  "TorusMesh": {
    "methods": [],
    "name": "TorusMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "inner_radius",
        "type": "float"
      },
      {
        "name": "outer_radius",
        "type": "float"
      },
      {
        "name": "ring_segments",
        "type": "int"
      },
      {
        "name": "rings",
        "type": "int"
      }
    ]
  },
  "TouchScreenButton": {
    "methods": [
      {
        "name": "is_pressed",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "TouchScreenButton",
    "parent": "Node2D",
    "properties": [
      {
        "name": "action",
        "type": "String"
      },
      {
        "name": "bitmask",
        "type": "BitMap"
      },
      {
        "name": "passby_press",
        "type": "bool"
      },
      {
        "name": "shape",
        "type": "Shape2D"
      },
      {
        "name": "shape_centered",
        "type": "bool"
      },
      {
        "name": "shape_visible",
        "type": "bool"
      },
      {
        "name": "texture_normal",
        "type": "Texture2D"
      },
      {
        "name": "texture_pressed",
        "type": "Texture2D"
      },
      {
        "name": "visibility_mode",
        "type": "int"
      }
    ]
  },
  "Transform2D": {
    "methods": [
      {
        "name": "affine_inverse",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "basis_xform",
        "parameters": [
          {
            "name": "v",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "basis_xform_inv",
        "parameters": [
          {
            "name": "v",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "determinant",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_origin",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_rotation",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_scale",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_skew",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "interpolate_with",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform2D"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "is_conformal",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform2D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "looking_at",
        "parameters": [
          {
            "name": "target",
            "type": "Vector2"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "orthonormalized",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "rotated",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "rotated_local",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "scaled",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector2"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "scaled_local",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector2"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "translated",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "Transform2D"
      },
      {
        "name": "translated_local",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector2"
          }
        ],
        "return_type": "Transform2D"
      }
    ],
    "name": "Transform2D",
    "parent": null,
    "properties": [
      {
        "name": "origin",
        "type": "Vector2"
      },
      {
        "name": "x",
        "type": "Vector2"
      },
      {
        "name": "y",
        "type": "Vector2"
      }
    ]
  },
  "Transform3D": {
    "methods": [
      {
        "name": "affine_inverse",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "interpolate_with",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform3D"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "xform",
            "type": "Transform3D"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "looking_at",
        "parameters": [
          {
            "name": "target",
            "type": "Vector3"
          },
          {
            "name": "up",
            "type": "Vector3"
          },
          {
            "name": "use_model_front",
            "type": "bool"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "orthonormalized",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "rotated",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "rotated_local",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "scaled",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "scaled_local",
        "parameters": [
          {
            "name": "scale",
            "type": "Vector3"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "translated",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "translated_local",
        "parameters": [
          {
            "name": "offset",
            "type": "Vector3"
          }
        ],
        "return_type": "Transform3D"
      }
    ],
    "name": "Transform3D",
    "parent": null,
    "properties": [
      {
        "name": "basis",
        "type": "Basis"
      },
      {
        "name": "origin",
        "type": "Vector3"
      }
    ]
  },
  "Translation": {
    "methods": [
      {
        "name": "_get_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "_get_plural_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "src_plural_message",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "add_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "xlated_message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_plural_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "xlated_messages",
            "type": "PackedStringArray"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_message_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_message_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_plural_message",
        "parameters": [
          {
            "name": "src_message",
            "type": "StringName"
          },
          {
            "name": "src_plural_message",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "get_translated_message_list",
        "parameters": [],
        "return_type": "PackedStringArray"
      }
    ],
    "name": "Translation",
    "parent": "Resource",
    "properties": [
      {
        "name": "locale",
        "type": "String"
      }
    ]
  },
  "TranslationDomain": {
    "methods": [
      {
        "name": "add_translation",
        "parameters": [
          {
            "name": "translation",
            "type": "Translation"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_translation_object",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "Translation"
      },
      {
        "name": "pseudolocalize",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "remove_translation",
        "parameters": [
          {
            "name": "translation",
            "type": "Translation"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "translate",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "translate_plural",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "message_plural",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      }
    ],
    "name": "TranslationDomain",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "pseudolocalization_accents_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_double_vowels_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_expansion_ratio",
        "type": "float"
      },
      {
        "name": "pseudolocalization_fake_bidi_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_override_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_prefix",
        "type": "String"
      },
      {
        "name": "pseudolocalization_skip_placeholders_enabled",
        "type": "bool"
      },
      {
        "name": "pseudolocalization_suffix",
        "type": "String"
      }
    ]
  },
  "TranslationServer": {
    "methods": [
      {
        "name": "add_translation",
        "parameters": [
          {
            "name": "translation",
            "type": "Translation"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "compare_locales",
        "parameters": [
          {
            "name": "locale_a",
            "type": "String"
          },
          {
            "name": "locale_b",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_all_countries",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_all_languages",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_all_scripts",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_country_name",
        "parameters": [
          {
            "name": "country",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_language_name",
        "parameters": [
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_loaded_locales",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "get_locale",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_locale_name",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_or_add_domain",
        "parameters": [
          {
            "name": "domain",
            "type": "StringName"
          }
        ],
        "return_type": "TranslationDomain"
      },
      {
        "name": "get_script_name",
        "parameters": [
          {
            "name": "script",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tool_locale",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_translation_object",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "Translation"
      },
      {
        "name": "has_domain",
        "parameters": [
          {
            "name": "domain",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "pseudolocalize",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "reload_pseudolocalization",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "remove_domain",
        "parameters": [
          {
            "name": "domain",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_translation",
        "parameters": [
          {
            "name": "translation",
            "type": "Translation"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_locale",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "standardize_locale",
        "parameters": [
          {
            "name": "locale",
            "type": "String"
          },
          {
            "name": "add_defaults",
            "type": "bool"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "translate",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      },
      {
        "name": "translate_plural",
        "parameters": [
          {
            "name": "message",
            "type": "StringName"
          },
          {
            "name": "plural_message",
            "type": "StringName"
          },
          {
            "name": "n",
            "type": "int"
          },
          {
            "name": "context",
            "type": "StringName"
          }
        ],
        "return_type": "StringName"
      }
    ],
    "name": "TranslationServer",
    "parent": "Object",
    "properties": [
      {
        "name": "pseudolocalization_enabled",
        "type": "bool"
      }
    ]
  },
  "Tree": {
    "methods": [
      {
        "name": "clear",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "create_item",
        "parameters": [
          {
            "name": "parent",
            "type": "TreeItem"
          },
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "deselect_all",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "edit_selected",
        "parameters": [
          {
            "name": "force_edit",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "ensure_cursor_is_visible",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_button_id_at_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_column_at_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_column_expand_ratio",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_column_title",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_column_title_alignment",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_column_title_direction",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_column_title_language",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_column_width",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_custom_popup_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "get_drop_section_at_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_edited",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_edited_column",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_item_area_rect",
        "parameters": [
          {
            "name": "item",
            "type": "TreeItem"
          },
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_item_at_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_next_selected",
        "parameters": [
          {
            "name": "from",
            "type": "TreeItem"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_pressed_button",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_root",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_scroll",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_selected",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_selected_column",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_column_clipping_content",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_column_expanding",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "scroll_to_item",
        "parameters": [
          {
            "name": "item",
            "type": "TreeItem"
          },
          {
            "name": "center_on_item",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_clip_content",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_custom_minimum_width",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "min_width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_expand",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "expand",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_expand_ratio",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "ratio",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_title",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "title",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_title_alignment",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "title_alignment",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_title_direction",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_column_title_language",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selected",
        "parameters": [
          {
            "name": "item",
            "type": "TreeItem"
          },
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Tree",
    "parent": "Control",
    "properties": [
      {
        "name": "allow_reselect",
        "type": "bool"
      },
      {
        "name": "allow_rmb_select",
        "type": "bool"
      },
      {
        "name": "allow_search",
        "type": "bool"
      },
      {
        "name": "auto_tooltip",
        "type": "bool"
      },
      {
        "name": "clip_contents",
        "type": "bool"
      },
      {
        "name": "column_titles_visible",
        "type": "bool"
      },
      {
        "name": "columns",
        "type": "int"
      },
      {
        "name": "drop_mode_flags",
        "type": "int"
      },
      {
        "name": "enable_recursive_folding",
        "type": "bool"
      },
      {
        "name": "focus_mode",
        "type": "int"
      },
      {
        "name": "hide_folding",
        "type": "bool"
      },
      {
        "name": "hide_root",
        "type": "bool"
      },
      {
        "name": "scroll_horizontal_enabled",
        "type": "bool"
      },
      {
        "name": "scroll_vertical_enabled",
        "type": "bool"
      },
      {
        "name": "select_mode",
        "type": "int"
      }
    ]
  },
  "TreeItem": {
    "methods": [
      {
        "name": "add_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button",
            "type": "Texture2D"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          },
          {
            "name": "tooltip_text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_child",
        "parameters": [
          {
            "name": "child",
            "type": "TreeItem"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "call_recursive",
        "parameters": [
          {
            "name": "method",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_buttons",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_custom_bg_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_custom_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_child",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "deselect",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "erase_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_auto_translate_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_autowrap_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_button_by_id",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_button_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_button_count",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_button_id",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_button_tooltip_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_cell_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_child",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_child_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_children",
        "parameters": [],
        "return_type": "TreeItem[]"
      },
      {
        "name": "get_custom_bg_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_custom_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_custom_draw_callback",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Callable"
      },
      {
        "name": "get_custom_font",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Font"
      },
      {
        "name": "get_custom_font_size",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_expand_right",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_first_child",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_icon",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_icon_max_width",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_icon_modulate",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_icon_overlay",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_icon_region",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Rect2"
      },
      {
        "name": "get_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_language",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_metadata",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_next",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_next_in_tree",
        "parameters": [
          {
            "name": "wrap",
            "type": "bool"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_next_visible",
        "parameters": [
          {
            "name": "wrap",
            "type": "bool"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_parent",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_prev",
        "parameters": [],
        "return_type": "TreeItem"
      },
      {
        "name": "get_prev_in_tree",
        "parameters": [
          {
            "name": "wrap",
            "type": "bool"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_prev_visible",
        "parameters": [
          {
            "name": "wrap",
            "type": "bool"
          }
        ],
        "return_type": "TreeItem"
      },
      {
        "name": "get_range",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_range_config",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "get_structured_text_bidi_override",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_structured_text_bidi_override_options",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "Array"
      },
      {
        "name": "get_suffix",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_text_alignment",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_text_direction",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_text_overrun_behavior",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_tooltip_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_tree",
        "parameters": [],
        "return_type": "Tree"
      },
      {
        "name": "is_any_collapsed",
        "parameters": [
          {
            "name": "only_visible",
            "type": "bool"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_button_disabled",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_checked",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_custom_set_as_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_edit_multiline",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_editable",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_indeterminate",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_selectable",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_selected",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_visible_in_tree",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_after",
        "parameters": [
          {
            "name": "item",
            "type": "TreeItem"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "move_before",
        "parameters": [
          {
            "name": "item",
            "type": "TreeItem"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "propagate_check",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "emit_signal",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_child",
        "parameters": [
          {
            "name": "child",
            "type": "TreeItem"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "select",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_auto_translate_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_autowrap_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "autowrap_mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          },
          {
            "name": "button",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_button_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_button_disabled",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          },
          {
            "name": "disabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_button_tooltip_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "button_index",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_cell_mode",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_checked",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "checked",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_collapsed_recursive",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_as_button",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_bg_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          },
          {
            "name": "just_outline",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_color",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_draw",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "callback",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_draw_callback",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_font",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "font",
            "type": "Font"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_custom_font_size",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_edit_multiline",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "multiline",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_editable",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_expand_right",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon_max_width",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "width",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon_modulate",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "modulate",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon_overlay",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_icon_region",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "region",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_indeterminate",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "indeterminate",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_language",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "language",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_metadata",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "meta",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_range",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_range_config",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          },
          {
            "name": "step",
            "type": "float"
          },
          {
            "name": "expr",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_selectable",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "selectable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_structured_text_bidi_override",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "parser",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_structured_text_bidi_override_options",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "args",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_suffix",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_text_alignment",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "text_alignment",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_text_direction",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_text_overrun_behavior",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "overrun_behavior",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_tooltip_text",
        "parameters": [
          {
            "name": "column",
            "type": "int"
          },
          {
            "name": "tooltip",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "uncollapse_tree",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "TreeItem",
    "parent": "Object",
    "properties": [
      {
        "name": "collapsed",
        "type": "bool"
      },
      {
        "name": "custom_minimum_height",
        "type": "int"
      },
      {
        "name": "disable_folding",
        "type": "bool"
      },
      {
        "name": "visible",
        "type": "bool"
      }
    ]
  },
  "TriangleMesh": {
    "methods": [],
    "name": "TriangleMesh",
    "parent": "RefCounted",
    "properties": []
  },
  "TubeTrailMesh": {
    "methods": [],
    "name": "TubeTrailMesh",
    "parent": "PrimitiveMesh",
    "properties": [
      {
        "name": "cap_bottom",
        "type": "bool"
      },
      {
        "name": "cap_top",
        "type": "bool"
      },
      {
        "name": "curve",
        "type": "Curve"
      },
      {
        "name": "radial_steps",
        "type": "int"
      },
      {
        "name": "radius",
        "type": "float"
      },
      {
        "name": "section_length",
        "type": "float"
      },
      {
        "name": "section_rings",
        "type": "int"
      },
      {
        "name": "sections",
        "type": "int"
      }
    ]
  },
  "Tween": {
    "methods": [
      {
        "name": "bind_node",
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "chain",
        "parameters": [],
        "return_type": "Tween"
      },
      {
        "name": "custom_step",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_loops_left",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_total_elapsed_time",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "interpolate_value",
        "parameters": [
          {
            "name": "initial_value",
            "type": "Variant"
          },
          {
            "name": "delta_value",
            "type": "Variant"
          },
          {
            "name": "elapsed_time",
            "type": "float"
          },
          {
            "name": "duration",
            "type": "float"
          },
          {
            "name": "trans_type",
            "type": "int"
          },
          {
            "name": "ease_type",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "is_running",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_valid",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "kill",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "parallel",
        "parameters": [],
        "return_type": "Tween"
      },
      {
        "name": "pause",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "play",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_ease",
        "parameters": [
          {
            "name": "ease",
            "type": "int"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_ignore_time_scale",
        "parameters": [
          {
            "name": "ignore",
            "type": "bool"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_loops",
        "parameters": [
          {
            "name": "loops",
            "type": "int"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_parallel",
        "parameters": [
          {
            "name": "parallel",
            "type": "bool"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_pause_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_process_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_speed_scale",
        "parameters": [
          {
            "name": "speed",
            "type": "float"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "set_trans",
        "parameters": [
          {
            "name": "trans",
            "type": "int"
          }
        ],
        "return_type": "Tween"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "tween_callback",
        "parameters": [
          {
            "name": "callback",
            "type": "Callable"
          }
        ],
        "return_type": "CallbackTweener"
      },
      {
        "name": "tween_interval",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "IntervalTweener"
      },
      {
        "name": "tween_method",
        "parameters": [
          {
            "name": "method",
            "type": "Callable"
          },
          {
            "name": "from",
            "type": "Variant"
          },
          {
            "name": "to",
            "type": "Variant"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "MethodTweener"
      },
      {
        "name": "tween_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "NodePath"
          },
          {
            "name": "final_val",
            "type": "Variant"
          },
          {
            "name": "duration",
            "type": "float"
          }
        ],
        "return_type": "PropertyTweener"
      },
      {
        "name": "tween_subtween",
        "parameters": [
          {
            "name": "subtween",
            "type": "Tween"
          }
        ],
        "return_type": "SubtweenTweener"
      }
    ],
    "name": "Tween",
    "parent": "RefCounted",
    "properties": []
  },
  "Tweener": {
    "methods": [],
    "name": "Tweener",
    "parent": "RefCounted",
    "properties": []
  },
  "UDPServer": {
    "methods": [
      {
        "name": "get_local_port",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "is_connection_available",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_listening",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "listen",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "bind_address",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "poll",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "take_connection",
        "parameters": [],
        "return_type": "PacketPeerUDP"
      }
    ],
    "name": "UDPServer",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "max_pending_connections",
        "type": "int"
      }
    ]
  },
  "UndoRedo": {
    "methods": [
      {
        "name": "add_do_method",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_do_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_do_reference",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_method",
        "parameters": [
          {
            "name": "callable",
            "type": "Callable"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_property",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          },
          {
            "name": "property",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_undo_reference",
        "parameters": [
          {
            "name": "object",
            "type": "Object"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_history",
        "parameters": [
          {
            "name": "increase_version",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "commit_action",
        "parameters": [
          {
            "name": "execute",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "create_action",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "merge_mode",
            "type": "int"
          },
          {
            "name": "backward_undo_ops",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "end_force_keep_in_merge_ends",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_action_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_current_action",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_current_action_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_history_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_version",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_redo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_undo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_committing_action",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "redo",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "start_force_keep_in_merge_ends",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "undo",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "UndoRedo",
    "parent": "Object",
    "properties": [
      {
        "name": "max_steps",
        "type": "int"
      }
    ]
  },
  "UniformSetCacheRD": {
    "methods": [
      {
        "name": "get_cache",
        "parameters": [
          {
            "name": "shader",
            "type": "RID"
          },
          {
            "name": "set",
            "type": "int"
          },
          {
            "name": "uniforms",
            "type": "RDUniform[]"
          }
        ],
        "return_type": "RID"
      }
    ],
    "name": "UniformSetCacheRD",
    "parent": "Object",
    "properties": []
  },
  "VBoxContainer": {
    "methods": [],
    "name": "VBoxContainer",
    "parent": "BoxContainer",
    "properties": []
  },
  "VFlowContainer": {
    "methods": [],
    "name": "VFlowContainer",
    "parent": "FlowContainer",
    "properties": []
  },
  "VScrollBar": {
    "methods": [],
    "name": "VScrollBar",
    "parent": "ScrollBar",
    "properties": [
      {
        "name": "size_flags_horizontal",
        "type": "int"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      }
    ]
  },
  "VSeparator": {
    "methods": [],
    "name": "VSeparator",
    "parent": "Separator",
    "properties": []
  },
  "VSlider": {
    "methods": [],
    "name": "VSlider",
    "parent": "Slider",
    "properties": [
      {
        "name": "size_flags_horizontal",
        "type": "int"
      },
      {
        "name": "size_flags_vertical",
        "type": "int"
      }
    ]
  },
  "VSplitContainer": {
    "methods": [],
    "name": "VSplitContainer",
    "parent": "SplitContainer",
    "properties": []
  },
  "Variant": {
    "methods": [],
    "name": "Variant",
    "parent": null,
    "properties": []
  },
  "Vector2": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "angle",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "angle_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "angle_to_point",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "aspect",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "bezier_derivative",
        "parameters": [
          {
            "name": "control_1",
            "type": "Vector2"
          },
          {
            "name": "control_2",
            "type": "Vector2"
          },
          {
            "name": "end",
            "type": "Vector2"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "bezier_interpolate",
        "parameters": [
          {
            "name": "control_1",
            "type": "Vector2"
          },
          {
            "name": "control_2",
            "type": "Vector2"
          },
          {
            "name": "end",
            "type": "Vector2"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "bounce",
        "parameters": [
          {
            "name": "n",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "ceil",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector2"
          },
          {
            "name": "max",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "clampf",
        "parameters": [
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "cross",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "cubic_interpolate",
        "parameters": [
          {
            "name": "b",
            "type": "Vector2"
          },
          {
            "name": "pre_a",
            "type": "Vector2"
          },
          {
            "name": "post_b",
            "type": "Vector2"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "cubic_interpolate_in_time",
        "parameters": [
          {
            "name": "b",
            "type": "Vector2"
          },
          {
            "name": "pre_a",
            "type": "Vector2"
          },
          {
            "name": "post_b",
            "type": "Vector2"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "b_t",
            "type": "float"
          },
          {
            "name": "pre_a_t",
            "type": "float"
          },
          {
            "name": "post_b_t",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "direction_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "dot",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "floor",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "from_angle",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_normalized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_zero_approx",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "lerp",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "limit_length",
        "parameters": [
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "minf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "move_toward",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "normalized",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "orthogonal",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "posmod",
        "parameters": [
          {
            "name": "mod",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "posmodv",
        "parameters": [
          {
            "name": "modv",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "project",
        "parameters": [
          {
            "name": "b",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "reflect",
        "parameters": [
          {
            "name": "line",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "rotated",
        "parameters": [
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "round",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "slerp",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "slide",
        "parameters": [
          {
            "name": "n",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "snappedf",
        "parameters": [
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "Vector2"
      }
    ],
    "name": "Vector2",
    "parent": null,
    "properties": [
      {
        "name": "x",
        "type": "float"
      },
      {
        "name": "y",
        "type": "float"
      }
    ]
  },
  "Vector2i": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "aspect",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector2i"
          },
          {
            "name": "max",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "clampi",
        "parameters": [
          {
            "name": "min",
            "type": "int"
          },
          {
            "name": "max",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector2i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxi",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "mini",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector2i"
          }
        ],
        "return_type": "Vector2i"
      },
      {
        "name": "snappedi",
        "parameters": [
          {
            "name": "step",
            "type": "int"
          }
        ],
        "return_type": "Vector2i"
      }
    ],
    "name": "Vector2i",
    "parent": null,
    "properties": [
      {
        "name": "x",
        "type": "int"
      },
      {
        "name": "y",
        "type": "int"
      }
    ]
  },
  "Vector3": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "angle_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "bezier_derivative",
        "parameters": [
          {
            "name": "control_1",
            "type": "Vector3"
          },
          {
            "name": "control_2",
            "type": "Vector3"
          },
          {
            "name": "end",
            "type": "Vector3"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "bezier_interpolate",
        "parameters": [
          {
            "name": "control_1",
            "type": "Vector3"
          },
          {
            "name": "control_2",
            "type": "Vector3"
          },
          {
            "name": "end",
            "type": "Vector3"
          },
          {
            "name": "t",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "bounce",
        "parameters": [
          {
            "name": "n",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "ceil",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector3"
          },
          {
            "name": "max",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "clampf",
        "parameters": [
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "cross",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "cubic_interpolate",
        "parameters": [
          {
            "name": "b",
            "type": "Vector3"
          },
          {
            "name": "pre_a",
            "type": "Vector3"
          },
          {
            "name": "post_b",
            "type": "Vector3"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "cubic_interpolate_in_time",
        "parameters": [
          {
            "name": "b",
            "type": "Vector3"
          },
          {
            "name": "pre_a",
            "type": "Vector3"
          },
          {
            "name": "post_b",
            "type": "Vector3"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "b_t",
            "type": "float"
          },
          {
            "name": "pre_a_t",
            "type": "float"
          },
          {
            "name": "post_b_t",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "direction_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "dot",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "floor",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_normalized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_zero_approx",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "lerp",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "limit_length",
        "parameters": [
          {
            "name": "length",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "minf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "move_toward",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "normalized",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "octahedron_decode",
        "parameters": [
          {
            "name": "uv",
            "type": "Vector2"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "octahedron_encode",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "outer",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3"
          }
        ],
        "return_type": "Basis"
      },
      {
        "name": "posmod",
        "parameters": [
          {
            "name": "mod",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "posmodv",
        "parameters": [
          {
            "name": "modv",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "project",
        "parameters": [
          {
            "name": "b",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "reflect",
        "parameters": [
          {
            "name": "n",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "rotated",
        "parameters": [
          {
            "name": "axis",
            "type": "Vector3"
          },
          {
            "name": "angle",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "round",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "signed_angle_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "axis",
            "type": "Vector3"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "slerp",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "slide",
        "parameters": [
          {
            "name": "n",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector3"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "snappedf",
        "parameters": [
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "Vector3"
      }
    ],
    "name": "Vector3",
    "parent": null,
    "properties": [
      {
        "name": "x",
        "type": "float"
      },
      {
        "name": "y",
        "type": "float"
      },
      {
        "name": "z",
        "type": "float"
      }
    ]
  },
  "Vector3i": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector3i"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector3i"
          },
          {
            "name": "max",
            "type": "Vector3i"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "clampi",
        "parameters": [
          {
            "name": "min",
            "type": "int"
          },
          {
            "name": "max",
            "type": "int"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector3i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3i"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxi",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector3i"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "mini",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector3i"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector3i"
          }
        ],
        "return_type": "Vector3i"
      },
      {
        "name": "snappedi",
        "parameters": [
          {
            "name": "step",
            "type": "int"
          }
        ],
        "return_type": "Vector3i"
      }
    ],
    "name": "Vector3i",
    "parent": null,
    "properties": [
      {
        "name": "x",
        "type": "int"
      },
      {
        "name": "y",
        "type": "int"
      },
      {
        "name": "z",
        "type": "int"
      }
    ]
  },
  "Vector4": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "ceil",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector4"
          },
          {
            "name": "max",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "clampf",
        "parameters": [
          {
            "name": "min",
            "type": "float"
          },
          {
            "name": "max",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "cubic_interpolate",
        "parameters": [
          {
            "name": "b",
            "type": "Vector4"
          },
          {
            "name": "pre_a",
            "type": "Vector4"
          },
          {
            "name": "post_b",
            "type": "Vector4"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "cubic_interpolate_in_time",
        "parameters": [
          {
            "name": "b",
            "type": "Vector4"
          },
          {
            "name": "pre_a",
            "type": "Vector4"
          },
          {
            "name": "post_b",
            "type": "Vector4"
          },
          {
            "name": "weight",
            "type": "float"
          },
          {
            "name": "b_t",
            "type": "float"
          },
          {
            "name": "pre_a_t",
            "type": "float"
          },
          {
            "name": "post_b_t",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "direction_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "dot",
        "parameters": [
          {
            "name": "with",
            "type": "Vector4"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "floor",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "inverse",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "is_equal_approx",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_finite",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_normalized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_zero_approx",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "lerp",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "minf",
        "parameters": [
          {
            "name": "with",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "normalized",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "posmod",
        "parameters": [
          {
            "name": "mod",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "posmodv",
        "parameters": [
          {
            "name": "modv",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "round",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector4"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector4"
          }
        ],
        "return_type": "Vector4"
      },
      {
        "name": "snappedf",
        "parameters": [
          {
            "name": "step",
            "type": "float"
          }
        ],
        "return_type": "Vector4"
      }
    ],
    "name": "Vector4",
    "parent": null,
    "properties": [
      {
        "name": "w",
        "type": "float"
      },
      {
        "name": "x",
        "type": "float"
      },
      {
        "name": "y",
        "type": "float"
      },
      {
        "name": "z",
        "type": "float"
      }
    ]
  },
  "Vector4i": {
    "methods": [
      {
        "name": "abs",
        "parameters": [],
        "return_type": "Vector4i"
      },
      {
        "name": "clamp",
        "parameters": [
          {
            "name": "min",
            "type": "Vector4i"
          },
          {
            "name": "max",
            "type": "Vector4i"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "clampi",
        "parameters": [
          {
            "name": "min",
            "type": "int"
          },
          {
            "name": "max",
            "type": "int"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "distance_squared_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4i"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "distance_to",
        "parameters": [
          {
            "name": "to",
            "type": "Vector4i"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "length_squared",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "max",
        "parameters": [
          {
            "name": "with",
            "type": "Vector4i"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "max_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "maxi",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "min",
        "parameters": [
          {
            "name": "with",
            "type": "Vector4i"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "min_axis_index",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "mini",
        "parameters": [
          {
            "name": "with",
            "type": "int"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "sign",
        "parameters": [],
        "return_type": "Vector4i"
      },
      {
        "name": "snapped",
        "parameters": [
          {
            "name": "step",
            "type": "Vector4i"
          }
        ],
        "return_type": "Vector4i"
      },
      {
        "name": "snappedi",
        "parameters": [
          {
            "name": "step",
            "type": "int"
          }
        ],
        "return_type": "Vector4i"
      }
    ],
    "name": "Vector4i",
    "parent": null,
    "properties": [
      {
        "name": "w",
        "type": "int"
      },
      {
        "name": "x",
        "type": "int"
      },
      {
        "name": "y",
        "type": "int"
      },
      {
        "name": "z",
        "type": "int"
      }
    ]
  },
  "VehicleBody3D": {
    "methods": [],
    "name": "VehicleBody3D",
    "parent": "RigidBody3D",
    "properties": [
      {
        "name": "brake",
        "type": "float"
      },
      {
        "name": "engine_force",
        "type": "float"
      },
      {
        "name": "mass",
        "type": "float"
      },
      {
        "name": "steering",
        "type": "float"
      }
    ]
  },
  "VehicleWheel3D": {
    "methods": [
      {
        "name": "get_contact_body",
        "parameters": [],
        "return_type": "Node3D"
      },
      {
        "name": "get_contact_normal",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_contact_point",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_rpm",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_skidinfo",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "is_in_contact",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "VehicleWheel3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "brake",
        "type": "float"
      },
      {
        "name": "damping_compression",
        "type": "float"
      },
      {
        "name": "damping_relaxation",
        "type": "float"
      },
      {
        "name": "engine_force",
        "type": "float"
      },
      {
        "name": "steering",
        "type": "float"
      },
      {
        "name": "suspension_max_force",
        "type": "float"
      },
      {
        "name": "suspension_stiffness",
        "type": "float"
      },
      {
        "name": "suspension_travel",
        "type": "float"
      },
      {
        "name": "use_as_steering",
        "type": "bool"
      },
      {
        "name": "use_as_traction",
        "type": "bool"
      },
      {
        "name": "wheel_friction_slip",
        "type": "float"
      },
      {
        "name": "wheel_radius",
        "type": "float"
      },
      {
        "name": "wheel_rest_length",
        "type": "float"
      },
      {
        "name": "wheel_roll_influence",
        "type": "float"
      }
    ]
  },
  "VideoStream": {
    "methods": [
      {
        "name": "_instantiate_playback",
        "parameters": [],
        "return_type": "VideoStreamPlayback"
      }
    ],
    "name": "VideoStream",
    "parent": "Resource",
    "properties": [
      {
        "name": "file",
        "type": "String"
      }
    ]
  },
  "VideoStreamPlayback": {
    "methods": [
      {
        "name": "_get_channels",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_mix_rate",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_playback_position",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "_get_texture",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "_is_paused",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_play",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_seek",
        "parameters": [
          {
            "name": "time",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_audio_track",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_paused",
        "parameters": [
          {
            "name": "paused",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_stop",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_update",
        "parameters": [
          {
            "name": "delta",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "mix_audio",
        "parameters": [
          {
            "name": "num_frames",
            "type": "int"
          },
          {
            "name": "buffer",
            "type": "PackedFloat32Array"
          },
          {
            "name": "offset",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "VideoStreamPlayback",
    "parent": "Resource",
    "properties": []
  },
  "VideoStreamPlayer": {
    "methods": [
      {
        "name": "get_stream_length",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_stream_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_video_texture",
        "parameters": [],
        "return_type": "Texture2D"
      },
      {
        "name": "is_playing",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "play",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "stop",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "VideoStreamPlayer",
    "parent": "Control",
    "properties": [
      {
        "name": "audio_track",
        "type": "int"
      },
      {
        "name": "autoplay",
        "type": "bool"
      },
      {
        "name": "buffering_msec",
        "type": "int"
      },
      {
        "name": "bus",
        "type": "StringName"
      },
      {
        "name": "expand",
        "type": "bool"
      },
      {
        "name": "loop",
        "type": "bool"
      },
      {
        "name": "paused",
        "type": "bool"
      },
      {
        "name": "stream",
        "type": "VideoStream"
      },
      {
        "name": "stream_position",
        "type": "float"
      },
      {
        "name": "volume",
        "type": "float"
      },
      {
        "name": "volume_db",
        "type": "float"
      }
    ]
  },
  "Viewport": {
    "methods": [
      {
        "name": "find_world_2d",
        "parameters": [],
        "return_type": "World2D"
      },
      {
        "name": "find_world_3d",
        "parameters": [],
        "return_type": "World3D"
      },
      {
        "name": "get_audio_listener_2d",
        "parameters": [],
        "return_type": "AudioListener2D"
      },
      {
        "name": "get_audio_listener_3d",
        "parameters": [],
        "return_type": "AudioListener3D"
      },
      {
        "name": "get_camera_2d",
        "parameters": [],
        "return_type": "Camera2D"
      },
      {
        "name": "get_camera_3d",
        "parameters": [],
        "return_type": "Camera3D"
      },
      {
        "name": "get_canvas_cull_mask_bit",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_embedded_subwindows",
        "parameters": [],
        "return_type": "Window[]"
      },
      {
        "name": "get_final_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_mouse_position",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_positional_shadow_atlas_quadrant_subdiv",
        "parameters": [
          {
            "name": "quadrant",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_render_info",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "info",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_screen_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_stretch_transform",
        "parameters": [],
        "return_type": "Transform2D"
      },
      {
        "name": "get_texture",
        "parameters": [],
        "return_type": "ViewportTexture"
      },
      {
        "name": "get_viewport_rid",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_visible_rect",
        "parameters": [],
        "return_type": "Rect2"
      },
      {
        "name": "gui_cancel_drag",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "gui_get_drag_data",
        "parameters": [],
        "return_type": "Variant"
      },
      {
        "name": "gui_get_focus_owner",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "gui_get_hovered_control",
        "parameters": [],
        "return_type": "Control"
      },
      {
        "name": "gui_is_drag_successful",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "gui_is_dragging",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "gui_release_focus",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_input_handled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "notify_mouse_entered",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "notify_mouse_exited",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "push_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "in_local_coords",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_text_input",
        "parameters": [
          {
            "name": "text",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "push_unhandled_input",
        "parameters": [
          {
            "name": "event",
            "type": "InputEvent"
          },
          {
            "name": "in_local_coords",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_canvas_cull_mask_bit",
        "parameters": [
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_as_handled",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_positional_shadow_atlas_quadrant_subdiv",
        "parameters": [
          {
            "name": "quadrant",
            "type": "int"
          },
          {
            "name": "subdiv",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "update_mouse_cursor_state",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "warp_mouse",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Viewport",
    "parent": "Node",
    "properties": [
      {
        "name": "anisotropic_filtering_level",
        "type": "int"
      },
      {
        "name": "audio_listener_enable_2d",
        "type": "bool"
      },
      {
        "name": "audio_listener_enable_3d",
        "type": "bool"
      },
      {
        "name": "canvas_cull_mask",
        "type": "int"
      },
      {
        "name": "canvas_item_default_texture_filter",
        "type": "int"
      },
      {
        "name": "canvas_item_default_texture_repeat",
        "type": "int"
      },
      {
        "name": "canvas_transform",
        "type": "Transform2D"
      },
      {
        "name": "debug_draw",
        "type": "int"
      },
      {
        "name": "disable_3d",
        "type": "bool"
      },
      {
        "name": "fsr_sharpness",
        "type": "float"
      },
      {
        "name": "global_canvas_transform",
        "type": "Transform2D"
      },
      {
        "name": "gui_disable_input",
        "type": "bool"
      },
      {
        "name": "gui_embed_subwindows",
        "type": "bool"
      },
      {
        "name": "gui_snap_controls_to_pixels",
        "type": "bool"
      },
      {
        "name": "handle_input_locally",
        "type": "bool"
      },
      {
        "name": "mesh_lod_threshold",
        "type": "float"
      },
      {
        "name": "msaa_2d",
        "type": "int"
      },
      {
        "name": "msaa_3d",
        "type": "int"
      },
      {
        "name": "own_world_3d",
        "type": "bool"
      },
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "physics_object_picking",
        "type": "bool"
      },
      {
        "name": "physics_object_picking_first_only",
        "type": "bool"
      },
      {
        "name": "physics_object_picking_sort",
        "type": "bool"
      },
      {
        "name": "positional_shadow_atlas_16_bits",
        "type": "bool"
      },
      {
        "name": "positional_shadow_atlas_quad_0",
        "type": "int"
      },
      {
        "name": "positional_shadow_atlas_quad_1",
        "type": "int"
      },
      {
        "name": "positional_shadow_atlas_quad_2",
        "type": "int"
      },
      {
        "name": "positional_shadow_atlas_quad_3",
        "type": "int"
      },
      {
        "name": "positional_shadow_atlas_size",
        "type": "int"
      },
      {
        "name": "scaling_3d_mode",
        "type": "int"
      },
      {
        "name": "scaling_3d_scale",
        "type": "float"
      },
      {
        "name": "screen_space_aa",
        "type": "int"
      },
      {
        "name": "sdf_oversize",
        "type": "int"
      },
      {
        "name": "sdf_scale",
        "type": "int"
      },
      {
        "name": "snap_2d_transforms_to_pixel",
        "type": "bool"
      },
      {
        "name": "snap_2d_vertices_to_pixel",
        "type": "bool"
      },
      {
        "name": "texture_mipmap_bias",
        "type": "float"
      },
      {
        "name": "transparent_bg",
        "type": "bool"
      },
      {
        "name": "use_debanding",
        "type": "bool"
      },
      {
        "name": "use_hdr_2d",
        "type": "bool"
      },
      {
        "name": "use_occlusion_culling",
        "type": "bool"
      },
      {
        "name": "use_taa",
        "type": "bool"
      },
      {
        "name": "use_xr",
        "type": "bool"
      },
      {
        "name": "vrs_mode",
        "type": "int"
      },
      {
        "name": "vrs_texture",
        "type": "Texture2D"
      },
      {
        "name": "vrs_update_mode",
        "type": "int"
      },
      {
        "name": "world_2d",
        "type": "World2D"
      },
      {
        "name": "world_3d",
        "type": "World3D"
      }
    ]
  },
  "ViewportTexture": {
    "methods": [],
    "name": "ViewportTexture",
    "parent": "Texture2D",
    "properties": [
      {
        "name": "viewport_path",
        "type": "NodePath"
      }
    ]
  },
  "VisibleOnScreenEnabler2D": {
    "methods": [],
    "name": "VisibleOnScreenEnabler2D",
    "parent": "VisibleOnScreenNotifier2D",
    "properties": [
      {
        "name": "enable_mode",
        "type": "int"
      },
      {
        "name": "enable_node_path",
        "type": "NodePath"
      }
    ]
  },
  "VisibleOnScreenEnabler3D": {
    "methods": [],
    "name": "VisibleOnScreenEnabler3D",
    "parent": "VisibleOnScreenNotifier3D",
    "properties": [
      {
        "name": "enable_mode",
        "type": "int"
      },
      {
        "name": "enable_node_path",
        "type": "NodePath"
      }
    ]
  },
  "VisibleOnScreenNotifier2D": {
    "methods": [
      {
        "name": "is_on_screen",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "VisibleOnScreenNotifier2D",
    "parent": "Node2D",
    "properties": [
      {
        "name": "rect",
        "type": "Rect2"
      }
    ]
  },
  "VisibleOnScreenNotifier3D": {
    "methods": [
      {
        "name": "is_on_screen",
        "parameters": [],
        "return_type": "bool"
      }
    ],
    "name": "VisibleOnScreenNotifier3D",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "aabb",
        "type": "AABB"
      }
    ]
  },
  "VisualInstance3D": {
    "methods": [
      {
        "name": "_get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_aabb",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_base",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_instance",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_layer_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_base",
        "parameters": [
          {
            "name": "base",
            "type": "RID"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layer_mask_value",
        "parameters": [
          {
            "name": "layer_number",
            "type": "int"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "VisualInstance3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "layers",
        "type": "int"
      },
      {
        "name": "sorting_offset",
        "type": "float"
      },
      {
        "name": "sorting_use_aabb_center",
        "type": "bool"
      }
    ]
  },
  "VisualShader": {
    "methods": [
      {
        "name": "add_node",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "node",
            "type": "VisualShaderNode"
          },
          {
            "name": "position",
            "type": "Vector2"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_varying",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "attach_node_to_frame",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "frame",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "can_connect_nodes",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "from_node",
            "type": "int"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "int"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "connect_nodes",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "from_node",
            "type": "int"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "int"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "connect_nodes_forced",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "from_node",
            "type": "int"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "int"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "detach_node_from_frame",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "disconnect_nodes",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "from_node",
            "type": "int"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "int"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_node",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "VisualShaderNode"
      },
      {
        "name": "get_node_connections",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_node_list",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_node_position",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "get_valid_node_id",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "has_varying",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_node_connection",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "from_node",
            "type": "int"
          },
          {
            "name": "from_port",
            "type": "int"
          },
          {
            "name": "to_node",
            "type": "int"
          },
          {
            "name": "to_port",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_node",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_varying",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "replace_node",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "new_class",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_node_position",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "position",
            "type": "Vector2"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "VisualShader",
    "parent": "Shader",
    "properties": [
      {
        "name": "graph_offset",
        "type": "Vector2"
      }
    ]
  },
  "VisualShaderNode": {
    "methods": [
      {
        "name": "clear_default_input_values",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_default_input_port",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_default_input_values",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_input_port_default_value",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "remove_input_port_default_value",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_default_input_values",
        "parameters": [
          {
            "name": "values",
            "type": "Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_port_default_value",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          },
          {
            "name": "value",
            "type": "Variant"
          },
          {
            "name": "prev_value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "VisualShaderNode",
    "parent": "Resource",
    "properties": [
      {
        "name": "linked_parent_graph_frame",
        "type": "int"
      },
      {
        "name": "output_port_for_preview",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeBillboard": {
    "methods": [],
    "name": "VisualShaderNodeBillboard",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "billboard_type",
        "type": "int"
      },
      {
        "name": "keep_scale",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeBooleanConstant": {
    "methods": [],
    "name": "VisualShaderNodeBooleanConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeBooleanParameter": {
    "methods": [],
    "name": "VisualShaderNodeBooleanParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "bool"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeClamp": {
    "methods": [],
    "name": "VisualShaderNodeClamp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeColorConstant": {
    "methods": [],
    "name": "VisualShaderNodeColorConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "Color"
      }
    ]
  },
  "VisualShaderNodeColorFunc": {
    "methods": [],
    "name": "VisualShaderNodeColorFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeColorOp": {
    "methods": [],
    "name": "VisualShaderNodeColorOp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeColorParameter": {
    "methods": [],
    "name": "VisualShaderNodeColorParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "Color"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeComment": {
    "methods": [],
    "name": "VisualShaderNodeComment",
    "parent": "VisualShaderNodeFrame",
    "properties": [
      {
        "name": "description",
        "type": "String"
      }
    ]
  },
  "VisualShaderNodeCompare": {
    "methods": [],
    "name": "VisualShaderNodeCompare",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "condition",
        "type": "int"
      },
      {
        "name": "function",
        "type": "int"
      },
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeConstant": {
    "methods": [],
    "name": "VisualShaderNodeConstant",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeCubemap": {
    "methods": [],
    "name": "VisualShaderNodeCubemap",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "cube_map",
        "type": "TextureLayered"
      },
      {
        "name": "source",
        "type": "int"
      },
      {
        "name": "texture_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeCubemapParameter": {
    "methods": [],
    "name": "VisualShaderNodeCubemapParameter",
    "parent": "VisualShaderNodeTextureParameter",
    "properties": []
  },
  "VisualShaderNodeCurveTexture": {
    "methods": [],
    "name": "VisualShaderNodeCurveTexture",
    "parent": "VisualShaderNodeResizableBase",
    "properties": [
      {
        "name": "texture",
        "type": "CurveTexture"
      }
    ]
  },
  "VisualShaderNodeCurveXYZTexture": {
    "methods": [],
    "name": "VisualShaderNodeCurveXYZTexture",
    "parent": "VisualShaderNodeResizableBase",
    "properties": [
      {
        "name": "texture",
        "type": "CurveXYZTexture"
      }
    ]
  },
  "VisualShaderNodeCustom": {
    "methods": [
      {
        "name": "_get_category",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_code",
        "parameters": [
          {
            "name": "input_vars",
            "type": "String[]"
          },
          {
            "name": "output_vars",
            "type": "String[]"
          },
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_default_input_port",
        "parameters": [
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_description",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_func_code",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_global_code",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_input_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_input_port_default_value",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "_get_input_port_name",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_input_port_type",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "_get_output_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_output_port_name",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_output_port_type",
        "parameters": [
          {
            "name": "port",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_property_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_property_default_index",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "_get_property_name",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "_get_property_options",
        "parameters": [
          {
            "name": "index",
            "type": "int"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_return_icon_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_is_available",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_is_highend",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_option_index",
        "parameters": [
          {
            "name": "option",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "VisualShaderNodeCustom",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeDerivativeFunc": {
    "methods": [],
    "name": "VisualShaderNodeDerivativeFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      },
      {
        "name": "op_type",
        "type": "int"
      },
      {
        "name": "precision",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeDeterminant": {
    "methods": [],
    "name": "VisualShaderNodeDeterminant",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeDistanceFade": {
    "methods": [],
    "name": "VisualShaderNodeDistanceFade",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeDotProduct": {
    "methods": [],
    "name": "VisualShaderNodeDotProduct",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeExpression": {
    "methods": [],
    "name": "VisualShaderNodeExpression",
    "parent": "VisualShaderNodeGroupBase",
    "properties": [
      {
        "name": "expression",
        "type": "String"
      }
    ]
  },
  "VisualShaderNodeFaceForward": {
    "methods": [],
    "name": "VisualShaderNodeFaceForward",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeFloatConstant": {
    "methods": [],
    "name": "VisualShaderNodeFloatConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "float"
      }
    ]
  },
  "VisualShaderNodeFloatFunc": {
    "methods": [],
    "name": "VisualShaderNodeFloatFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeFloatOp": {
    "methods": [],
    "name": "VisualShaderNodeFloatOp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeFloatParameter": {
    "methods": [],
    "name": "VisualShaderNodeFloatParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "float"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      },
      {
        "name": "hint",
        "type": "int"
      },
      {
        "name": "max",
        "type": "float"
      },
      {
        "name": "min",
        "type": "float"
      },
      {
        "name": "step",
        "type": "float"
      }
    ]
  },
  "VisualShaderNodeFrame": {
    "methods": [
      {
        "name": "add_attached_node",
        "parameters": [
          {
            "name": "node",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_attached_node",
        "parameters": [
          {
            "name": "node",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "VisualShaderNodeFrame",
    "parent": "VisualShaderNodeResizableBase",
    "properties": [
      {
        "name": "attached_nodes",
        "type": "PackedInt32Array"
      },
      {
        "name": "autoshrink",
        "type": "bool"
      },
      {
        "name": "tint_color",
        "type": "Color"
      },
      {
        "name": "tint_color_enabled",
        "type": "bool"
      },
      {
        "name": "title",
        "type": "String"
      }
    ]
  },
  "VisualShaderNodeFresnel": {
    "methods": [],
    "name": "VisualShaderNodeFresnel",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeGlobalExpression": {
    "methods": [],
    "name": "VisualShaderNodeGlobalExpression",
    "parent": "VisualShaderNodeExpression",
    "properties": []
  },
  "VisualShaderNodeGroupBase": {
    "methods": [
      {
        "name": "add_input_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_output_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_input_ports",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "clear_output_ports",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_free_input_port_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_free_output_port_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_input_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_inputs",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_output_port_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_outputs",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "has_input_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_output_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_valid_port_name",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "remove_input_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_output_port",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_port_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input_port_type",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_inputs",
        "parameters": [
          {
            "name": "inputs",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_output_port_name",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_output_port_type",
        "parameters": [
          {
            "name": "id",
            "type": "int"
          },
          {
            "name": "type",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_outputs",
        "parameters": [
          {
            "name": "outputs",
            "type": "String"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "VisualShaderNodeGroupBase",
    "parent": "VisualShaderNodeResizableBase",
    "properties": []
  },
  "VisualShaderNodeIf": {
    "methods": [],
    "name": "VisualShaderNodeIf",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeInput": {
    "methods": [
      {
        "name": "get_input_real_name",
        "parameters": [],
        "return_type": "String"
      }
    ],
    "name": "VisualShaderNodeInput",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "input_name",
        "type": "String"
      }
    ]
  },
  "VisualShaderNodeIntConstant": {
    "methods": [],
    "name": "VisualShaderNodeIntConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeIntFunc": {
    "methods": [],
    "name": "VisualShaderNodeIntFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeIntOp": {
    "methods": [],
    "name": "VisualShaderNodeIntOp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeIntParameter": {
    "methods": [],
    "name": "VisualShaderNodeIntParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "int"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      },
      {
        "name": "enum_names",
        "type": "PackedStringArray"
      },
      {
        "name": "hint",
        "type": "int"
      },
      {
        "name": "max",
        "type": "int"
      },
      {
        "name": "min",
        "type": "int"
      },
      {
        "name": "step",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeIs": {
    "methods": [],
    "name": "VisualShaderNodeIs",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeLinearSceneDepth": {
    "methods": [],
    "name": "VisualShaderNodeLinearSceneDepth",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeMix": {
    "methods": [],
    "name": "VisualShaderNodeMix",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeMultiplyAdd": {
    "methods": [],
    "name": "VisualShaderNodeMultiplyAdd",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeOuterProduct": {
    "methods": [],
    "name": "VisualShaderNodeOuterProduct",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeOutput": {
    "methods": [],
    "name": "VisualShaderNodeOutput",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeParameter": {
    "methods": [],
    "name": "VisualShaderNodeParameter",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "parameter_name",
        "type": "String"
      },
      {
        "name": "qualifier",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeParameterRef": {
    "methods": [],
    "name": "VisualShaderNodeParameterRef",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "parameter_name",
        "type": "String"
      }
    ]
  },
  "VisualShaderNodeParticleAccelerator": {
    "methods": [],
    "name": "VisualShaderNodeParticleAccelerator",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "mode",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeParticleBoxEmitter": {
    "methods": [],
    "name": "VisualShaderNodeParticleBoxEmitter",
    "parent": "VisualShaderNodeParticleEmitter",
    "properties": []
  },
  "VisualShaderNodeParticleConeVelocity": {
    "methods": [],
    "name": "VisualShaderNodeParticleConeVelocity",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeParticleEmit": {
    "methods": [],
    "name": "VisualShaderNodeParticleEmit",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "flags",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeParticleEmitter": {
    "methods": [],
    "name": "VisualShaderNodeParticleEmitter",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "mode_2d",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeParticleMeshEmitter": {
    "methods": [],
    "name": "VisualShaderNodeParticleMeshEmitter",
    "parent": "VisualShaderNodeParticleEmitter",
    "properties": [
      {
        "name": "mesh",
        "type": "Mesh"
      },
      {
        "name": "surface_index",
        "type": "int"
      },
      {
        "name": "use_all_surfaces",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeParticleMultiplyByAxisAngle": {
    "methods": [],
    "name": "VisualShaderNodeParticleMultiplyByAxisAngle",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "degrees_mode",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeParticleOutput": {
    "methods": [],
    "name": "VisualShaderNodeParticleOutput",
    "parent": "VisualShaderNodeOutput",
    "properties": []
  },
  "VisualShaderNodeParticleRandomness": {
    "methods": [],
    "name": "VisualShaderNodeParticleRandomness",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeParticleRingEmitter": {
    "methods": [],
    "name": "VisualShaderNodeParticleRingEmitter",
    "parent": "VisualShaderNodeParticleEmitter",
    "properties": []
  },
  "VisualShaderNodeParticleSphereEmitter": {
    "methods": [],
    "name": "VisualShaderNodeParticleSphereEmitter",
    "parent": "VisualShaderNodeParticleEmitter",
    "properties": []
  },
  "VisualShaderNodeProximityFade": {
    "methods": [],
    "name": "VisualShaderNodeProximityFade",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeRandomRange": {
    "methods": [],
    "name": "VisualShaderNodeRandomRange",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeRemap": {
    "methods": [],
    "name": "VisualShaderNodeRemap",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeReroute": {
    "methods": [
      {
        "name": "get_port_type",
        "parameters": [],
        "return_type": "int"
      }
    ],
    "name": "VisualShaderNodeReroute",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeResizableBase": {
    "methods": [],
    "name": "VisualShaderNodeResizableBase",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "size",
        "type": "Vector2"
      }
    ]
  },
  "VisualShaderNodeRotationByAxis": {
    "methods": [],
    "name": "VisualShaderNodeRotationByAxis",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeSDFRaymarch": {
    "methods": [],
    "name": "VisualShaderNodeSDFRaymarch",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeSDFToScreenUV": {
    "methods": [],
    "name": "VisualShaderNodeSDFToScreenUV",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeSample3D": {
    "methods": [],
    "name": "VisualShaderNodeSample3D",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "source",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeScreenNormalWorldSpace": {
    "methods": [],
    "name": "VisualShaderNodeScreenNormalWorldSpace",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeScreenUVToSDF": {
    "methods": [],
    "name": "VisualShaderNodeScreenUVToSDF",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeSmoothStep": {
    "methods": [],
    "name": "VisualShaderNodeSmoothStep",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeStep": {
    "methods": [],
    "name": "VisualShaderNodeStep",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeSwitch": {
    "methods": [],
    "name": "VisualShaderNodeSwitch",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeTexture": {
    "methods": [],
    "name": "VisualShaderNodeTexture",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "source",
        "type": "int"
      },
      {
        "name": "texture",
        "type": "Texture2D"
      },
      {
        "name": "texture_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeTexture2DArray": {
    "methods": [],
    "name": "VisualShaderNodeTexture2DArray",
    "parent": "VisualShaderNodeSample3D",
    "properties": [
      {
        "name": "texture_array",
        "type": "TextureLayered"
      }
    ]
  },
  "VisualShaderNodeTexture2DArrayParameter": {
    "methods": [],
    "name": "VisualShaderNodeTexture2DArrayParameter",
    "parent": "VisualShaderNodeTextureParameter",
    "properties": []
  },
  "VisualShaderNodeTexture2DParameter": {
    "methods": [],
    "name": "VisualShaderNodeTexture2DParameter",
    "parent": "VisualShaderNodeTextureParameter",
    "properties": []
  },
  "VisualShaderNodeTexture3D": {
    "methods": [],
    "name": "VisualShaderNodeTexture3D",
    "parent": "VisualShaderNodeSample3D",
    "properties": [
      {
        "name": "texture",
        "type": "Texture3D"
      }
    ]
  },
  "VisualShaderNodeTexture3DParameter": {
    "methods": [],
    "name": "VisualShaderNodeTexture3DParameter",
    "parent": "VisualShaderNodeTextureParameter",
    "properties": []
  },
  "VisualShaderNodeTextureParameter": {
    "methods": [],
    "name": "VisualShaderNodeTextureParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "color_default",
        "type": "int"
      },
      {
        "name": "texture_filter",
        "type": "int"
      },
      {
        "name": "texture_repeat",
        "type": "int"
      },
      {
        "name": "texture_source",
        "type": "int"
      },
      {
        "name": "texture_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeTextureParameterTriplanar": {
    "methods": [],
    "name": "VisualShaderNodeTextureParameterTriplanar",
    "parent": "VisualShaderNodeTextureParameter",
    "properties": []
  },
  "VisualShaderNodeTextureSDF": {
    "methods": [],
    "name": "VisualShaderNodeTextureSDF",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeTextureSDFNormal": {
    "methods": [],
    "name": "VisualShaderNodeTextureSDFNormal",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeTransformCompose": {
    "methods": [],
    "name": "VisualShaderNodeTransformCompose",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeTransformConstant": {
    "methods": [],
    "name": "VisualShaderNodeTransformConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "Transform3D"
      }
    ]
  },
  "VisualShaderNodeTransformDecompose": {
    "methods": [],
    "name": "VisualShaderNodeTransformDecompose",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeTransformFunc": {
    "methods": [],
    "name": "VisualShaderNodeTransformFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeTransformOp": {
    "methods": [],
    "name": "VisualShaderNodeTransformOp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeTransformParameter": {
    "methods": [],
    "name": "VisualShaderNodeTransformParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "Transform3D"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeTransformVecMult": {
    "methods": [],
    "name": "VisualShaderNodeTransformVecMult",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeUIntConstant": {
    "methods": [],
    "name": "VisualShaderNodeUIntConstant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeUIntFunc": {
    "methods": [],
    "name": "VisualShaderNodeUIntFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeUIntOp": {
    "methods": [],
    "name": "VisualShaderNodeUIntOp",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeUIntParameter": {
    "methods": [],
    "name": "VisualShaderNodeUIntParameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "int"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeUVFunc": {
    "methods": [],
    "name": "VisualShaderNodeUVFunc",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeUVPolarCoord": {
    "methods": [],
    "name": "VisualShaderNodeUVPolarCoord",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VisualShaderNodeVarying": {
    "methods": [],
    "name": "VisualShaderNodeVarying",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "varying_name",
        "type": "String"
      },
      {
        "name": "varying_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeVaryingGetter": {
    "methods": [],
    "name": "VisualShaderNodeVaryingGetter",
    "parent": "VisualShaderNodeVarying",
    "properties": []
  },
  "VisualShaderNodeVaryingSetter": {
    "methods": [],
    "name": "VisualShaderNodeVaryingSetter",
    "parent": "VisualShaderNodeVarying",
    "properties": []
  },
  "VisualShaderNodeVec2Constant": {
    "methods": [],
    "name": "VisualShaderNodeVec2Constant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "Vector2"
      }
    ]
  },
  "VisualShaderNodeVec2Parameter": {
    "methods": [],
    "name": "VisualShaderNodeVec2Parameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "Vector2"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeVec3Constant": {
    "methods": [],
    "name": "VisualShaderNodeVec3Constant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "Vector3"
      }
    ]
  },
  "VisualShaderNodeVec3Parameter": {
    "methods": [],
    "name": "VisualShaderNodeVec3Parameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "Vector3"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeVec4Constant": {
    "methods": [],
    "name": "VisualShaderNodeVec4Constant",
    "parent": "VisualShaderNodeConstant",
    "properties": [
      {
        "name": "constant",
        "type": "Quaternion"
      }
    ]
  },
  "VisualShaderNodeVec4Parameter": {
    "methods": [],
    "name": "VisualShaderNodeVec4Parameter",
    "parent": "VisualShaderNodeParameter",
    "properties": [
      {
        "name": "default_value",
        "type": "Vector4"
      },
      {
        "name": "default_value_enabled",
        "type": "bool"
      }
    ]
  },
  "VisualShaderNodeVectorBase": {
    "methods": [],
    "name": "VisualShaderNodeVectorBase",
    "parent": "VisualShaderNode",
    "properties": [
      {
        "name": "op_type",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeVectorCompose": {
    "methods": [],
    "name": "VisualShaderNodeVectorCompose",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeVectorDecompose": {
    "methods": [],
    "name": "VisualShaderNodeVectorDecompose",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeVectorDistance": {
    "methods": [],
    "name": "VisualShaderNodeVectorDistance",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeVectorFunc": {
    "methods": [],
    "name": "VisualShaderNodeVectorFunc",
    "parent": "VisualShaderNodeVectorBase",
    "properties": [
      {
        "name": "function",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeVectorLen": {
    "methods": [],
    "name": "VisualShaderNodeVectorLen",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeVectorOp": {
    "methods": [],
    "name": "VisualShaderNodeVectorOp",
    "parent": "VisualShaderNodeVectorBase",
    "properties": [
      {
        "name": "operator",
        "type": "int"
      }
    ]
  },
  "VisualShaderNodeVectorRefract": {
    "methods": [],
    "name": "VisualShaderNodeVectorRefract",
    "parent": "VisualShaderNodeVectorBase",
    "properties": []
  },
  "VisualShaderNodeWorldPositionFromDepth": {
    "methods": [],
    "name": "VisualShaderNodeWorldPositionFromDepth",
    "parent": "VisualShaderNode",
    "properties": []
  },
  "VoxelGI": {
    "methods": [
      {
        "name": "bake",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "create_visual_debug",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "debug_bake",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "VoxelGI",
    "parent": "VisualInstance3D",
    "properties": [
      {
        "name": "camera_attributes",
        "type": "CameraAttributes"
      },
      {
        "name": "data",
        "type": "VoxelGIData"
      },
      {
        "name": "size",
        "type": "Vector3"
      },
      {
        "name": "subdiv",
        "type": "int"
      }
    ]
  },
  "VoxelGIData": {
    "methods": [
      {
        "name": "allocate",
        "parameters": [
          {
            "name": "to_cell_xform",
            "type": "Transform3D"
          },
          {
            "name": "aabb",
            "type": "AABB"
          },
          {
            "name": "octree_size",
            "type": "Vector3"
          },
          {
            "name": "octree_cells",
            "type": "PackedByteArray"
          },
          {
            "name": "data_cells",
            "type": "PackedByteArray"
          },
          {
            "name": "distance_field",
            "type": "PackedByteArray"
          },
          {
            "name": "level_counts",
            "type": "PackedInt32Array"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_bounds",
        "parameters": [],
        "return_type": "AABB"
      },
      {
        "name": "get_data_cells",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_level_counts",
        "parameters": [],
        "return_type": "PackedInt32Array"
      },
      {
        "name": "get_octree_cells",
        "parameters": [],
        "return_type": "PackedByteArray"
      },
      {
        "name": "get_octree_size",
        "parameters": [],
        "return_type": "Vector3"
      },
      {
        "name": "get_to_cell_xform",
        "parameters": [],
        "return_type": "Transform3D"
      }
    ],
    "name": "VoxelGIData",
    "parent": "Resource",
    "properties": [
      {
        "name": "bias",
        "type": "float"
      },
      {
        "name": "dynamic_range",
        "type": "float"
      },
      {
        "name": "energy",
        "type": "float"
      },
      {
        "name": "interior",
        "type": "bool"
      },
      {
        "name": "normal_bias",
        "type": "float"
      },
      {
        "name": "propagation",
        "type": "float"
      },
      {
        "name": "use_two_bounces",
        "type": "bool"
      }
    ]
  },
  "WeakRef": {
    "methods": [
      {
        "name": "get_ref",
        "parameters": [],
        "return_type": "Variant"
      }
    ],
    "name": "WeakRef",
    "parent": "RefCounted",
    "properties": []
  },
  "Window": {
    "methods": [
      {
        "name": "_get_contents_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "add_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "color",
            "type": "Color"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "constant",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "font",
            "type": "Font"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "font_size",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "texture",
            "type": "Texture2D"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "stylebox",
            "type": "StyleBox"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "begin_bulk_theme_override",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "can_draw",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "child_controls_changed",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "end_bulk_theme_override",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "get_contents_minimum_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "get_layout_direction",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_position_with_decorations",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_size_with_decorations",
        "parameters": [],
        "return_type": "Vector2i"
      },
      {
        "name": "get_theme_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Color"
      },
      {
        "name": "get_theme_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_theme_default_base_scale",
        "parameters": [],
        "return_type": "float"
      },
      {
        "name": "get_theme_default_font",
        "parameters": [],
        "return_type": "Font"
      },
      {
        "name": "get_theme_default_font_size",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_theme_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Font"
      },
      {
        "name": "get_theme_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_theme_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "Texture2D"
      },
      {
        "name": "get_theme_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "StyleBox"
      },
      {
        "name": "get_window_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "grab_focus",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "has_focus",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "has_theme_color",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_constant",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_size",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_icon",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_stylebox",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "theme_type",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "has_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "hide",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "is_embedded",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_layout_rtl",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_maximize_allowed",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_using_font_oversampling",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "move_to_center",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "move_to_foreground",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "popup",
        "parameters": [
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_centered",
        "parameters": [
          {
            "name": "minsize",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_centered_clamped",
        "parameters": [
          {
            "name": "minsize",
            "type": "Vector2i"
          },
          {
            "name": "fallback_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_centered_ratio",
        "parameters": [
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_exclusive",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_exclusive_centered",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "minsize",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_exclusive_centered_clamped",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "minsize",
            "type": "Vector2i"
          },
          {
            "name": "fallback_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_exclusive_centered_ratio",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_exclusive_on_parent",
        "parameters": [
          {
            "name": "from_node",
            "type": "Node"
          },
          {
            "name": "parent_rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "popup_on_parent",
        "parameters": [
          {
            "name": "parent_rect",
            "type": "Rect2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_color_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_constant_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_font_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_font_size_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_icon_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_theme_stylebox_override",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "request_attention",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "reset_size",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "set_flag",
        "parameters": [
          {
            "name": "flag",
            "type": "int"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ime_active",
        "parameters": [
          {
            "name": "active",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_ime_position",
        "parameters": [
          {
            "name": "position",
            "type": "Vector2i"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_layout_direction",
        "parameters": [
          {
            "name": "direction",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_unparent_when_invisible",
        "parameters": [
          {
            "name": "unparent",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_use_font_oversampling",
        "parameters": [
          {
            "name": "enable",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "show",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "start_drag",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "start_resize",
        "parameters": [
          {
            "name": "edge",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "Window",
    "parent": "Viewport",
    "properties": [
      {
        "name": "always_on_top",
        "type": "bool"
      },
      {
        "name": "auto_translate",
        "type": "bool"
      },
      {
        "name": "borderless",
        "type": "bool"
      },
      {
        "name": "content_scale_aspect",
        "type": "int"
      },
      {
        "name": "content_scale_factor",
        "type": "float"
      },
      {
        "name": "content_scale_mode",
        "type": "int"
      },
      {
        "name": "content_scale_size",
        "type": "Vector2i"
      },
      {
        "name": "content_scale_stretch",
        "type": "int"
      },
      {
        "name": "current_screen",
        "type": "int"
      },
      {
        "name": "exclude_from_capture",
        "type": "bool"
      },
      {
        "name": "exclusive",
        "type": "bool"
      },
      {
        "name": "extend_to_title",
        "type": "bool"
      },
      {
        "name": "force_native",
        "type": "bool"
      },
      {
        "name": "initial_position",
        "type": "int"
      },
      {
        "name": "keep_title_visible",
        "type": "bool"
      },
      {
        "name": "max_size",
        "type": "Vector2i"
      },
      {
        "name": "min_size",
        "type": "Vector2i"
      },
      {
        "name": "mode",
        "type": "int"
      },
      {
        "name": "mouse_passthrough",
        "type": "bool"
      },
      {
        "name": "mouse_passthrough_polygon",
        "type": "PackedVector2Array"
      },
      {
        "name": "popup_window",
        "type": "bool"
      },
      {
        "name": "position",
        "type": "Vector2i"
      },
      {
        "name": "sharp_corners",
        "type": "bool"
      },
      {
        "name": "size",
        "type": "Vector2i"
      },
      {
        "name": "theme",
        "type": "Theme"
      },
      {
        "name": "theme_type_variation",
        "type": "StringName"
      },
      {
        "name": "title",
        "type": "String"
      },
      {
        "name": "transient",
        "type": "bool"
      },
      {
        "name": "transient_to_focused",
        "type": "bool"
      },
      {
        "name": "transparent",
        "type": "bool"
      },
      {
        "name": "unfocusable",
        "type": "bool"
      },
      {
        "name": "unresizable",
        "type": "bool"
      },
      {
        "name": "visible",
        "type": "bool"
      },
      {
        "name": "wrap_controls",
        "type": "bool"
      }
    ]
  },
  "WorkerThreadPool": {
    "methods": [
      {
        "name": "add_group_task",
        "parameters": [
          {
            "name": "action",
            "type": "Callable"
          },
          {
            "name": "elements",
            "type": "int"
          },
          {
            "name": "tasks_needed",
            "type": "int"
          },
          {
            "name": "high_priority",
            "type": "bool"
          },
          {
            "name": "description",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "add_task",
        "parameters": [
          {
            "name": "action",
            "type": "Callable"
          },
          {
            "name": "high_priority",
            "type": "bool"
          },
          {
            "name": "description",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_group_processed_element_count",
        "parameters": [
          {
            "name": "group_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "is_group_task_completed",
        "parameters": [
          {
            "name": "group_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_task_completed",
        "parameters": [
          {
            "name": "task_id",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "wait_for_group_task_completion",
        "parameters": [
          {
            "name": "group_id",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "wait_for_task_completion",
        "parameters": [
          {
            "name": "task_id",
            "type": "int"
          }
        ],
        "return_type": "int"
      }
    ],
    "name": "WorkerThreadPool",
    "parent": "Object",
    "properties": []
  },
  "World2D": {
    "methods": [],
    "name": "World2D",
    "parent": "Resource",
    "properties": [
      {
        "name": "canvas",
        "type": "RID"
      },
      {
        "name": "direct_space_state",
        "type": "PhysicsDirectSpaceState2D"
      },
      {
        "name": "navigation_map",
        "type": "RID"
      },
      {
        "name": "space",
        "type": "RID"
      }
    ]
  },
  "World3D": {
    "methods": [],
    "name": "World3D",
    "parent": "Resource",
    "properties": [
      {
        "name": "camera_attributes",
        "type": "CameraAttributes"
      },
      {
        "name": "direct_space_state",
        "type": "PhysicsDirectSpaceState3D"
      },
      {
        "name": "environment",
        "type": "Environment"
      },
      {
        "name": "fallback_environment",
        "type": "Environment"
      },
      {
        "name": "navigation_map",
        "type": "RID"
      },
      {
        "name": "scenario",
        "type": "RID"
      },
      {
        "name": "space",
        "type": "RID"
      }
    ]
  },
  "WorldBoundaryShape2D": {
    "methods": [],
    "name": "WorldBoundaryShape2D",
    "parent": "Shape2D",
    "properties": [
      {
        "name": "distance",
        "type": "float"
      },
      {
        "name": "normal",
        "type": "Vector2"
      }
    ]
  },
  "WorldBoundaryShape3D": {
    "methods": [],
    "name": "WorldBoundaryShape3D",
    "parent": "Shape3D",
    "properties": [
      {
        "name": "plane",
        "type": "Plane"
      }
    ]
  },
  "WorldEnvironment": {
    "methods": [],
    "name": "WorldEnvironment",
    "parent": "Node",
    "properties": [
      {
        "name": "camera_attributes",
        "type": "CameraAttributes"
      },
      {
        "name": "compositor",
        "type": "Compositor"
      },
      {
        "name": "environment",
        "type": "Environment"
      }
    ]
  },
  "X509Certificate": {
    "methods": [
      {
        "name": "load",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "load_from_string",
        "parameters": [
          {
            "name": "string",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save",
        "parameters": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "save_to_string",
        "parameters": [],
        "return_type": "String"
      }
    ],
    "name": "X509Certificate",
    "parent": "Resource",
    "properties": []
  },
  "XMLParser": {
    "methods": [
      {
        "name": "get_attribute_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_attribute_name",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_attribute_value",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_current_line",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_named_attribute_value",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_named_attribute_value_safe",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "String"
      },
      {
        "name": "get_node_data",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_node_name",
        "parameters": [],
        "return_type": "String"
      },
      {
        "name": "get_node_offset",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_node_type",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "has_attribute",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "is_empty",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "open",
        "parameters": [
          {
            "name": "file",
            "type": "String"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "open_buffer",
        "parameters": [
          {
            "name": "buffer",
            "type": "PackedByteArray"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "read",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "seek",
        "parameters": [
          {
            "name": "position",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "skip_section",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "XMLParser",
    "parent": "RefCounted",
    "properties": []
  },
  "XRAnchor3D": {
    "methods": [
      {
        "name": "get_plane",
        "parameters": [],
        "return_type": "Plane"
      },
      {
        "name": "get_size",
        "parameters": [],
        "return_type": "Vector3"
      }
    ],
    "name": "XRAnchor3D",
    "parent": "XRNode3D",
    "properties": []
  },
  "XRBodyModifier3D": {
    "methods": [],
    "name": "XRBodyModifier3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "body_tracker",
        "type": "StringName"
      },
      {
        "name": "body_update",
        "type": "int"
      },
      {
        "name": "bone_update",
        "type": "int"
      }
    ]
  },
  "XRBodyTracker": {
    "methods": [
      {
        "name": "get_joint_flags",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_joint_transform",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "set_joint_flags",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_joint_transform",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRBodyTracker",
    "parent": "XRPositionalTracker",
    "properties": [
      {
        "name": "body_flags",
        "type": "int"
      },
      {
        "name": "has_tracking_data",
        "type": "bool"
      },
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "XRCamera3D": {
    "methods": [],
    "name": "XRCamera3D",
    "parent": "Camera3D",
    "properties": [
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      }
    ]
  },
  "XRController3D": {
    "methods": [
      {
        "name": "get_float",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_input",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_tracker_hand",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_vector2",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Vector2"
      },
      {
        "name": "is_button_pressed",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      }
    ],
    "name": "XRController3D",
    "parent": "XRNode3D",
    "properties": []
  },
  "XRControllerTracker": {
    "methods": [],
    "name": "XRControllerTracker",
    "parent": "XRPositionalTracker",
    "properties": [
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "XRFaceModifier3D": {
    "methods": [],
    "name": "XRFaceModifier3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "face_tracker",
        "type": "StringName"
      },
      {
        "name": "target",
        "type": "NodePath"
      }
    ]
  },
  "XRFaceTracker": {
    "methods": [
      {
        "name": "get_blend_shape",
        "parameters": [
          {
            "name": "blend_shape",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "set_blend_shape",
        "parameters": [
          {
            "name": "blend_shape",
            "type": "int"
          },
          {
            "name": "weight",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRFaceTracker",
    "parent": "XRTracker",
    "properties": [
      {
        "name": "blend_shapes",
        "type": "PackedFloat32Array"
      },
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "XRHandModifier3D": {
    "methods": [],
    "name": "XRHandModifier3D",
    "parent": "SkeletonModifier3D",
    "properties": [
      {
        "name": "bone_update",
        "type": "int"
      },
      {
        "name": "hand_tracker",
        "type": "StringName"
      }
    ]
  },
  "XRHandTracker": {
    "methods": [
      {
        "name": "get_hand_joint_angular_velocity",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_hand_joint_flags",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "int"
      },
      {
        "name": "get_hand_joint_linear_velocity",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "Vector3"
      },
      {
        "name": "get_hand_joint_radius",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "float"
      },
      {
        "name": "get_hand_joint_transform",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "set_hand_joint_angular_velocity",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "angular_velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_hand_joint_flags",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "flags",
            "type": "int"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_hand_joint_linear_velocity",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "linear_velocity",
            "type": "Vector3"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_hand_joint_radius",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "radius",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_hand_joint_transform",
        "parameters": [
          {
            "name": "joint",
            "type": "int"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRHandTracker",
    "parent": "XRPositionalTracker",
    "properties": [
      {
        "name": "hand",
        "type": "int"
      },
      {
        "name": "hand_tracking_source",
        "type": "int"
      },
      {
        "name": "has_tracking_data",
        "type": "bool"
      },
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "XRInterface": {
    "methods": [
      {
        "name": "get_camera_feed_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_capabilities",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "get_play_area",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "get_projection_for_view",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "near",
            "type": "float"
          },
          {
            "name": "far",
            "type": "float"
          }
        ],
        "return_type": "Projection"
      },
      {
        "name": "get_render_target_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "get_supported_environment_blend_modes",
        "parameters": [],
        "return_type": "Array"
      },
      {
        "name": "get_system_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "get_tracking_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_transform_for_view",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          },
          {
            "name": "cam_transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "get_view_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "initialize",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_initialized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_passthrough_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "is_passthrough_supported",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "set_environment_blend_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "set_play_area_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "start_passthrough",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "stop_passthrough",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "supports_play_area_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "trigger_haptic_pulse",
        "parameters": [
          {
            "name": "action_name",
            "type": "String"
          },
          {
            "name": "tracker_name",
            "type": "StringName"
          },
          {
            "name": "frequency",
            "type": "float"
          },
          {
            "name": "amplitude",
            "type": "float"
          },
          {
            "name": "duration_sec",
            "type": "float"
          },
          {
            "name": "delay_sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "uninitialize",
        "parameters": [],
        "return_type": "void"
      }
    ],
    "name": "XRInterface",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "ar_is_anchor_detection_enabled",
        "type": "bool"
      },
      {
        "name": "environment_blend_mode",
        "type": "int"
      },
      {
        "name": "interface_is_primary",
        "type": "bool"
      },
      {
        "name": "xr_play_area_mode",
        "type": "int"
      }
    ]
  },
  "XRInterfaceExtension": {
    "methods": [
      {
        "name": "_end_frame",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_get_anchor_detection_is_enabled",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_get_camera_feed_id",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_camera_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "_get_capabilities",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_color_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_depth_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_name",
        "parameters": [],
        "return_type": "StringName"
      },
      {
        "name": "_get_play_area",
        "parameters": [],
        "return_type": "PackedVector3Array"
      },
      {
        "name": "_get_play_area_mode",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_projection_for_view",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          },
          {
            "name": "aspect",
            "type": "float"
          },
          {
            "name": "z_near",
            "type": "float"
          },
          {
            "name": "z_far",
            "type": "float"
          }
        ],
        "return_type": "PackedFloat64Array"
      },
      {
        "name": "_get_render_target_size",
        "parameters": [],
        "return_type": "Vector2"
      },
      {
        "name": "_get_suggested_pose_names",
        "parameters": [
          {
            "name": "tracker_name",
            "type": "StringName"
          }
        ],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_suggested_tracker_names",
        "parameters": [],
        "return_type": "PackedStringArray"
      },
      {
        "name": "_get_system_info",
        "parameters": [],
        "return_type": "Dictionary"
      },
      {
        "name": "_get_tracking_status",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_transform_for_view",
        "parameters": [
          {
            "name": "view",
            "type": "int"
          },
          {
            "name": "cam_transform",
            "type": "Transform3D"
          }
        ],
        "return_type": "Transform3D"
      },
      {
        "name": "_get_velocity_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_get_view_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "_get_vrs_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "_initialize",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_is_initialized",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "_post_draw_viewport",
        "parameters": [
          {
            "name": "render_target",
            "type": "RID"
          },
          {
            "name": "screen_rect",
            "type": "Rect2"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_pre_draw_viewport",
        "parameters": [
          {
            "name": "render_target",
            "type": "RID"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_pre_render",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_process",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "_set_anchor_detection_is_enabled",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_set_play_area_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_supports_play_area_mode",
        "parameters": [
          {
            "name": "mode",
            "type": "int"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "_trigger_haptic_pulse",
        "parameters": [
          {
            "name": "action_name",
            "type": "String"
          },
          {
            "name": "tracker_name",
            "type": "StringName"
          },
          {
            "name": "frequency",
            "type": "float"
          },
          {
            "name": "amplitude",
            "type": "float"
          },
          {
            "name": "duration_sec",
            "type": "float"
          },
          {
            "name": "delay_sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "_uninitialize",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "add_blit",
        "parameters": [
          {
            "name": "render_target",
            "type": "RID"
          },
          {
            "name": "src_rect",
            "type": "Rect2"
          },
          {
            "name": "dst_rect",
            "type": "Rect2i"
          },
          {
            "name": "use_layer",
            "type": "bool"
          },
          {
            "name": "layer",
            "type": "int"
          },
          {
            "name": "apply_lens_distortion",
            "type": "bool"
          },
          {
            "name": "eye_center",
            "type": "Vector2"
          },
          {
            "name": "k1",
            "type": "float"
          },
          {
            "name": "k2",
            "type": "float"
          },
          {
            "name": "upscale",
            "type": "float"
          },
          {
            "name": "aspect_ratio",
            "type": "float"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "get_color_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_depth_texture",
        "parameters": [],
        "return_type": "RID"
      },
      {
        "name": "get_render_target_texture",
        "parameters": [
          {
            "name": "render_target",
            "type": "RID"
          }
        ],
        "return_type": "RID"
      },
      {
        "name": "get_velocity_texture",
        "parameters": [],
        "return_type": "RID"
      }
    ],
    "name": "XRInterfaceExtension",
    "parent": "XRInterface",
    "properties": []
  },
  "XRNode3D": {
    "methods": [
      {
        "name": "get_has_tracking_data",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_is_active",
        "parameters": [],
        "return_type": "bool"
      },
      {
        "name": "get_pose",
        "parameters": [],
        "return_type": "XRPose"
      },
      {
        "name": "trigger_haptic_pulse",
        "parameters": [
          {
            "name": "action_name",
            "type": "String"
          },
          {
            "name": "frequency",
            "type": "float"
          },
          {
            "name": "amplitude",
            "type": "float"
          },
          {
            "name": "duration_sec",
            "type": "float"
          },
          {
            "name": "delay_sec",
            "type": "float"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRNode3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "physics_interpolation_mode",
        "type": "int"
      },
      {
        "name": "pose",
        "type": "StringName"
      },
      {
        "name": "show_when_tracked",
        "type": "bool"
      },
      {
        "name": "tracker",
        "type": "StringName"
      }
    ]
  },
  "XROrigin3D": {
    "methods": [],
    "name": "XROrigin3D",
    "parent": "Node3D",
    "properties": [
      {
        "name": "current",
        "type": "bool"
      },
      {
        "name": "world_scale",
        "type": "float"
      }
    ]
  },
  "XRPose": {
    "methods": [
      {
        "name": "get_adjusted_transform",
        "parameters": [],
        "return_type": "Transform3D"
      }
    ],
    "name": "XRPose",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "angular_velocity",
        "type": "Vector3"
      },
      {
        "name": "has_tracking_data",
        "type": "bool"
      },
      {
        "name": "linear_velocity",
        "type": "Vector3"
      },
      {
        "name": "name",
        "type": "StringName"
      },
      {
        "name": "tracking_confidence",
        "type": "int"
      },
      {
        "name": "transform",
        "type": "Transform3D"
      }
    ]
  },
  "XRPositionalTracker": {
    "methods": [
      {
        "name": "get_input",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "Variant"
      },
      {
        "name": "get_pose",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "XRPose"
      },
      {
        "name": "has_pose",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "bool"
      },
      {
        "name": "invalidate_pose",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_input",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "value",
            "type": "Variant"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "set_pose",
        "parameters": [
          {
            "name": "name",
            "type": "StringName"
          },
          {
            "name": "transform",
            "type": "Transform3D"
          },
          {
            "name": "linear_velocity",
            "type": "Vector3"
          },
          {
            "name": "angular_velocity",
            "type": "Vector3"
          },
          {
            "name": "tracking_confidence",
            "type": "int"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRPositionalTracker",
    "parent": "XRTracker",
    "properties": [
      {
        "name": "hand",
        "type": "int"
      },
      {
        "name": "profile",
        "type": "String"
      }
    ]
  },
  "XRServer": {
    "methods": [
      {
        "name": "add_interface",
        "parameters": [
          {
            "name": "interface",
            "type": "XRInterface"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "add_tracker",
        "parameters": [
          {
            "name": "tracker",
            "type": "XRTracker"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "center_on_hmd",
        "parameters": [
          {
            "name": "rotation_mode",
            "type": "int"
          },
          {
            "name": "keep_height",
            "type": "bool"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "clear_reference_frame",
        "parameters": [],
        "return_type": "void"
      },
      {
        "name": "find_interface",
        "parameters": [
          {
            "name": "name",
            "type": "String"
          }
        ],
        "return_type": "XRInterface"
      },
      {
        "name": "get_hmd_transform",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "get_interface",
        "parameters": [
          {
            "name": "idx",
            "type": "int"
          }
        ],
        "return_type": "XRInterface"
      },
      {
        "name": "get_interface_count",
        "parameters": [],
        "return_type": "int"
      },
      {
        "name": "get_interfaces",
        "parameters": [],
        "return_type": "Dictionary[]"
      },
      {
        "name": "get_reference_frame",
        "parameters": [],
        "return_type": "Transform3D"
      },
      {
        "name": "get_tracker",
        "parameters": [
          {
            "name": "tracker_name",
            "type": "StringName"
          }
        ],
        "return_type": "XRTracker"
      },
      {
        "name": "get_trackers",
        "parameters": [
          {
            "name": "tracker_types",
            "type": "int"
          }
        ],
        "return_type": "Dictionary"
      },
      {
        "name": "remove_interface",
        "parameters": [
          {
            "name": "interface",
            "type": "XRInterface"
          }
        ],
        "return_type": "void"
      },
      {
        "name": "remove_tracker",
        "parameters": [
          {
            "name": "tracker",
            "type": "XRTracker"
          }
        ],
        "return_type": "void"
      }
    ],
    "name": "XRServer",
    "parent": "Object",
    "properties": [
      {
        "name": "camera_locked_to_origin",
        "type": "bool"
      },
      {
        "name": "primary_interface",
        "type": "XRInterface"
      },
      {
        "name": "world_origin",
        "type": "Transform3D"
      },
      {
        "name": "world_scale",
        "type": "float"
      }
    ]
  },
  "XRTracker": {
    "methods": [],
    "name": "XRTracker",
    "parent": "RefCounted",
    "properties": [
      {
        "name": "description",
        "type": "String"
      },
      {
        "name": "name",
        "type": "StringName"
      },
      {
        "name": "type",
        "type": "int"
      }
    ]
  },
  "XRVRS": {
    "methods": [
      {
        "name": "make_vrs_texture",
        "parameters": [
          {
            "name": "target_size",
            "type": "Vector2"
          },
          {
            "name": "eye_foci",
            "type": "PackedVector2Array"
          }
        ],
        "return_type": "RID"
      }
    ],
    "name": "XRVRS",
    "parent": "Object",
    "properties": [
      {
        "name": "vrs_min_radius",
        "type": "float"
      },
      {
        "name": "vrs_render_region",
        "type": "Rect2i"
      },
      {
        "name": "vrs_strength",
        "type": "float"
      }
    ]
  },
  "bool": {
    "methods": [],
    "name": "bool",
    "parent": null,
    "properties": []
  },
  "float": {
    "methods": [],
    "name": "float",
    "parent": null,
    "properties": []
  },
  "int": {
    "methods": [],
    "name": "int",
    "parent": null,
    "properties": []
  }
}